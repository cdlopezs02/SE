

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 23 21:12:01 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.30
    61                           ; Generated 26/08/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F886 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475                           
   476                           	psect	stringtext
   477  0700                     __pstringtext:
   478  0700                     stringtab:
   479  0700                     __stringtab:
   480                           
   481                           ;	String table - string pointers are 2 bytes each
   482  0700  1BFF               	btfsc	btemp+1,7
   483  0701  2F0A               	ljmp	stringcode
   484  0702  1383               	bcf	3,7
   485  0703  187F               	btfsc	btemp+1,0
   486  0704  1783               	bsf	3,7
   487  0705  0800               	movf	0,w
   488  0706  0A84               	incf	4,f
   489  0707  1903               	skipnz
   490  0708  0AFF               	incf	btemp+1,f
   491  0709  0008               	return
   492  070A                     stringcode:
   493  070A  087F               	movf	btemp+1,w
   494  070B  397F               	andlw	127
   495  070C  008A               	movwf	10
   496  070D  0804               	movf	4,w
   497  070E  0A84               	incf	4,f
   498  070F  1903               	skipnz
   499  0710  0AFF               	incf	btemp+1,f
   500  0711  0082               	movwf	2
   501  0712                     __stringbase:
   502  0712                     __end_of__stringtab:
   503  0712                     _octpowers:
   504  0712  3401               	retlw	1
   505  0713  3400               	retlw	0
   506  0714  3408               	retlw	8
   507  0715  3400               	retlw	0
   508  0716  3440               	retlw	64
   509  0717  3400               	retlw	0
   510  0718  3400               	retlw	0
   511  0719  3402               	retlw	2
   512  071A  3400               	retlw	0
   513  071B  3410               	retlw	16
   514  071C  3400               	retlw	0
   515  071D  3480               	retlw	128
   516  071E                     __end_of_octpowers:
   517  071E                     _dpowers:
   518  071E  3401               	retlw	1
   519  071F  3400               	retlw	0
   520  0720  340A               	retlw	10
   521  0721  3400               	retlw	0
   522  0722  3464               	retlw	100
   523  0723  3400               	retlw	0
   524  0724  34E8               	retlw	232
   525  0725  3403               	retlw	3
   526  0726  3410               	retlw	16
   527  0727  3427               	retlw	39
   528  0728                     __end_of_dpowers:
   529  0728                     _hexpowers:
   530  0728  3401               	retlw	1
   531  0729  3400               	retlw	0
   532  072A  3410               	retlw	16
   533  072B  3400               	retlw	0
   534  072C  3400               	retlw	0
   535  072D  3401               	retlw	1
   536  072E  3400               	retlw	0
   537  072F  3410               	retlw	16
   538  0730                     __end_of_hexpowers:
   539  000C                     _PIR1bits	set	12
   540  000B                     _INTCONbits	set	11
   541  0001                     _TMR0	set	1
   542  0006                     _PORTBbits	set	6
   543  0007                     _PORTCbits	set	7
   544  0015                     _CCPR1L	set	21
   545  0012                     _T2CONbits	set	18
   546  0017                     _CCP1CONbits	set	23
   547  0019                     _TXREG	set	25
   548  0018                     _RCSTAbits	set	24
   549  001E                     _ADRESH	set	30
   550  001F                     _ADCON0bits	set	31
   551  0064                     _TXIF	set	100
   552  008F                     _OSCCON	set	143
   553  0081                     _OPTION_REGbits	set	129
   554  0087                     _TRISC	set	135
   555  0087                     _TRISCbits	set	135
   556  0092                     _PR2	set	146
   557  0099                     _SPBRG	set	153
   558  009A                     _SPBRGH	set	154
   559  0098                     _TXSTAbits	set	152
   560  009E                     _ADRESL	set	158
   561  009F                     _ADCON1bits	set	159
   562  008C                     _PIE1bits	set	140
   563  0086                     _TRISBbits	set	134
   564  0187                     _BAUDCTLbits	set	391
   565  0189                     _ANSELHbits	set	393
   566  0730                     STR_6:
   567  0730  340D               	retlw	13
   568  0731  340A               	retlw	10
   569  0732  3442               	retlw	66	;'B'
   570  0733  3469               	retlw	105	;'i'
   571  0734  3465               	retlw	101	;'e'
   572  0735  346E               	retlw	110	;'n'
   573  0736  3476               	retlw	118	;'v'
   574  0737  3465               	retlw	101	;'e'
   575  0738  346E               	retlw	110	;'n'
   576  0739  3469               	retlw	105	;'i'
   577  073A  3464               	retlw	100	;'d'
   578  073B  346F               	retlw	111	;'o'
   579  073C  3473               	retlw	115	;'s'
   580  073D  3420               	retlw	32	;' '
   581  073E  3461               	retlw	97	;'a'
   582  073F  346C               	retlw	108	;'l'
   583  0740  3420               	retlw	32	;' '
   584  0741  3473               	retlw	115	;'s'
   585  0742  3469               	retlw	105	;'i'
   586  0743  3473               	retlw	115	;'s'
   587  0744  3474               	retlw	116	;'t'
   588  0745  3465               	retlw	101	;'e'
   589  0746  346D               	retlw	109	;'m'
   590  0747  3461               	retlw	97	;'a'
   591  0748  3420               	retlw	32	;' '
   592  0749  3464               	retlw	100	;'d'
   593  074A  3465               	retlw	101	;'e'
   594  074B  3420               	retlw	32	;' '
   595  074C  3443               	retlw	67	;'C'
   596  074D  346F               	retlw	111	;'o'
   597  074E  346E               	retlw	110	;'n'
   598  074F  3474               	retlw	116	;'t'
   599  0750  3472               	retlw	114	;'r'
   600  0751  346F               	retlw	111	;'o'
   601  0752  346C               	retlw	108	;'l'
   602  0753  3420               	retlw	32	;' '
   603  0754  3479               	retlw	121	;'y'
   604  0755  3420               	retlw	32	;' '
   605  0756  344D               	retlw	77	;'M'
   606  0757  346F               	retlw	111	;'o'
   607  0758  346E               	retlw	110	;'n'
   608  0759  3469               	retlw	105	;'i'
   609  075A  3474               	retlw	116	;'t'
   610  075B  346F               	retlw	111	;'o'
   611  075C  3472               	retlw	114	;'r'
   612  075D  3469               	retlw	105	;'i'
   613  075E  347A               	retlw	122	;'z'
   614  075F  3461               	retlw	97	;'a'
   615  0760  3463               	retlw	99	;'c'
   616  0761  3469               	retlw	105	;'i'
   617  0762  346F               	retlw	111	;'o'
   618  0763  346E               	retlw	110	;'n'
   619  0764  3420               	retlw	32	;' '
   620  0765  3464               	retlw	100	;'d'
   621  0766  3465               	retlw	101	;'e'
   622  0767  346C               	retlw	108	;'l'
   623  0768  3420               	retlw	32	;' '
   624  0769  3448               	retlw	72	;'H'
   625  076A  346F               	retlw	111	;'o'
   626  076B  3472               	retlw	114	;'r'
   627  076C  346E               	retlw	110	;'n'
   628  076D  346F               	retlw	111	;'o'
   629  076E  340D               	retlw	13
   630  076F  340A               	retlw	10
   631  0770  3400               	retlw	0
   632  0771                     STR_7:
   633  0771  340D               	retlw	13
   634  0772  340A               	retlw	10
   635  0773  342D               	retlw	45	;'-'
   636  0774  342D               	retlw	45	;'-'
   637  0775  342D               	retlw	45	;'-'
   638  0776  342D               	retlw	45	;'-'
   639  0777  342D               	retlw	45	;'-'
   640  0778  342D               	retlw	45	;'-'
   641  0779  343E               	retlw	62	;'>'
   642  077A  3420               	retlw	32	;' '
   643  077B  3443               	retlw	67	;'C'
   644  077C  346F               	retlw	111	;'o'
   645  077D  346E               	retlw	110	;'n'
   646  077E  3473               	retlw	115	;'s'
   647  077F  3469               	retlw	105	;'i'
   648  0780  3467               	retlw	103	;'g'
   649  0781  346E               	retlw	110	;'n'
   650  0782  3461               	retlw	97	;'a'
   651  0783  3420               	retlw	32	;' '
   652  0784  346F               	retlw	111	;'o'
   653  0785  3420               	retlw	32	;' '
   654  0786  3454               	retlw	84	;'T'
   655  0787  3465               	retlw	101	;'e'
   656  0788  346D               	retlw	109	;'m'
   657  0789  3470               	retlw	112	;'p'
   658  078A  3465               	retlw	101	;'e'
   659  078B  3472               	retlw	114	;'r'
   660  078C  3461               	retlw	97	;'a'
   661  078D  3474               	retlw	116	;'t'
   662  078E  3475               	retlw	117	;'u'
   663  078F  3472               	retlw	114	;'r'
   664  0790  3461               	retlw	97	;'a'
   665  0791  3420               	retlw	32	;' '
   666  0792  344F               	retlw	79	;'O'
   667  0793  3462               	retlw	98	;'b'
   668  0794  346A               	retlw	106	;'j'
   669  0795  3465               	retlw	101	;'e'
   670  0796  3474               	retlw	116	;'t'
   671  0797  3469               	retlw	105	;'i'
   672  0798  3476               	retlw	118	;'v'
   673  0799  346F               	retlw	111	;'o'
   674  079A  343A               	retlw	58	;':'
   675  079B  3420               	retlw	32	;' '
   676  079C  3425               	retlw	37	;'%'
   677  079D  3464               	retlw	100	;'d'
   678  079E  34BA               	retlw	-70
   679  079F  340D               	retlw	13
   680  07A0  340A               	retlw	10
   681  07A1  3400               	retlw	0
   682  07A2                     STR_18:
   683  07A2  342D               	retlw	45	;'-'
   684  07A3  342D               	retlw	45	;'-'
   685  07A4  342D               	retlw	45	;'-'
   686  07A5  3445               	retlw	69	;'E'
   687  07A6  3473               	retlw	115	;'s'
   688  07A7  3474               	retlw	116	;'t'
   689  07A8  3461               	retlw	97	;'a'
   690  07A9  3464               	retlw	100	;'d'
   691  07AA  346F               	retlw	111	;'o'
   692  07AB  3420               	retlw	32	;' '
   693  07AC  3441               	retlw	65	;'A'
   694  07AD  3470               	retlw	112	;'p'
   695  07AE  3461               	retlw	97	;'a'
   696  07AF  3467               	retlw	103	;'g'
   697  07B0  3461               	retlw	97	;'a'
   698  07B1  346E               	retlw	110	;'n'
   699  07B2  3464               	retlw	100	;'d'
   700  07B3  346F               	retlw	111	;'o'
   701  07B4  3420               	retlw	32	;' '
   702  07B5  3465               	retlw	101	;'e'
   703  07B6  346C               	retlw	108	;'l'
   704  07B7  3420               	retlw	32	;' '
   705  07B8  3448               	retlw	72	;'H'
   706  07B9  346F               	retlw	111	;'o'
   707  07BA  3472               	retlw	114	;'r'
   708  07BB  346E               	retlw	110	;'n'
   709  07BC  346F               	retlw	111	;'o'
   710  07BD  342E               	retlw	46	;'.'
   711  07BE  342E               	retlw	46	;'.'
   712  07BF  342E               	retlw	46	;'.'
   713  07C0  342D               	retlw	45	;'-'
   714  07C1  342D               	retlw	45	;'-'
   715  07C2  342D               	retlw	45	;'-'
   716  07C3  340A               	retlw	10
   717  07C4  3400               	retlw	0
   718  07C5                     STR_13:
   719  07C5  3456               	retlw	86	;'V'
   720  07C6  3465               	retlw	101	;'e'
   721  07C7  346C               	retlw	108	;'l'
   722  07C8  346F               	retlw	111	;'o'
   723  07C9  3463               	retlw	99	;'c'
   724  07CA  3469               	retlw	105	;'i'
   725  07CB  3464               	retlw	100	;'d'
   726  07CC  3461               	retlw	97	;'a'
   727  07CD  3464               	retlw	100	;'d'
   728  07CE  3420               	retlw	32	;' '
   729  07CF  3464               	retlw	100	;'d'
   730  07D0  3465               	retlw	101	;'e'
   731  07D1  346C               	retlw	108	;'l'
   732  07D2  3420               	retlw	32	;' '
   733  07D3  3476               	retlw	118	;'v'
   734  07D4  3465               	retlw	101	;'e'
   735  07D5  346E               	retlw	110	;'n'
   736  07D6  3474               	retlw	116	;'t'
   737  07D7  3469               	retlw	105	;'i'
   738  07D8  346C               	retlw	108	;'l'
   739  07D9  3461               	retlw	97	;'a'
   740  07DA  3464               	retlw	100	;'d'
   741  07DB  346F               	retlw	111	;'o'
   742  07DC  3472               	retlw	114	;'r'
   743  07DD  3420               	retlw	32	;' '
   744  07DE  3425               	retlw	37	;'%'
   745  07DF  3464               	retlw	100	;'d'
   746  07E0  3425               	retlw	37	;'%'
   747  07E1  3425               	retlw	37	;'%'
   748  07E2  340D               	retlw	13
   749  07E3  340A               	retlw	10
   750  07E4  3400               	retlw	0
   751  07E5                     STR_5:
   752  07E5  3420               	retlw	32	;' '
   753  07E6  3454               	retlw	84	;'T'
   754  07E7  3465               	retlw	101	;'e'
   755  07E8  346D               	retlw	109	;'m'
   756  07E9  3470               	retlw	112	;'p'
   757  07EA  3465               	retlw	101	;'e'
   758  07EB  3472               	retlw	114	;'r'
   759  07EC  3461               	retlw	97	;'a'
   760  07ED  3474               	retlw	116	;'t'
   761  07EE  3475               	retlw	117	;'u'
   762  07EF  3472               	retlw	114	;'r'
   763  07F0  3461               	retlw	97	;'a'
   764  07F1  3420               	retlw	32	;' '
   765  07F2  346F               	retlw	111	;'o'
   766  07F3  3462               	retlw	98	;'b'
   767  07F4  346A               	retlw	106	;'j'
   768  07F5  3465               	retlw	101	;'e'
   769  07F6  3474               	retlw	116	;'t'
   770  07F7  3469               	retlw	105	;'i'
   771  07F8  3476               	retlw	118	;'v'
   772  07F9  346F               	retlw	111	;'o'
   773  07FA  343A               	retlw	58	;':'
   774  07FB  3420               	retlw	32	;' '
   775  07FC  3425               	retlw	37	;'%'
   776  07FD  3464               	retlw	100	;'d'
   777  07FE  3420               	retlw	32	;' '
   778  07FF  340D               	retlw	13
   779  0800  340A               	retlw	10
   780  0801  3400               	retlw	0
   781  0802                     STR_16:
   782  0802  3444               	retlw	68	;'D'
   783  0803  3465               	retlw	101	;'e'
   784  0804  346C               	retlw	108	;'l'
   785  0805  3461               	retlw	97	;'a'
   786  0806  3479               	retlw	121	;'y'
   787  0807  3420               	retlw	32	;' '
   788  0808  3469               	retlw	105	;'i'
   789  0809  346E               	retlw	110	;'n'
   790  080A  3469               	retlw	105	;'i'
   791  080B  3463               	retlw	99	;'c'
   792  080C  3469               	retlw	105	;'i'
   793  080D  3461               	retlw	97	;'a'
   794  080E  346C               	retlw	108	;'l'
   795  080F  3420               	retlw	32	;' '
   796  0810  3464               	retlw	100	;'d'
   797  0811  3465               	retlw	101	;'e'
   798  0812  3420               	retlw	32	;' '
   799  0813  3433               	retlw	51	;'3'
   800  0814  3420               	retlw	32	;' '
   801  0815  3473               	retlw	115	;'s'
   802  0816  3465               	retlw	101	;'e'
   803  0817  3467               	retlw	103	;'g'
   804  0818  3475               	retlw	117	;'u'
   805  0819  346E               	retlw	110	;'n'
   806  081A  3464               	retlw	100	;'d'
   807  081B  3473               	retlw	115	;'s'
   808  081C  340A               	retlw	10
   809  081D  3400               	retlw	0
   810  081E                     STR_9:
   811  081E  3454               	retlw	84	;'T'
   812  081F  3465               	retlw	101	;'e'
   813  0820  346D               	retlw	109	;'m'
   814  0821  3470               	retlw	112	;'p'
   815  0822  3465               	retlw	101	;'e'
   816  0823  3472               	retlw	114	;'r'
   817  0824  3461               	retlw	97	;'a'
   818  0825  3474               	retlw	116	;'t'
   819  0826  3475               	retlw	117	;'u'
   820  0827  3472               	retlw	114	;'r'
   821  0828  3461               	retlw	97	;'a'
   822  0829  3420               	retlw	32	;' '
   823  082A  3469               	retlw	105	;'i'
   824  082B  346E               	retlw	110	;'n'
   825  082C  3474               	retlw	116	;'t'
   826  082D  3465               	retlw	101	;'e'
   827  082E  3472               	retlw	114	;'r'
   828  082F  3469               	retlw	105	;'i'
   829  0830  346F               	retlw	111	;'o'
   830  0831  3472               	retlw	114	;'r'
   831  0832  3420               	retlw	32	;' '
   832  0833  3425               	retlw	37	;'%'
   833  0834  3464               	retlw	100	;'d'
   834  0835  34BA               	retlw	-70
   835  0836  3420               	retlw	32	;' '
   836  0837  340D               	retlw	13
   837  0838  340A               	retlw	10
   838  0839  3400               	retlw	0
   839  083A                     STR_10:
   840  083A  3454               	retlw	84	;'T'
   841  083B  3465               	retlw	101	;'e'
   842  083C  346D               	retlw	109	;'m'
   843  083D  3470               	retlw	112	;'p'
   844  083E  3465               	retlw	101	;'e'
   845  083F  3472               	retlw	114	;'r'
   846  0840  3461               	retlw	97	;'a'
   847  0841  3474               	retlw	116	;'t'
   848  0842  3475               	retlw	117	;'u'
   849  0843  3472               	retlw	114	;'r'
   850  0844  3461               	retlw	97	;'a'
   851  0845  3420               	retlw	32	;' '
   852  0846  3465               	retlw	101	;'e'
   853  0847  3478               	retlw	120	;'x'
   854  0848  3474               	retlw	116	;'t'
   855  0849  3465               	retlw	101	;'e'
   856  084A  3472               	retlw	114	;'r'
   857  084B  3469               	retlw	105	;'i'
   858  084C  346F               	retlw	111	;'o'
   859  084D  3472               	retlw	114	;'r'
   860  084E  3420               	retlw	32	;' '
   861  084F  3425               	retlw	37	;'%'
   862  0850  3464               	retlw	100	;'d'
   863  0851  34BA               	retlw	-70
   864  0852  3420               	retlw	32	;' '
   865  0853  340D               	retlw	13
   866  0854  340A               	retlw	10
   867  0855  3400               	retlw	0
   868  0856                     STR_12:
   869  0856  3449               	retlw	73	;'I'
   870  0857  346E               	retlw	110	;'n'
   871  0858  3474               	retlw	116	;'t'
   872  0859  3465               	retlw	101	;'e'
   873  085A  346E               	retlw	110	;'n'
   874  085B  3473               	retlw	115	;'s'
   875  085C  3469               	retlw	105	;'i'
   876  085D  3464               	retlw	100	;'d'
   877  085E  3461               	retlw	97	;'a'
   878  085F  3464               	retlw	100	;'d'
   879  0860  3420               	retlw	32	;' '
   880  0861  346C               	retlw	108	;'l'
   881  0862  3475               	retlw	117	;'u'
   882  0863  346D               	retlw	109	;'m'
   883  0864  3469               	retlw	105	;'i'
   884  0865  346E               	retlw	110	;'n'
   885  0866  346F               	retlw	111	;'o'
   886  0867  3473               	retlw	115	;'s'
   887  0868  3461               	retlw	97	;'a'
   888  0869  3420               	retlw	32	;' '
   889  086A  3425               	retlw	37	;'%'
   890  086B  3464               	retlw	100	;'d'
   891  086C  3420               	retlw	32	;' '
   892  086D  346C               	retlw	108	;'l'
   893  086E  346D               	retlw	109	;'m'
   894  086F  340D               	retlw	13
   895  0870  340A               	retlw	10
   896  0871  3400               	retlw	0
   897  0872                     STR_2:
   898  0872  3454               	retlw	84	;'T'
   899  0873  3465               	retlw	101	;'e'
   900  0874  346D               	retlw	109	;'m'
   901  0875  3470               	retlw	112	;'p'
   902  0876  3465               	retlw	101	;'e'
   903  0877  3472               	retlw	114	;'r'
   904  0878  3461               	retlw	97	;'a'
   905  0879  3474               	retlw	116	;'t'
   906  087A  3475               	retlw	117	;'u'
   907  087B  3472               	retlw	114	;'r'
   908  087C  3461               	retlw	97	;'a'
   909  087D  3420               	retlw	32	;' '
   910  087E  3445               	retlw	69	;'E'
   911  087F  3478               	retlw	120	;'x'
   912  0880  3474               	retlw	116	;'t'
   913  0881  3465               	retlw	101	;'e'
   914  0882  3472               	retlw	114	;'r'
   915  0883  3469               	retlw	105	;'i'
   916  0884  346F               	retlw	111	;'o'
   917  0885  3472               	retlw	114	;'r'
   918  0886  343A               	retlw	58	;':'
   919  0887  3420               	retlw	32	;' '
   920  0888  3425               	retlw	37	;'%'
   921  0889  3464               	retlw	100	;'d'
   922  088A  3420               	retlw	32	;' '
   923  088B  340D               	retlw	13
   924  088C  340A               	retlw	10
   925  088D  3400               	retlw	0
   926  088E                     STR_1:
   927  088E  3454               	retlw	84	;'T'
   928  088F  3465               	retlw	101	;'e'
   929  0890  346D               	retlw	109	;'m'
   930  0891  3470               	retlw	112	;'p'
   931  0892  3465               	retlw	101	;'e'
   932  0893  3472               	retlw	114	;'r'
   933  0894  3461               	retlw	97	;'a'
   934  0895  3474               	retlw	116	;'t'
   935  0896  3475               	retlw	117	;'u'
   936  0897  3472               	retlw	114	;'r'
   937  0898  3461               	retlw	97	;'a'
   938  0899  3420               	retlw	32	;' '
   939  089A  3469               	retlw	105	;'i'
   940  089B  346E               	retlw	110	;'n'
   941  089C  3474               	retlw	116	;'t'
   942  089D  3465               	retlw	101	;'e'
   943  089E  3472               	retlw	114	;'r'
   944  089F  3469               	retlw	105	;'i'
   945  08A0  346F               	retlw	111	;'o'
   946  08A1  3472               	retlw	114	;'r'
   947  08A2  3420               	retlw	32	;' '
   948  08A3  3420               	retlw	32	;' '
   949  08A4  340D               	retlw	13
   950  08A5  340A               	retlw	10
   951  08A6  3400               	retlw	0
   952  08A7                     STR_17:
   953  08A7  342D               	retlw	45	;'-'
   954  08A8  342D               	retlw	45	;'-'
   955  08A9  342D               	retlw	45	;'-'
   956  08AA  3450               	retlw	80	;'P'
   957  08AB  346F               	retlw	111	;'o'
   958  08AC  3474               	retlw	116	;'t'
   959  08AD  3465               	retlw	101	;'e'
   960  08AE  346E               	retlw	110	;'n'
   961  08AF  3463               	retlw	99	;'c'
   962  08B0  3469               	retlw	105	;'i'
   963  08B1  346F               	retlw	111	;'o'
   964  08B2  346D               	retlw	109	;'m'
   965  08B3  3465               	retlw	101	;'e'
   966  08B4  3474               	retlw	116	;'t'
   967  08B5  3472               	retlw	114	;'r'
   968  08B6  346F               	retlw	111	;'o'
   969  08B7  342D               	retlw	45	;'-'
   970  08B8  342D               	retlw	45	;'-'
   971  08B9  342D               	retlw	45	;'-'
   972  08BA  340A               	retlw	10
   973  08BB  3400               	retlw	0
   974  08BC                     STR_8:
   975  08BC  340D               	retlw	13
   976  08BD  340A               	retlw	10
   977  08BE  342D               	retlw	45	;'-'
   978  08BF  342D               	retlw	45	;'-'
   979  08C0  342D               	retlw	45	;'-'
   980  08C1  342D               	retlw	45	;'-'
   981  08C2  342D               	retlw	45	;'-'
   982  08C3  342D               	retlw	45	;'-'
   983  08C4  343E               	retlw	62	;'>'
   984  08C5  3420               	retlw	32	;' '
   985  08C6  3444               	retlw	68	;'D'
   986  08C7  3461               	retlw	97	;'a'
   987  08C8  3474               	retlw	116	;'t'
   988  08C9  346F               	retlw	111	;'o'
   989  08CA  3473               	retlw	115	;'s'
   990  08CB  343A               	retlw	58	;':'
   991  08CC  340D               	retlw	13
   992  08CD  340A               	retlw	10
   993  08CE  3400               	retlw	0
   994  08CF                     STR_4:
   995  08CF  344C               	retlw	76	;'L'
   996  08D0  3475               	retlw	117	;'u'
   997  08D1  346D               	retlw	109	;'m'
   998  08D2  3469               	retlw	105	;'i'
   999  08D3  346E               	retlw	110	;'n'
  1000  08D4  346F               	retlw	111	;'o'
  1001  08D5  3473               	retlw	115	;'s'
  1002  08D6  3469               	retlw	105	;'i'
  1003  08D7  3464               	retlw	100	;'d'
  1004  08D8  3461               	retlw	97	;'a'
  1005  08D9  3464               	retlw	100	;'d'
  1006  08DA  343A               	retlw	58	;':'
  1007  08DB  3420               	retlw	32	;' '
  1008  08DC  3425               	retlw	37	;'%'
  1009  08DD  3464               	retlw	100	;'d'
  1010  08DE  3420               	retlw	32	;' '
  1011  08DF  340D               	retlw	13
  1012  08E0  340A               	retlw	10
  1013  08E1  3400               	retlw	0
  1014  08E2                     STR_14:
  1015  08E2  3441               	retlw	65	;'A'
  1016  08E3  3470               	retlw	112	;'p'
  1017  08E4  3461               	retlw	97	;'a'
  1018  08E5  3467               	retlw	103	;'g'
  1019  08E6  3461               	retlw	97	;'a'
  1020  08E7  346E               	retlw	110	;'n'
  1021  08E8  3464               	retlw	100	;'d'
  1022  08E9  346F               	retlw	111	;'o'
  1023  08EA  3420               	retlw	32	;' '
  1024  08EB  3448               	retlw	72	;'H'
  1025  08EC  346F               	retlw	111	;'o'
  1026  08ED  3472               	retlw	114	;'r'
  1027  08EE  346E               	retlw	110	;'n'
  1028  08EF  346F               	retlw	111	;'o'
  1029  08F0  342E               	retlw	46	;'.'
  1030  08F1  342E               	retlw	46	;'.'
  1031  08F2  342E               	retlw	46	;'.'
  1032  08F3  3400               	retlw	0
  1033  08F4                     STR_19:
  1034  08F4  3430               	retlw	48	;'0'
  1035  08F5  3431               	retlw	49	;'1'
  1036  08F6  3432               	retlw	50	;'2'
  1037  08F7  3433               	retlw	51	;'3'
  1038  08F8  3434               	retlw	52	;'4'
  1039  08F9  3435               	retlw	53	;'5'
  1040  08FA  3436               	retlw	54	;'6'
  1041  08FB  3437               	retlw	55	;'7'
  1042  08FC  3438               	retlw	56	;'8'
  1043  08FD  3439               	retlw	57	;'9'
  1044  08FE  3441               	retlw	65	;'A'
  1045  08FF  3442               	retlw	66	;'B'
  1046  0900  3443               	retlw	67	;'C'
  1047  0901  3444               	retlw	68	;'D'
  1048  0902  3445               	retlw	69	;'E'
  1049  0903  3446               	retlw	70	;'F'
  1050  0904  3400               	retlw	0
  1051  0905                     STR_20:
  1052  0905  3430               	retlw	48	;'0'
  1053  0906  3431               	retlw	49	;'1'
  1054  0907  3432               	retlw	50	;'2'
  1055  0908  3433               	retlw	51	;'3'
  1056  0909  3434               	retlw	52	;'4'
  1057  090A  3435               	retlw	53	;'5'
  1058  090B  3436               	retlw	54	;'6'
  1059  090C  3437               	retlw	55	;'7'
  1060  090D  3438               	retlw	56	;'8'
  1061  090E  3439               	retlw	57	;'9'
  1062  090F  3461               	retlw	97	;'a'
  1063  0910  3462               	retlw	98	;'b'
  1064  0911  3463               	retlw	99	;'c'
  1065  0912  3464               	retlw	100	;'d'
  1066  0913  3465               	retlw	101	;'e'
  1067  0914  3466               	retlw	102	;'f'
  1068  0915  3400               	retlw	0
  1069  0916                     STR_11:
  1070  0916  3448               	retlw	72	;'H'
  1071  0917  3475               	retlw	117	;'u'
  1072  0918  346D               	retlw	109	;'m'
  1073  0919  3465               	retlw	101	;'e'
  1074  091A  3464               	retlw	100	;'d'
  1075  091B  3461               	retlw	97	;'a'
  1076  091C  3464               	retlw	100	;'d'
  1077  091D  3420               	retlw	32	;' '
  1078  091E  3425               	retlw	37	;'%'
  1079  091F  3464               	retlw	100	;'d'
  1080  0920  3425               	retlw	37	;'%'
  1081  0921  3425               	retlw	37	;'%'
  1082  0922  3420               	retlw	32	;' '
  1083  0923  340D               	retlw	13
  1084  0924  340A               	retlw	10
  1085  0925  3400               	retlw	0
  1086  0926                     STR_3:
  1087  0926  3448               	retlw	72	;'H'
  1088  0927  3475               	retlw	117	;'u'
  1089  0928  346D               	retlw	109	;'m'
  1090  0929  3465               	retlw	101	;'e'
  1091  092A  3464               	retlw	100	;'d'
  1092  092B  3461               	retlw	97	;'a'
  1093  092C  3464               	retlw	100	;'d'
  1094  092D  343A               	retlw	58	;':'
  1095  092E  3420               	retlw	32	;' '
  1096  092F  3425               	retlw	37	;'%'
  1097  0930  3464               	retlw	100	;'d'
  1098  0931  3420               	retlw	32	;' '
  1099  0932  340D               	retlw	13
  1100  0933  340A               	retlw	10
  1101  0934  3400               	retlw	0
  1102  0935                     STR_15:
  1103  0935  342D               	retlw	45	;'-'
  1104  0936  342D               	retlw	45	;'-'
  1105  0937  342D               	retlw	45	;'-'
  1106  0938  3453               	retlw	83	;'S'
  1107  0939  3465               	retlw	101	;'e'
  1108  093A  3474               	retlw	116	;'t'
  1109  093B  3420               	retlw	32	;' '
  1110  093C  3455               	retlw	85	;'U'
  1111  093D  3450               	retlw	80	;'P'
  1112  093E  342D               	retlw	45	;'-'
  1113  093F  342D               	retlw	45	;'-'
  1114  0940  342D               	retlw	45	;'-'
  1115  0941  340A               	retlw	10
  1116  0942  3400               	retlw	0
  1117                           
  1118                           	psect	cinit
  1119  000F                     start_initialization:	
  1120                           ; #config settings
  1121                           
  1122  000F                     __initialization:
  1123                           
  1124                           ; Clear objects allocated to COMMON
  1125  000F  01FA               	clrf	__pbssCOMMON& (0+127)
  1126  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1127  0011  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1128  0012  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  1129                           
  1130                           ; Clear objects allocated to BANK1
  1131  0013  1383               	bcf	3,7	;select IRP bank0
  1132  0014  30C9               	movlw	low __pbssBANK1
  1133  0015  0084               	movwf	4
  1134  0016  30EB               	movlw	low (__pbssBANK1+34)
  1135  0017  160A  158A  2734  120A  118A  	fcall	clear_ram0
  1136  001C                     end_of_initialization:	
  1137                           ;End of C runtime variable initialization code
  1138                           
  1139  001C                     __end_of__initialization:
  1140  001C  0183               	clrf	3
  1141  001D  120A  158A  2C05   	ljmp	_main	;jump to C main() function
  1142                           
  1143                           	psect	bssCOMMON
  1144  007A                     __pbssCOMMON:
  1145  007A                     _cont:
  1146  007A                     	ds	2
  1147  007C                     _tempObjetivo:
  1148  007C                     	ds	2
  1149                           
  1150                           	psect	bssBANK1
  1151  00C9                     __pbssBANK1:
  1152  00C9                     _potenciometro:
  1153  00C9                     	ds	3
  1154  00CC                     _errorMaximo:
  1155  00CC                     	ds	3
  1156  00CF                     _vent:
  1157  00CF                     	ds	3
  1158  00D2                     _lastPotenciometro:
  1159  00D2                     	ds	3
  1160  00D5                     _tempObj:
  1161  00D5                     	ds	2
  1162  00D7                     _tempInt:
  1163  00D7                     	ds	2
  1164  00D9                     _ADCready:
  1165  00D9                     	ds	2
  1166  00DB                     _numeroLecturas:
  1167  00DB                     	ds	2
  1168  00DD                     _sumaLecturas:
  1169  00DD                     	ds	2
  1170  00DF                     _lum:
  1171  00DF                     	ds	2
  1172  00E1                     _humedad:
  1173  00E1                     	ds	2
  1174  00E3                     _tempext:
  1175  00E3                     	ds	2
  1176  00E5                     _tempint:
  1177  00E5                     	ds	2
  1178  00E7                     _estadoInterrupcion:
  1179  00E7                     	ds	1
  1180  00E8                     _estadoActual:
  1181  00E8                     	ds	1
  1182  00E9                     _diferencia:
  1183  00E9                     	ds	2
  1184                           
  1185                           	psect	clrtext
  1186  1F34                     clear_ram0:	
  1187                           ;	Called with FSR containing the base address, and
  1188                           ;	W with the last address+1
  1189                           
  1190  1F34  0064               	clrwdt	;clear the watchdog before getting into this loop
  1191  1F35                     clrloop0:
  1192  1F35  0180               	clrf	0	;clear RAM location pointed to by FSR
  1193  1F36  0A84               	incf	4,f	;increment pointer
  1194  1F37  0604               	xorwf	4,w	;XOR with final address
  1195  1F38  1903               	btfsc	3,2	;have we reached the end yet?
  1196  1F39  3400               	retlw	0	;all done for this memory range, return
  1197  1F3A  0604               	xorwf	4,w	;XOR again to restore value
  1198  1F3B  2F35               	goto	clrloop0	;do the next byte
  1199                           
  1200                           	psect	cstackBANK1
  1201  00A0                     __pcstackBANK1:
  1202  00A0                     ??_printf:
  1203                           
  1204                           ; 1 bytes @ 0x0
  1205  00A0                     	ds	3
  1206  00A3                     _printf$982:
  1207                           
  1208                           ; 2 bytes @ 0x3
  1209  00A3                     	ds	2
  1210  00A5                     _printf$983:
  1211                           
  1212                           ; 2 bytes @ 0x5
  1213  00A5                     	ds	2
  1214  00A7                     _printf$989:
  1215                           
  1216                           ; 2 bytes @ 0x7
  1217  00A7                     	ds	2
  1218  00A9                     printf@idx:
  1219                           
  1220                           ; 1 bytes @ 0x9
  1221  00A9                     	ds	1
  1222  00AA                     printf@cp:
  1223                           
  1224                           ; 1 bytes @ 0xA
  1225  00AA                     	ds	1
  1226  00AB                     printf@len:
  1227                           
  1228                           ; 2 bytes @ 0xB
  1229  00AB                     	ds	2
  1230  00AD                     printf@ap:
  1231                           
  1232                           ; 1 bytes @ 0xD
  1233  00AD                     	ds	1
  1234  00AE                     printf@val:
  1235                           
  1236                           ; 2 bytes @ 0xE
  1237  00AE                     	ds	2
  1238  00B0                     printf@prec:
  1239                           
  1240                           ; 1 bytes @ 0x10
  1241  00B0                     	ds	1
  1242  00B1                     printf@width:
  1243                           
  1244                           ; 2 bytes @ 0x11
  1245  00B1                     	ds	2
  1246  00B3                     printf@c:
  1247                           
  1248                           ; 1 bytes @ 0x13
  1249  00B3                     	ds	1
  1250  00B4                     printf@flag:
  1251                           
  1252                           ; 2 bytes @ 0x14
  1253  00B4                     	ds	2
  1254  00B6                     ??_read_temperatura_interior:
  1255  00B6                     ??_read_temperatura_exterior:	
  1256                           ; 1 bytes @ 0x16
  1257                           
  1258  00B6                     ??_read_humedad:	
  1259                           ; 1 bytes @ 0x16
  1260                           
  1261  00B6                     ??_read_intensidad_lumninosa:	
  1262                           ; 1 bytes @ 0x16
  1263                           
  1264  00B6                     ??_read_potenciometro:	
  1265                           ; 1 bytes @ 0x16
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x16
  1269  00B6                     	ds	2
  1270  00B8                     read_potenciometro@aux:
  1271  00B8                     read_temperatura_interior@lecturaV:	
  1272                           ; 2 bytes @ 0x18
  1273                           
  1274  00B8                     read_temperatura_exterior@V0:	
  1275                           ; 3 bytes @ 0x18
  1276                           
  1277  00B8                     read_humedad@lecturaV:	
  1278                           ; 3 bytes @ 0x18
  1279                           
  1280  00B8                     read_intensidad_lumninosa@lecturaV:	
  1281                           ; 3 bytes @ 0x18
  1282                           
  1283                           
  1284                           ; 3 bytes @ 0x18
  1285  00B8                     	ds	2
  1286  00BA                     read_potenciometro@lectura:
  1287                           
  1288                           ; 2 bytes @ 0x1A
  1289  00BA                     	ds	1
  1290  00BB                     read_temperatura_exterior@Tc:
  1291  00BB                     _read_temperatura_interior$1425:	
  1292                           ; 3 bytes @ 0x1B
  1293                           
  1294  00BB                     _read_humedad$1427:	
  1295                           ; 3 bytes @ 0x1B
  1296                           
  1297  00BB                     _read_intensidad_lumninosa$1428:	
  1298                           ; 3 bytes @ 0x1B
  1299                           
  1300                           
  1301                           ; 3 bytes @ 0x1B
  1302  00BB                     	ds	1
  1303  00BC                     read_potenciometro@lecturaV:
  1304                           
  1305                           ; 3 bytes @ 0x1C
  1306  00BC                     	ds	2
  1307  00BE                     read_temperatura_interior@lectura:
  1308  00BE                     read_humedad@lectura:	
  1309                           ; 2 bytes @ 0x1E
  1310                           
  1311  00BE                     read_intensidad_lumninosa@lectura:	
  1312                           ; 2 bytes @ 0x1E
  1313                           
  1314  00BE                     read_temperatura_exterior@lecturaV:	
  1315                           ; 2 bytes @ 0x1E
  1316                           
  1317                           
  1318                           ; 3 bytes @ 0x1E
  1319  00BE                     	ds	3
  1320  00C1                     _read_temperatura_exterior$1426:
  1321                           
  1322                           ; 3 bytes @ 0x21
  1323  00C1                     	ds	3
  1324  00C4                     read_temperatura_exterior@lectura:
  1325                           
  1326                           ; 2 bytes @ 0x24
  1327  00C4                     	ds	2
  1328  00C6                     ??_main:
  1329                           
  1330                           ; 1 bytes @ 0x26
  1331  00C6                     	ds	3
  1332                           
  1333                           	psect	cstackCOMMON
  1334  0070                     __pcstackCOMMON:
  1335  0070                     ?_isdigit:
  1336  0070                     ?_set_up_Sensores:	
  1337                           ; 1 bit 
  1338                           
  1339  0070                     ?_read_temperatura_interior:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_read_temperatura_exterior:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_read_humedad:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_read_intensidad_lumninosa:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_read_potenciometro:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_init_uart:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_putch:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_mensajeBienvenida:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_mostrarConsigna:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_mostrarDatos:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_init_PWM_CCP1:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_init_timer2:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_set_up_Actuadores:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_logica_Actuadores:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_init_timer0:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_Handler:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_main:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?___awmod:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ___awmod@divisor:	
  1394                           ; 2 bytes @ 0x0
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0x0
  1398  0070                     	ds	2
  1399  0072                     ___awmod@dividend:
  1400                           
  1401                           ; 2 bytes @ 0x2
  1402  0072                     	ds	2
  1403  0074                     ??___awmod:
  1404                           
  1405                           ; 1 bytes @ 0x4
  1406  0074                     	ds	1
  1407  0075                     ___awmod@counter:
  1408                           
  1409                           ; 1 bytes @ 0x5
  1410  0075                     	ds	1
  1411  0076                     ___awmod@sign:
  1412                           
  1413                           ; 1 bytes @ 0x6
  1414  0076                     	ds	1
  1415  0077                     ??_Handler:
  1416                           
  1417                           ; 1 bytes @ 0x7
  1418  0077                     	ds	3
  1419                           
  1420                           	psect	cstackBANK0
  1421  0020                     __pcstackBANK0:
  1422  0020                     ??_isdigit:
  1423  0020                     ??_set_up_Sensores:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0020                     ??_init_uart:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0020                     ??_putch:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0020                     ??_init_PWM_CCP1:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0020                     ??_init_timer2:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0020                     ??_set_up_Actuadores:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0020                     ?_set_Refrigerador:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0020                     ?_set_Calefactor:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0020                     ??_init_timer0:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0020                     ?___bmul:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0020                     ?_get_temperatura_interior:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0020                     ?_get_temperatura_exterior:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459  0020                     ?_get_humedad:	
  1460                           ; 2 bytes @ 0x0
  1461                           
  1462  0020                     ?_get_intensidad_luminosa:	
  1463                           ; 2 bytes @ 0x0
  1464                           
  1465  0020                     ?___wmul:	
  1466                           ; 2 bytes @ 0x0
  1467                           
  1468  0020                     ?___lwdiv:	
  1469                           ; 2 bytes @ 0x0
  1470                           
  1471  0020                     ?___ftpack:	
  1472                           ; 2 bytes @ 0x0
  1473                           
  1474  0020                     ?_get_lastPotenciometro:	
  1475                           ; 3 bytes @ 0x0
  1476                           
  1477  0020                     putch@c:	
  1478                           ; 3 bytes @ 0x0
  1479                           
  1480  0020                     ___bmul@multiplicand:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0020                     _isdigit$1201:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0020                     set_Refrigerador@on:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0020                     set_Calefactor@on:	
  1490                           ; 2 bytes @ 0x0
  1491                           
  1492  0020                     ___wmul@multiplier:	
  1493                           ; 2 bytes @ 0x0
  1494                           
  1495  0020                     ___lwdiv@divisor:	
  1496                           ; 2 bytes @ 0x0
  1497                           
  1498  0020                     ___ftpack@arg:	
  1499                           ; 2 bytes @ 0x0
  1500                           
  1501                           
  1502                           ; 3 bytes @ 0x0
  1503  0020                     	ds	1
  1504  0021                     ??___bmul:
  1505  0021                     isdigit@c:	
  1506                           ; 1 bytes @ 0x1
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x1
  1510  0021                     	ds	1
  1511  0022                     ??_get_temperatura_interior:
  1512  0022                     ??_get_temperatura_exterior:	
  1513                           ; 1 bytes @ 0x2
  1514                           
  1515  0022                     ??_get_humedad:	
  1516                           ; 1 bytes @ 0x2
  1517                           
  1518  0022                     ??_get_intensidad_luminosa:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521  0022                     ??_set_Refrigerador:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524  0022                     ??_set_Calefactor:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527  0022                     ___bmul@product:	
  1528                           ; 1 bytes @ 0x2
  1529                           
  1530  0022                     ___wmul@multiplicand:	
  1531                           ; 1 bytes @ 0x2
  1532                           
  1533  0022                     ___lwdiv@dividend:	
  1534                           ; 2 bytes @ 0x2
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0x2
  1538  0022                     	ds	1
  1539  0023                     ??_get_lastPotenciometro:
  1540  0023                     ___bmul@multiplier:	
  1541                           ; 1 bytes @ 0x3
  1542                           
  1543  0023                     ___ftpack@exp:	
  1544                           ; 1 bytes @ 0x3
  1545                           
  1546                           
  1547                           ; 1 bytes @ 0x3
  1548  0023                     	ds	1
  1549  0024                     ??___wmul:
  1550  0024                     ??___lwdiv:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553  0024                     ___ftpack@sign:	
  1554                           ; 1 bytes @ 0x4
  1555                           
  1556  0024                     ___wmul@product:	
  1557                           ; 1 bytes @ 0x4
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0x4
  1561  0024                     	ds	1
  1562  0025                     ??___ftpack:
  1563  0025                     ___lwdiv@quotient:	
  1564                           ; 1 bytes @ 0x5
  1565                           
  1566                           
  1567                           ; 2 bytes @ 0x5
  1568  0025                     	ds	1
  1569  0026                     ?___awdiv:
  1570  0026                     ___awdiv@divisor:	
  1571                           ; 2 bytes @ 0x6
  1572                           
  1573                           
  1574                           ; 2 bytes @ 0x6
  1575  0026                     	ds	1
  1576  0027                     ___lwdiv@counter:
  1577                           
  1578                           ; 1 bytes @ 0x7
  1579  0027                     	ds	1
  1580  0028                     ?___lwmod:
  1581  0028                     ?___awtoft:	
  1582                           ; 2 bytes @ 0x8
  1583                           
  1584  0028                     ___awdiv@dividend:	
  1585                           ; 3 bytes @ 0x8
  1586                           
  1587  0028                     ___awtoft@c:	
  1588                           ; 2 bytes @ 0x8
  1589                           
  1590  0028                     ___lwmod@divisor:	
  1591                           ; 2 bytes @ 0x8
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0x8
  1595  0028                     	ds	2
  1596  002A                     ??___awdiv:
  1597  002A                     ___lwmod@dividend:	
  1598                           ; 1 bytes @ 0xA
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0xA
  1602  002A                     	ds	1
  1603  002B                     ??___awtoft:
  1604  002B                     ___awdiv@counter:	
  1605                           ; 1 bytes @ 0xB
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0xB
  1609  002B                     	ds	1
  1610  002C                     ??___lwmod:
  1611  002C                     ___awdiv@sign:	
  1612                           ; 1 bytes @ 0xC
  1613                           
  1614                           
  1615                           ; 1 bytes @ 0xC
  1616  002C                     	ds	1
  1617  002D                     ___awtoft@sign:
  1618  002D                     ___lwmod@counter:	
  1619                           ; 1 bytes @ 0xD
  1620                           
  1621  002D                     ___awdiv@quotient:	
  1622                           ; 1 bytes @ 0xD
  1623                           
  1624                           
  1625                           ; 2 bytes @ 0xD
  1626  002D                     	ds	1
  1627  002E                     ?___ftge:
  1628  002E                     ?___ftadd:	
  1629                           ; 1 bit 
  1630                           
  1631  002E                     ___ftadd@f1:	
  1632                           ; 3 bytes @ 0xE
  1633                           
  1634  002E                     ___ftge@ff1:	
  1635                           ; 3 bytes @ 0xE
  1636                           
  1637                           
  1638                           ; 3 bytes @ 0xE
  1639  002E                     	ds	1
  1640  002F                     ?_get_tempObjetivo:
  1641                           
  1642                           ; 2 bytes @ 0xF
  1643  002F                     	ds	2
  1644  0031                     ??_get_tempObjetivo:
  1645  0031                     ___ftadd@f2:	
  1646                           ; 1 bytes @ 0x11
  1647                           
  1648  0031                     ___ftge@ff2:	
  1649                           ; 3 bytes @ 0x11
  1650                           
  1651                           
  1652                           ; 3 bytes @ 0x11
  1653  0031                     	ds	3
  1654  0034                     ??___ftadd:
  1655  0034                     ??___ftge:	
  1656                           ; 1 bytes @ 0x14
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x14
  1660  0034                     	ds	4
  1661  0038                     ___ftadd@sign:
  1662                           
  1663                           ; 1 bytes @ 0x18
  1664  0038                     	ds	1
  1665  0039                     ___ftadd@exp2:
  1666                           
  1667                           ; 1 bytes @ 0x19
  1668  0039                     	ds	1
  1669  003A                     ___ftadd@exp1:
  1670                           
  1671                           ; 1 bytes @ 0x1A
  1672  003A                     	ds	1
  1673  003B                     ?___ftdiv:
  1674  003B                     ___ftdiv@f2:	
  1675                           ; 3 bytes @ 0x1B
  1676                           
  1677                           
  1678                           ; 3 bytes @ 0x1B
  1679  003B                     	ds	3
  1680  003E                     ___ftdiv@f1:
  1681                           
  1682                           ; 3 bytes @ 0x1E
  1683  003E                     	ds	3
  1684  0041                     ??___ftdiv:
  1685                           
  1686                           ; 1 bytes @ 0x21
  1687  0041                     	ds	4
  1688  0045                     ___ftdiv@cntr:
  1689                           
  1690                           ; 1 bytes @ 0x25
  1691  0045                     	ds	1
  1692  0046                     ___ftdiv@f3:
  1693                           
  1694                           ; 3 bytes @ 0x26
  1695  0046                     	ds	3
  1696  0049                     ___ftdiv@exp:
  1697                           
  1698                           ; 1 bytes @ 0x29
  1699  0049                     	ds	1
  1700  004A                     ___ftdiv@sign:
  1701                           
  1702                           ; 1 bytes @ 0x2A
  1703  004A                     	ds	1
  1704  004B                     ?___ftmul:
  1705  004B                     ?___ftsub:	
  1706                           ; 3 bytes @ 0x2B
  1707                           
  1708  004B                     ___ftmul@f1:	
  1709                           ; 3 bytes @ 0x2B
  1710                           
  1711  004B                     ___ftsub@f2:	
  1712                           ; 3 bytes @ 0x2B
  1713                           
  1714                           
  1715                           ; 3 bytes @ 0x2B
  1716  004B                     	ds	3
  1717  004E                     ___ftmul@f2:
  1718  004E                     ___ftsub@f1:	
  1719                           ; 3 bytes @ 0x2E
  1720                           
  1721                           
  1722                           ; 3 bytes @ 0x2E
  1723  004E                     	ds	3
  1724  0051                     ??___ftmul:
  1725  0051                     ??___ftsub:	
  1726                           ; 1 bytes @ 0x31
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0x31
  1730  0051                     	ds	4
  1731  0055                     ___ftmul@exp:
  1732                           
  1733                           ; 1 bytes @ 0x35
  1734  0055                     	ds	1
  1735  0056                     ___ftmul@f3_as_product:
  1736                           
  1737                           ; 3 bytes @ 0x36
  1738  0056                     	ds	3
  1739  0059                     ___ftmul@cntr:
  1740                           
  1741                           ; 1 bytes @ 0x39
  1742  0059                     	ds	1
  1743  005A                     ___ftmul@sign:
  1744                           
  1745                           ; 1 bytes @ 0x3A
  1746  005A                     	ds	1
  1747  005B                     ?___fttol:
  1748  005B                     ___fttol@f1:	
  1749                           ; 4 bytes @ 0x3B
  1750                           
  1751                           
  1752                           ; 3 bytes @ 0x3B
  1753  005B                     	ds	4
  1754  005F                     ??___fttol:
  1755                           
  1756                           ; 1 bytes @ 0x3F
  1757  005F                     	ds	4
  1758  0063                     ___fttol@sign1:
  1759                           
  1760                           ; 1 bytes @ 0x43
  1761  0063                     	ds	1
  1762  0064                     ___fttol@lval:
  1763                           
  1764                           ; 4 bytes @ 0x44
  1765  0064                     	ds	4
  1766  0068                     ___fttol@exp1:
  1767                           
  1768                           ; 1 bytes @ 0x48
  1769  0068                     	ds	1
  1770  0069                     ?_set_Ventilador:
  1771  0069                     ?_get_velocidad_ventilador:	
  1772                           ; 1 bytes @ 0x49
  1773                           
  1774  0069                     set_Ventilador@intensidad:	
  1775                           ; 2 bytes @ 0x49
  1776                           
  1777                           
  1778                           ; 2 bytes @ 0x49
  1779  0069                     	ds	2
  1780  006B                     ??_get_velocidad_ventilador:
  1781  006B                     ??_set_Ventilador:	
  1782                           ; 1 bytes @ 0x4B
  1783                           
  1784  006B                     ?_printf:	
  1785                           ; 1 bytes @ 0x4B
  1786                           
  1787  006B                     printf@f:	
  1788                           ; 2 bytes @ 0x4B
  1789                           
  1790                           
  1791                           ; 2 bytes @ 0x4B
  1792  006B                     	ds	4
  1793  006F                     ??_mensajeBienvenida:
  1794  006F                     ??_mostrarConsigna:	
  1795                           ; 1 bytes @ 0x4F
  1796                           
  1797  006F                     ??_mostrarDatos:	
  1798                           ; 1 bytes @ 0x4F
  1799                           
  1800  006F                     ??_logica_Actuadores:	
  1801                           ; 1 bytes @ 0x4F
  1802                           
  1803                           
  1804                           	psect	maintext
  1805  0C05                     __pmaintext:	
  1806                           ; 1 bytes @ 0x4F
  1807 ;;
  1808 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1809 ;;
  1810 ;; *************** function _main *****************
  1811 ;; Defined at:
  1812 ;;		line 77 in file "controlador3.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : B00/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       3       0       0
  1829 ;;      Totals:         0       0       3       0       0
  1830 ;;Total ram usage:        3 bytes
  1831 ;; Hardware stack levels required when called:    6
  1832 ;; This function calls:
  1833 ;;		_init_timer0
  1834 ;;		_init_uart
  1835 ;;		_logica_Actuadores
  1836 ;;		_mensajeBienvenida
  1837 ;;		_mostrarConsigna
  1838 ;;		_mostrarDatos
  1839 ;;		_printf
  1840 ;;		_read_humedad
  1841 ;;		_read_intensidad_lumninosa
  1842 ;;		_read_potenciometro
  1843 ;;		_read_temperatura_exterior
  1844 ;;		_read_temperatura_interior
  1845 ;;		_set_up_Actuadores
  1846 ;;		_set_up_Sensores
  1847 ;; This function is called by:
  1848 ;;		Startup code after reset
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _main
  1854  0C05                     _main:
  1855  0C05                     l3257:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1858                           
  1859                           
  1860                           ;controlador3.c: 79: OSCCON = 0b00001000;
  1861  0C05  3008               	movlw	8
  1862  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0C08  008F               	movwf	15	;volatile
  1865  0C09                     l3259:
  1866                           
  1867                           ;controlador3.c: 80: set_up_Actuadores();
  1868  0C09  160A  118A  200B  120A  158A  	fcall	_set_up_Actuadores
  1869  0C0E                     l3261:
  1870                           
  1871                           ;controlador3.c: 81: set_up_Sensores();
  1872  0C0E  160A  118A  20FC  120A  158A  	fcall	_set_up_Sensores
  1873  0C13                     l3263:
  1874                           
  1875                           ;controlador3.c: 82: init_uart();
  1876  0C13  160A  118A  2023  120A  158A  	fcall	_init_uart
  1877  0C18                     l3265:
  1878                           
  1879                           ;controlador3.c: 83: printf("---Set UP---\n");
  1880  0C18  3035               	movlw	low (STR_15| (0+32768))
  1881  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0C1B  00EB               	movwf	printf@f
  1884  0C1C  3089               	movlw	high (STR_15| (0+32768))
  1885  0C1D  00EC               	movwf	printf@f+1
  1886  0C1E  120A  118A  2020  120A  158A  	fcall	_printf
  1887  0C23                     l3267:
  1888                           
  1889                           ;controlador3.c: 84: mensajeBienvenida();
  1890  0C23  160A  158A  275D  120A  158A  	fcall	_mensajeBienvenida
  1891  0C28                     l3269:
  1892                           
  1893                           ;controlador3.c: 85: estadoActual = Esperar;
  1894  0C28  3003               	movlw	3
  1895  0C29  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0C2A  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0C2B  00C6               	movwf	??_main^(0+128)
  1898  0C2C  0846               	movf	??_main^(0+128),w
  1899  0C2D  00E8               	movwf	_estadoActual^(0+128)
  1900  0C2E                     l3271:
  1901                           
  1902                           ;controlador3.c: 87: printf("Delay inicial de 3 segunds\n");
  1903  0C2E  3002               	movlw	low (STR_16| (0+32768))
  1904  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0C31  00EB               	movwf	printf@f
  1907  0C32  3088               	movlw	high (STR_16| (0+32768))
  1908  0C33  00EC               	movwf	printf@f+1
  1909  0C34  120A  118A  2020  120A  158A  	fcall	_printf
  1910  0C39                     l3273:
  1911                           
  1912                           ;controlador3.c: 88: _delay((unsigned long)((3000)*(20000000/4000.0)));
  1913  0C39  304D               	movlw	77
  1914  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0C3C  00C8               	movwf	(??_main^(0+128)+2)
  1917  0C3D  3019               	movlw	25
  1918  0C3E  00C7               	movwf	(??_main^(0+128)+1)
  1919  0C3F  304F               	movlw	79
  1920  0C40  00C6               	movwf	??_main^(0+128)
  1921  0C41                     u4097:
  1922  0C41  0BC6               	decfsz	??_main^(0+128),f
  1923  0C42  2C41               	goto	u4097
  1924  0C43  0BC7               	decfsz	(??_main^(0+128)+1),f
  1925  0C44  2C41               	goto	u4097
  1926  0C45  0BC8               	decfsz	(??_main^(0+128)+2),f
  1927  0C46  2C41               	goto	u4097
  1928  0C47                     l3275:
  1929                           
  1930                           ;controlador3.c: 90: INTCONbits.GIE = 1;
  1931  0C47  178B               	bsf	11,7	;volatile
  1932  0C48                     l3277:
  1933                           
  1934                           ;controlador3.c: 91: INTCONbits.PEIE = 1;
  1935  0C48  170B               	bsf	11,6	;volatile
  1936  0C49                     l3279:
  1937                           
  1938                           ;controlador3.c: 92: INTCONbits.T0IE = 1;
  1939  0C49  168B               	bsf	11,5	;volatile
  1940  0C4A                     l3281:
  1941                           
  1942                           ;controlador3.c: 93: init_timer0();
  1943  0C4A  160A  118A  2000  120A  158A  	fcall	_init_timer0
  1944                           
  1945                           ;controlador3.c: 96: while (estadoActual != Apagar) {
  1946  0C4F  2D12               	goto	l3339
  1947  0C50                     l340:	
  1948                           ;controlador3.c: 98: case Esperar:
  1949                           
  1950                           
  1951                           ;controlador3.c: 99: __nop();
  1952  0C50  0000               	nop
  1953                           
  1954                           ;controlador3.c: 100: break;
  1955  0C51  2D12               	goto	l3339
  1956  0C52                     l3283:
  1957                           
  1958                           ;controlador3.c: 102: printf("---Potenciometro---\n");
  1959  0C52  30A7               	movlw	low (STR_17| (0+32768))
  1960  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0C54  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0C55  00EB               	movwf	printf@f
  1963  0C56  3088               	movlw	high (STR_17| (0+32768))
  1964  0C57  00EC               	movwf	printf@f+1
  1965  0C58  120A  118A  2020  120A  158A  	fcall	_printf
  1966                           
  1967                           ;controlador3.c: 104: read_potenciometro();
  1968  0C5D  160A  118A  2630  120A  158A  	fcall	_read_potenciometro
  1969  0C62                     l3285:
  1970                           
  1971                           ;controlador3.c: 105: if (estadoInterrupcion == Sensores_Actuadores || estadoInterrupcio
      +                          n == MostrarDatos) {
  1972  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0C64  0367               	decf	_estadoInterrupcion^(0+128),w
  1975  0C65  1903               	btfsc	3,2
  1976  0C66  2C68               	goto	u4051
  1977  0C67  2C69               	goto	u4050
  1978  0C68                     u4051:
  1979  0C68  2C6F               	goto	l345
  1980  0C69                     u4050:
  1981  0C69                     l3287:
  1982  0C69  3002               	movlw	2
  1983  0C6A  0667               	xorwf	_estadoInterrupcion^(0+128),w
  1984  0C6B  1D03               	btfss	3,2
  1985  0C6C  2C6E               	goto	u4061
  1986  0C6D  2C6F               	goto	u4060
  1987  0C6E                     u4061:
  1988  0C6E  2C72               	goto	l3289
  1989  0C6F                     u4060:
  1990  0C6F                     l345:
  1991                           
  1992                           ;controlador3.c: 106: estadoActual = Sensores_Actuadores;
  1993  0C6F  01E8               	clrf	_estadoActual^(0+128)
  1994  0C70  0AE8               	incf	_estadoActual^(0+128),f
  1995                           
  1996                           ;controlador3.c: 107: } else {
  1997  0C71  2D12               	goto	l3339
  1998  0C72                     l3289:
  1999                           
  2000                           ;controlador3.c: 108: estadoActual = Esperar;
  2001  0C72  3003               	movlw	3
  2002  0C73  00C6               	movwf	??_main^(0+128)
  2003  0C74  0846               	movf	??_main^(0+128),w
  2004  0C75  00E8               	movwf	_estadoActual^(0+128)
  2005                           
  2006                           ;controlador3.c: 109: estadoInterrupcion = Esperar;
  2007  0C76  3003               	movlw	3
  2008  0C77  00C6               	movwf	??_main^(0+128)
  2009  0C78  0846               	movf	??_main^(0+128),w
  2010  0C79  00E7               	movwf	_estadoInterrupcion^(0+128)
  2011                           
  2012                           ;controlador3.c: 111: cont++;
  2013  0C7A  3001               	movlw	1
  2014  0C7B  07FA               	addwf	_cont,f
  2015  0C7C  1803               	skipnc
  2016  0C7D  0AFB               	incf	_cont+1,f
  2017  0C7E  3000               	movlw	0
  2018  0C7F  07FB               	addwf	_cont+1,f
  2019  0C80                     l3291:
  2020                           
  2021                           ;controlador3.c: 112: INTCONbits.T0IF = 0;
  2022  0C80  110B               	bcf	11,2	;volatile
  2023  0C81                     l3293:
  2024                           
  2025                           ;controlador3.c: 113: INTCONbits.T0IE = 1;
  2026  0C81  168B               	bsf	11,5	;volatile
  2027  0C82  2D12               	goto	l3339
  2028  0C83                     l3295:
  2029                           
  2030                           ;controlador3.c: 120: mostrarConsigna();
  2031  0C83  160A  158A  27E9  120A  158A  	fcall	_mostrarConsigna
  2032  0C88                     l3297:
  2033                           
  2034                           ;controlador3.c: 122: ADCready = 1;
  2035  0C88  3001               	movlw	1
  2036  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0C8B  00D9               	movwf	_ADCready^(0+128)
  2039  0C8C  3000               	movlw	0
  2040  0C8D  00DA               	movwf	(_ADCready^(0+128)+1)
  2041  0C8E                     l3299:
  2042                           
  2043                           ;controlador3.c: 123: read_humedad();
  2044  0C8E  120A  158A  220F  120A  158A  	fcall	_read_humedad
  2045                           
  2046                           ;controlador3.c: 124: ADCready = 1;
  2047  0C93  3001               	movlw	1
  2048  0C94  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0C95  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0C96  00D9               	movwf	_ADCready^(0+128)
  2051  0C97  3000               	movlw	0
  2052  0C98  00DA               	movwf	(_ADCready^(0+128)+1)
  2053  0C99                     l3301:
  2054                           
  2055                           ;controlador3.c: 125: read_intensidad_lumninosa();
  2056  0C99  160A  118A  2472  120A  158A  	fcall	_read_intensidad_lumninosa
  2057  0C9E                     l3303:
  2058                           
  2059                           ;controlador3.c: 126: ADCready = 1;
  2060  0C9E  3001               	movlw	1
  2061  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0CA1  00D9               	movwf	_ADCready^(0+128)
  2064  0CA2  3000               	movlw	0
  2065  0CA3  00DA               	movwf	(_ADCready^(0+128)+1)
  2066                           
  2067                           ;controlador3.c: 127: read_temperatura_exterior();
  2068  0CA4  120A  158A  22FB  120A  158A  	fcall	_read_temperatura_exterior
  2069  0CA9                     l3305:
  2070                           
  2071                           ;controlador3.c: 128: ADCready = 1;
  2072  0CA9  3001               	movlw	1
  2073  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  2074  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0CAC  00D9               	movwf	_ADCready^(0+128)
  2076  0CAD  3000               	movlw	0
  2077  0CAE  00DA               	movwf	(_ADCready^(0+128)+1)
  2078  0CAF                     l3307:
  2079                           
  2080                           ;controlador3.c: 129: read_temperatura_interior();
  2081  0CAF  160A  118A  2715  120A  158A  	fcall	_read_temperatura_interior
  2082                           
  2083                           ;controlador3.c: 130: ADCready = 1;
  2084  0CB4  3001               	movlw	1
  2085  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0CB6  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0CB7  00D9               	movwf	_ADCready^(0+128)
  2088  0CB8  3000               	movlw	0
  2089  0CB9  00DA               	movwf	(_ADCready^(0+128)+1)
  2090  0CBA                     l3309:
  2091                           
  2092                           ;controlador3.c: 132: logica_Actuadores();
  2093  0CBA  120A  158A  2653  120A  158A  	fcall	_logica_Actuadores
  2094  0CBF                     l3311:
  2095                           
  2096                           ;controlador3.c: 134: if (estadoInterrupcion == MostrarDatos) {
  2097  0CBF  3002               	movlw	2
  2098  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0CC2  0667               	xorwf	_estadoInterrupcion^(0+128),w
  2101  0CC3  1D03               	btfss	3,2
  2102  0CC4  2CC6               	goto	u4071
  2103  0CC5  2CC7               	goto	u4070
  2104  0CC6                     u4071:
  2105  0CC6  2CCC               	goto	l3315
  2106  0CC7                     u4070:
  2107  0CC7                     l3313:
  2108                           
  2109                           ;controlador3.c: 135: estadoActual = MostrarDatos;
  2110  0CC7  3002               	movlw	2
  2111  0CC8  00C6               	movwf	??_main^(0+128)
  2112  0CC9  0846               	movf	??_main^(0+128),w
  2113  0CCA  00E8               	movwf	_estadoActual^(0+128)
  2114                           
  2115                           ;controlador3.c: 136: } else {
  2116  0CCB  2D12               	goto	l3339
  2117  0CCC                     l3315:
  2118                           
  2119                           ;controlador3.c: 137: estadoActual = Esperar;
  2120  0CCC  3003               	movlw	3
  2121  0CCD  00C6               	movwf	??_main^(0+128)
  2122  0CCE  0846               	movf	??_main^(0+128),w
  2123  0CCF  00E8               	movwf	_estadoActual^(0+128)
  2124                           
  2125                           ;controlador3.c: 138: estadoInterrupcion = Esperar;
  2126  0CD0  3003               	movlw	3
  2127  0CD1  00C6               	movwf	??_main^(0+128)
  2128  0CD2  0846               	movf	??_main^(0+128),w
  2129  0CD3  00E7               	movwf	_estadoInterrupcion^(0+128)
  2130                           
  2131                           ;controlador3.c: 140: cont++;
  2132  0CD4  3001               	movlw	1
  2133  0CD5  07FA               	addwf	_cont,f
  2134  0CD6  1803               	skipnc
  2135  0CD7  0AFB               	incf	_cont+1,f
  2136  0CD8  3000               	movlw	0
  2137  0CD9  07FB               	addwf	_cont+1,f
  2138  0CDA                     l3317:
  2139                           
  2140                           ;controlador3.c: 141: INTCONbits.T0IF = 0;
  2141  0CDA  110B               	bcf	11,2	;volatile
  2142  0CDB                     l3319:
  2143                           
  2144                           ;controlador3.c: 142: INTCONbits.T0IE = 1;
  2145  0CDB  168B               	bsf	11,5	;volatile
  2146  0CDC  2D12               	goto	l3339
  2147  0CDD                     l3321:
  2148                           
  2149                           ;controlador3.c: 148: mostrarDatos();
  2150  0CDD  160A  118A  22DD  120A  158A  	fcall	_mostrarDatos
  2151  0CE2                     l3323:
  2152                           
  2153                           ;controlador3.c: 149: estadoActual = Esperar;
  2154  0CE2  3003               	movlw	3
  2155  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0CE5  00C6               	movwf	??_main^(0+128)
  2158  0CE6  0846               	movf	??_main^(0+128),w
  2159  0CE7  00E8               	movwf	_estadoActual^(0+128)
  2160  0CE8                     l3325:
  2161                           
  2162                           ;controlador3.c: 150: estadoInterrupcion = Esperar;
  2163  0CE8  3003               	movlw	3
  2164  0CE9  00C6               	movwf	??_main^(0+128)
  2165  0CEA  0846               	movf	??_main^(0+128),w
  2166  0CEB  00E7               	movwf	_estadoInterrupcion^(0+128)
  2167  0CEC                     l3327:
  2168                           
  2169                           ;controlador3.c: 152: cont++;
  2170  0CEC  3001               	movlw	1
  2171  0CED  07FA               	addwf	_cont,f
  2172  0CEE  1803               	skipnc
  2173  0CEF  0AFB               	incf	_cont+1,f
  2174  0CF0  3000               	movlw	0
  2175  0CF1  07FB               	addwf	_cont+1,f
  2176  0CF2                     l3329:
  2177                           
  2178                           ;controlador3.c: 153: INTCONbits.T0IF = 0;
  2179  0CF2  110B               	bcf	11,2	;volatile
  2180  0CF3                     l3331:
  2181                           
  2182                           ;controlador3.c: 154: INTCONbits.T0IE = 1;
  2183  0CF3  168B               	bsf	11,5	;volatile
  2184                           
  2185                           ;controlador3.c: 155: break;
  2186  0CF4  2D12               	goto	l3339
  2187  0CF5                     l3333:
  2188                           
  2189                           ;controlador3.c: 158: printf("---Estado Apagando el Horno...---\n");
  2190  0CF5  30A2               	movlw	low (STR_18| (0+32768))
  2191  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0CF8  00EB               	movwf	printf@f
  2194  0CF9  3087               	movlw	high (STR_18| (0+32768))
  2195  0CFA  00EC               	movwf	printf@f+1
  2196  0CFB  120A  118A  2020  120A  158A  	fcall	_printf
  2197                           
  2198                           ;controlador3.c: 160: break;
  2199  0D00  2D12               	goto	l3339
  2200  0D01                     l3337:
  2201  0D01  0868               	movf	_estadoActual^(0+128),w
  2202                           
  2203                           ; Switch size 1, requested type "simple"
  2204                           ; Number of cases is 5, Range of values is 0 to 4
  2205                           ; switch strategies available:
  2206                           ; Name         Instructions Cycles
  2207                           ; simple_byte           16     9 (average)
  2208                           ; direct_byte           23     8 (fixed)
  2209                           ; jumptable            260     6 (fixed)
  2210                           ;	Chosen strategy is simple_byte
  2211  0D02  3A00               	xorlw	0	; case 0
  2212  0D03  1903               	skipnz
  2213  0D04  2C52               	goto	l3283
  2214  0D05  3A01               	xorlw	1	; case 1
  2215  0D06  1903               	skipnz
  2216  0D07  2C83               	goto	l3295
  2217  0D08  3A03               	xorlw	3	; case 2
  2218  0D09  1903               	skipnz
  2219  0D0A  2CDD               	goto	l3321
  2220  0D0B  3A01               	xorlw	1	; case 3
  2221  0D0C  1903               	skipnz
  2222  0D0D  2C50               	goto	l340
  2223  0D0E  3A07               	xorlw	7	; case 4
  2224  0D0F  1903               	skipnz
  2225  0D10  2CF5               	goto	l3333
  2226  0D11  2D12               	goto	l3339
  2227  0D12                     l3339:
  2228  0D12  3004               	movlw	4
  2229  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0D15  0668               	xorwf	_estadoActual^(0+128),w
  2232  0D16  1D03               	btfss	3,2
  2233  0D17  2D19               	goto	u4081
  2234  0D18  2D1A               	goto	u4080
  2235  0D19                     u4081:
  2236  0D19  2D01               	goto	l3337
  2237  0D1A                     u4080:
  2238  0D1A                     l353:
  2239  0D1A  120A  118A  280C   	ljmp	start
  2240  0D1D                     __end_of_main:
  2241                           
  2242                           	psect	text1
  2243  10FC                     __ptext1:	
  2244 ;; *************** function _set_up_Sensores *****************
  2245 ;; Defined at:
  2246 ;;		line 14 in file "sensores.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _set_up_Sensores
  2276  10FC                     _set_up_Sensores:
  2277  10FC                     l2973:	
  2278                           ;incstack = 0
  2279                           ; Regs used in _set_up_Sensores: [wreg+status,2+status,0]
  2280                           
  2281                           
  2282                           ;sensores.c: 19: ANSELHbits.ANS9 = 1;
  2283  10FC  1683               	bsf	3,5	;RP0=1, select bank3
  2284  10FD  1703               	bsf	3,6	;RP1=1, select bank3
  2285  10FE  1489               	bsf	9,1	;volatile
  2286                           
  2287                           ;sensores.c: 20: TRISBbits.TRISB3 = 1;
  2288  10FF  1683               	bsf	3,5	;RP0=1, select bank1
  2289  1100  1303               	bcf	3,6	;RP1=0, select bank1
  2290  1101  1586               	bsf	6,3	;volatile
  2291                           
  2292                           ;sensores.c: 23: ANSELHbits.ANS8 = 1;
  2293  1102  1683               	bsf	3,5	;RP0=1, select bank3
  2294  1103  1703               	bsf	3,6	;RP1=1, select bank3
  2295  1104  1409               	bsf	9,0	;volatile
  2296                           
  2297                           ;sensores.c: 24: TRISBbits.TRISB2 = 1;
  2298  1105  1683               	bsf	3,5	;RP0=1, select bank1
  2299  1106  1303               	bcf	3,6	;RP1=0, select bank1
  2300  1107  1506               	bsf	6,2	;volatile
  2301                           
  2302                           ;sensores.c: 27: ANSELHbits.ANS10 = 1;
  2303  1108  1683               	bsf	3,5	;RP0=1, select bank3
  2304  1109  1703               	bsf	3,6	;RP1=1, select bank3
  2305  110A  1509               	bsf	9,2	;volatile
  2306                           
  2307                           ;sensores.c: 28: TRISBbits.TRISB1 = 1;
  2308  110B  1683               	bsf	3,5	;RP0=1, select bank1
  2309  110C  1303               	bcf	3,6	;RP1=0, select bank1
  2310  110D  1486               	bsf	6,1	;volatile
  2311                           
  2312                           ;sensores.c: 31: ANSELHbits.ANS12 = 1;
  2313  110E  1683               	bsf	3,5	;RP0=1, select bank3
  2314  110F  1703               	bsf	3,6	;RP1=1, select bank3
  2315  1110  1609               	bsf	9,4	;volatile
  2316                           
  2317                           ;sensores.c: 32: TRISBbits.TRISB0 = 1;
  2318  1111  1683               	bsf	3,5	;RP0=1, select bank1
  2319  1112  1303               	bcf	3,6	;RP1=0, select bank1
  2320  1113  1406               	bsf	6,0	;volatile
  2321                           
  2322                           ;sensores.c: 36: ANSELHbits.ANS13 = 1;
  2323  1114  1683               	bsf	3,5	;RP0=1, select bank3
  2324  1115  1703               	bsf	3,6	;RP1=1, select bank3
  2325  1116  1689               	bsf	9,5	;volatile
  2326                           
  2327                           ;sensores.c: 37: TRISBbits.TRISB5 = 1;
  2328  1117  1683               	bsf	3,5	;RP0=1, select bank1
  2329  1118  1303               	bcf	3,6	;RP1=0, select bank1
  2330  1119  1686               	bsf	6,5	;volatile
  2331                           
  2332                           ;sensores.c: 40: PIE1bits.ADIE = 1;
  2333  111A  170C               	bsf	12,6	;volatile
  2334  111B                     l2975:
  2335                           
  2336                           ;sensores.c: 42: ADCON0bits.ADCS = 0b10;
  2337  111B  1283               	bcf	3,5	;RP0=0, select bank0
  2338  111C  1303               	bcf	3,6	;RP1=0, select bank0
  2339  111D  081F               	movf	31,w	;volatile
  2340  111E  393F               	andlw	-193
  2341  111F  3880               	iorlw	128
  2342  1120  009F               	movwf	31	;volatile
  2343  1121                     l2977:
  2344                           
  2345                           ;sensores.c: 43: ADCON0bits.ADON = 1;
  2346  1121  141F               	bsf	31,0	;volatile
  2347  1122                     l2979:
  2348                           
  2349                           ;sensores.c: 45: ADCON1bits.VCFG0 = 0;
  2350  1122  1683               	bsf	3,5	;RP0=1, select bank1
  2351  1123  1303               	bcf	3,6	;RP1=0, select bank1
  2352  1124  121F               	bcf	31,4	;volatile
  2353  1125                     l2981:
  2354                           
  2355                           ;sensores.c: 46: ADCON1bits.VCFG1 = 0;
  2356  1125  129F               	bcf	31,5	;volatile
  2357  1126                     l2983:
  2358                           
  2359                           ;sensores.c: 47: ADCON1bits.ADFM = 1;
  2360  1126  179F               	bsf	31,7	;volatile
  2361  1127                     l41:
  2362  1127  0008               	return
  2363  1128                     __end_of_set_up_Sensores:
  2364                           
  2365                           	psect	text2
  2366  100B                     __ptext2:	
  2367 ;; *************** function _set_up_Actuadores *****************
  2368 ;; Defined at:
  2369 ;;		line 40 in file "actuadores.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    3
  2390 ;; This function calls:
  2391 ;;		_init_PWM_CCP1
  2392 ;;		_init_timer2
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _set_up_Actuadores
  2400  100B                     _set_up_Actuadores:
  2401  100B                     l3129:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _set_up_Actuadores: [wreg+status,2+status,0+pclath+cstack]
  2404                           
  2405                           
  2406                           ;actuadores.c: 42: TRISCbits.TRISC4 = 0;
  2407  100B  1683               	bsf	3,5	;RP0=1, select bank1
  2408  100C  1303               	bcf	3,6	;RP1=0, select bank1
  2409  100D  1207               	bcf	7,4	;volatile
  2410                           
  2411                           ;actuadores.c: 45: ANSELHbits.ANS11 = 0;
  2412  100E  1683               	bsf	3,5	;RP0=1, select bank3
  2413  100F  1703               	bsf	3,6	;RP1=1, select bank3
  2414  1010  1189               	bcf	9,3	;volatile
  2415                           
  2416                           ;actuadores.c: 46: TRISBbits.TRISB4 = 0;
  2417  1011  1683               	bsf	3,5	;RP0=1, select bank1
  2418  1012  1303               	bcf	3,6	;RP1=0, select bank1
  2419  1013  1206               	bcf	6,4	;volatile
  2420  1014                     l3131:
  2421                           
  2422                           ;actuadores.c: 49: TRISC = 0;
  2423  1014  0187               	clrf	7	;volatile
  2424                           
  2425                           ;actuadores.c: 50: CCPR1L = 0;
  2426  1015  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1016  1303               	bcf	3,6	;RP1=0, select bank0
  2428  1017  0195               	clrf	21	;volatile
  2429  1018                     l3133:
  2430                           
  2431                           ;actuadores.c: 51: init_PWM_CCP1();
  2432  1018  160A  158A  273C  160A  118A  	fcall	_init_PWM_CCP1
  2433  101D                     l3135:
  2434                           
  2435                           ;actuadores.c: 52: init_timer2();
  2436  101D  160A  158A  279D  160A  118A  	fcall	_init_timer2
  2437  1022                     l221:
  2438  1022  0008               	return
  2439  1023                     __end_of_set_up_Actuadores:
  2440                           
  2441                           	psect	text3
  2442  1F9D                     __ptext3:	
  2443 ;; *************** function _init_timer2 *****************
  2444 ;; Defined at:
  2445 ;;		line 33 in file "actuadores.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    2
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_set_up_Actuadores
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _init_timer2
  2475  1F9D                     _init_timer2:
  2476  1F9D                     l2825:	
  2477                           ;incstack = 0
  2478                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2479                           
  2480                           
  2481                           ;actuadores.c: 34: T2CONbits.TMR2ON = 1;
  2482  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2483  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2484  1F9F  1512               	bsf	18,2	;volatile
  2485  1FA0                     l2827:
  2486                           
  2487                           ;actuadores.c: 35: T2CONbits.T2CKPS = 0b01;
  2488  1FA0  0812               	movf	18,w	;volatile
  2489  1FA1  39FC               	andlw	-4
  2490  1FA2  3801               	iorlw	1
  2491  1FA3  0092               	movwf	18	;volatile
  2492                           
  2493                           ;actuadores.c: 36: T2CONbits.TOUTPS = 0b0000;
  2494  1FA4  3087               	movlw	-121
  2495  1FA5  0592               	andwf	18,f	;volatile
  2496  1FA6                     l2829:
  2497                           
  2498                           ;actuadores.c: 37: PR2 = 42;
  2499  1FA6  302A               	movlw	42
  2500  1FA7  1683               	bsf	3,5	;RP0=1, select bank1
  2501  1FA8  1303               	bcf	3,6	;RP1=0, select bank1
  2502  1FA9  0092               	movwf	18	;volatile
  2503  1FAA                     l218:
  2504  1FAA  0008               	return
  2505  1FAB                     __end_of_init_timer2:
  2506                           
  2507                           	psect	text4
  2508  1F3C                     __ptext4:	
  2509 ;; *************** function _init_PWM_CCP1 *****************
  2510 ;; Defined at:
  2511 ;;		line 21 in file "actuadores.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    2
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_set_up_Actuadores
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _init_PWM_CCP1
  2541  1F3C                     _init_PWM_CCP1:
  2542  1F3C                     l2815:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _init_PWM_CCP1: [wreg+status,2+status,0]
  2545                           
  2546                           
  2547                           ;actuadores.c: 22: CCP1CONbits.P1M = 0;
  2548  1F3C  303F               	movlw	-193
  2549  1F3D  1283               	bcf	3,5	;RP0=0, select bank0
  2550  1F3E  1303               	bcf	3,6	;RP1=0, select bank0
  2551  1F3F  0597               	andwf	23,f	;volatile
  2552  1F40                     l2817:
  2553                           
  2554                           ;actuadores.c: 23: CCP1CONbits.CCP1M0 = 0;
  2555  1F40  1017               	bcf	23,0	;volatile
  2556  1F41                     l2819:
  2557                           
  2558                           ;actuadores.c: 24: CCP1CONbits.CCP1M1 = 0;
  2559  1F41  1097               	bcf	23,1	;volatile
  2560  1F42                     l2821:
  2561                           
  2562                           ;actuadores.c: 25: CCP1CONbits.CCP1M2 = 1;
  2563  1F42  1517               	bsf	23,2	;volatile
  2564  1F43                     l2823:
  2565                           
  2566                           ;actuadores.c: 26: CCP1CONbits.CCP1M3 = 1;
  2567  1F43  1597               	bsf	23,3	;volatile
  2568  1F44                     l215:
  2569  1F44  0008               	return
  2570  1F45                     __end_of_init_PWM_CCP1:
  2571                           
  2572                           	psect	text5
  2573  1715                     __ptext5:	
  2574 ;; *************** function _read_temperatura_interior *****************
  2575 ;; Defined at:
  2576 ;;		line 50 in file "sensores.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  lecturaV        3   24[BANK1 ] float 
  2581 ;;  lectura         2   30[BANK1 ] int 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       0       0       0       0
  2592 ;;      Locals:         0       0       8       0       0
  2593 ;;      Temps:          0       0       2       0       0
  2594 ;;      Totals:         0       0      10       0       0
  2595 ;;Total ram usage:       10 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    4
  2598 ;; This function calls:
  2599 ;;		___awtoft
  2600 ;;		___ftdiv
  2601 ;;		___ftmul
  2602 ;;		___fttol
  2603 ;;		___wmul
  2604 ;;		_get_temperatura_interior
  2605 ;;		_printf
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _read_temperatura_interior
  2613  1715                     _read_temperatura_interior:
  2614  1715                     l2985:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _read_temperatura_interior: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2617                           
  2618  1715                     l2987:
  2619                           
  2620                           ;sensores.c: 53: ADCON0bits.CHS = 0b1001;
  2621  1715  1283               	bcf	3,5	;RP0=0, select bank0
  2622  1716  1303               	bcf	3,6	;RP1=0, select bank0
  2623  1717  081F               	movf	31,w	;volatile
  2624  1718  39C3               	andlw	-61
  2625  1719  3824               	iorlw	36
  2626  171A  009F               	movwf	31	;volatile
  2627  171B                     l2989:
  2628                           
  2629                           ;sensores.c: 57: ADCON0bits.GO=1;
  2630  171B  149F               	bsf	31,1	;volatile
  2631  171C                     l2991:	
  2632                           ;sensores.c: 59: while (ADCready == 0);
  2633                           
  2634  171C  1683               	bsf	3,5	;RP0=1, select bank1
  2635  171D  1303               	bcf	3,6	;RP1=0, select bank1
  2636  171E  0859               	movf	_ADCready^(0+128),w
  2637  171F  045A               	iorwf	(_ADCready+1)^(0+128),w
  2638  1720  1903               	btfsc	3,2
  2639  1721  2F23               	goto	u3751
  2640  1722  2F24               	goto	u3750
  2641  1723                     u3751:
  2642  1723  2F1C               	goto	l2991
  2643  1724                     u3750:
  2644  1724                     l2993:
  2645                           
  2646                           ;sensores.c: 60: ADCready = 0;
  2647  1724  01D9               	clrf	_ADCready^(0+128)
  2648  1725  01DA               	clrf	(_ADCready+1)^(0+128)
  2649  1726                     l2995:
  2650                           
  2651                           ;sensores.c: 62: lectura = ADRESH << 8;
  2652  1726  1283               	bcf	3,5	;RP0=0, select bank0
  2653  1727  1303               	bcf	3,6	;RP1=0, select bank0
  2654  1728  081E               	movf	30,w	;volatile
  2655  1729  1683               	bsf	3,5	;RP0=1, select bank1
  2656  172A  1303               	bcf	3,6	;RP1=0, select bank1
  2657  172B  00B6               	movwf	??_read_temperatura_interior^(0+128)
  2658  172C  01B7               	clrf	(??_read_temperatura_interior^(0+128)+1)
  2659  172D  0836               	movf	??_read_temperatura_interior^(0+128),w
  2660  172E  00B7               	movwf	(??_read_temperatura_interior^(0+128)+1)
  2661  172F  01B6               	clrf	??_read_temperatura_interior^(0+128)
  2662  1730  0836               	movf	??_read_temperatura_interior^(0+128),w
  2663  1731  00BE               	movwf	read_temperatura_interior@lectura^(0+128)
  2664  1732  0837               	movf	(??_read_temperatura_interior+1)^(0+128),w
  2665  1733  00BF               	movwf	(read_temperatura_interior@lectura+1)^(0+128)
  2666  1734                     l2997:
  2667                           
  2668                           ;sensores.c: 63: lectura += ADRESL;
  2669  1734  081E               	movf	30,w	;volatile
  2670  1735  00B6               	movwf	??_read_temperatura_interior^(0+128)
  2671  1736  01B7               	clrf	(??_read_temperatura_interior^(0+128)+1)
  2672  1737  0836               	movf	??_read_temperatura_interior^(0+128),w
  2673  1738  07BE               	addwf	read_temperatura_interior@lectura^(0+128),f
  2674  1739  1803               	skipnc
  2675  173A  0ABF               	incf	(read_temperatura_interior@lectura+1)^(0+128),f
  2676  173B  0837               	movf	(??_read_temperatura_interior+1)^(0+128),w
  2677  173C  07BF               	addwf	(read_temperatura_interior@lectura+1)^(0+128),f
  2678  173D                     l2999:
  2679                           
  2680                           ;sensores.c: 66: float lecturaV = (((lectura * 5) / 1024.0)* 60)/3.75;
  2681  173D  3000               	movlw	0
  2682  173E  1283               	bcf	3,5	;RP0=0, select bank0
  2683  173F  1303               	bcf	3,6	;RP1=0, select bank0
  2684  1740  00CB               	movwf	___ftmul@f1
  2685  1741  3070               	movlw	112
  2686  1742  00CC               	movwf	___ftmul@f1+1
  2687  1743  3042               	movlw	66
  2688  1744  00CD               	movwf	___ftmul@f1+2
  2689  1745  3000               	movlw	0
  2690  1746  00BB               	movwf	___ftdiv@f2
  2691  1747  3080               	movlw	128
  2692  1748  00BC               	movwf	___ftdiv@f2+1
  2693  1749  3044               	movlw	68
  2694  174A  00BD               	movwf	___ftdiv@f2+2
  2695  174B  1683               	bsf	3,5	;RP0=1, select bank1
  2696  174C  1303               	bcf	3,6	;RP1=0, select bank1
  2697  174D  083F               	movf	(read_temperatura_interior@lectura+1)^(0+128),w
  2698  174E  1283               	bcf	3,5	;RP0=0, select bank0
  2699  174F  1303               	bcf	3,6	;RP1=0, select bank0
  2700  1750  00A1               	movwf	___wmul@multiplier+1
  2701  1751  1683               	bsf	3,5	;RP0=1, select bank1
  2702  1752  1303               	bcf	3,6	;RP1=0, select bank1
  2703  1753  083E               	movf	read_temperatura_interior@lectura^(0+128),w
  2704  1754  1283               	bcf	3,5	;RP0=0, select bank0
  2705  1755  1303               	bcf	3,6	;RP1=0, select bank0
  2706  1756  00A0               	movwf	___wmul@multiplier
  2707  1757  3005               	movlw	5
  2708  1758  00A2               	movwf	___wmul@multiplicand
  2709  1759  3000               	movlw	0
  2710  175A  00A3               	movwf	___wmul@multiplicand+1
  2711  175B  160A  118A  2082  160A  118A  	fcall	___wmul
  2712  1760  1283               	bcf	3,5	;RP0=0, select bank0
  2713  1761  1303               	bcf	3,6	;RP1=0, select bank0
  2714  1762  0821               	movf	?___wmul+1,w
  2715  1763  00A9               	movwf	___awtoft@c+1
  2716  1764  0820               	movf	?___wmul,w
  2717  1765  00A8               	movwf	___awtoft@c
  2718  1766  160A  118A  20A9  160A  118A  	fcall	___awtoft
  2719  176B  1283               	bcf	3,5	;RP0=0, select bank0
  2720  176C  1303               	bcf	3,6	;RP1=0, select bank0
  2721  176D  0828               	movf	?___awtoft,w
  2722  176E  00BE               	movwf	___ftdiv@f1
  2723  176F  0829               	movf	?___awtoft+1,w
  2724  1770  00BF               	movwf	___ftdiv@f1+1
  2725  1771  082A               	movf	?___awtoft+2,w
  2726  1772  00C0               	movwf	___ftdiv@f1+2
  2727  1773  120A  158A  214D  160A  118A  	fcall	___ftdiv
  2728  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2729  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2730  177A  083B               	movf	?___ftdiv,w
  2731  177B  00CE               	movwf	___ftmul@f2
  2732  177C  083C               	movf	?___ftdiv+1,w
  2733  177D  00CF               	movwf	___ftmul@f2+1
  2734  177E  083D               	movf	?___ftdiv+2,w
  2735  177F  00D0               	movwf	___ftmul@f2+2
  2736  1780  160A  118A  254B  160A  118A  	fcall	___ftmul
  2737  1785  1283               	bcf	3,5	;RP0=0, select bank0
  2738  1786  1303               	bcf	3,6	;RP1=0, select bank0
  2739  1787  084B               	movf	?___ftmul,w
  2740  1788  1683               	bsf	3,5	;RP0=1, select bank1
  2741  1789  1303               	bcf	3,6	;RP1=0, select bank1
  2742  178A  00BB               	movwf	_read_temperatura_interior$1425^(0+128)
  2743  178B  1283               	bcf	3,5	;RP0=0, select bank0
  2744  178C  1303               	bcf	3,6	;RP1=0, select bank0
  2745  178D  084C               	movf	?___ftmul+1,w
  2746  178E  1683               	bsf	3,5	;RP0=1, select bank1
  2747  178F  1303               	bcf	3,6	;RP1=0, select bank1
  2748  1790  00BC               	movwf	(_read_temperatura_interior$1425+1)^(0+128)
  2749  1791  1283               	bcf	3,5	;RP0=0, select bank0
  2750  1792  1303               	bcf	3,6	;RP1=0, select bank0
  2751  1793  084D               	movf	?___ftmul+2,w
  2752  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2753  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2754  1796  00BD               	movwf	(_read_temperatura_interior$1425+2)^(0+128)
  2755  1797                     l3001:
  2756                           
  2757                           ;sensores.c: 66: float lecturaV = (((lectura * 5) / 1024.0)* 60)/3.75;
  2758  1797  3000               	movlw	0
  2759  1798  1283               	bcf	3,5	;RP0=0, select bank0
  2760  1799  1303               	bcf	3,6	;RP1=0, select bank0
  2761  179A  00BB               	movwf	___ftdiv@f2
  2762  179B  3070               	movlw	112
  2763  179C  00BC               	movwf	___ftdiv@f2+1
  2764  179D  3040               	movlw	64
  2765  179E  00BD               	movwf	___ftdiv@f2+2
  2766  179F  1683               	bsf	3,5	;RP0=1, select bank1
  2767  17A0  1303               	bcf	3,6	;RP1=0, select bank1
  2768  17A1  083B               	movf	_read_temperatura_interior$1425^(0+128),w
  2769  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  2770  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  2771  17A4  00BE               	movwf	___ftdiv@f1
  2772  17A5  1683               	bsf	3,5	;RP0=1, select bank1
  2773  17A6  1303               	bcf	3,6	;RP1=0, select bank1
  2774  17A7  083C               	movf	(_read_temperatura_interior$1425+1)^(0+128),w
  2775  17A8  1283               	bcf	3,5	;RP0=0, select bank0
  2776  17A9  1303               	bcf	3,6	;RP1=0, select bank0
  2777  17AA  00BF               	movwf	___ftdiv@f1+1
  2778  17AB  1683               	bsf	3,5	;RP0=1, select bank1
  2779  17AC  1303               	bcf	3,6	;RP1=0, select bank1
  2780  17AD  083D               	movf	(_read_temperatura_interior$1425+2)^(0+128),w
  2781  17AE  1283               	bcf	3,5	;RP0=0, select bank0
  2782  17AF  1303               	bcf	3,6	;RP1=0, select bank0
  2783  17B0  00C0               	movwf	___ftdiv@f1+2
  2784  17B1  120A  158A  214D  160A  118A  	fcall	___ftdiv
  2785  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  2786  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  2787  17B8  083B               	movf	?___ftdiv,w
  2788  17B9  1683               	bsf	3,5	;RP0=1, select bank1
  2789  17BA  1303               	bcf	3,6	;RP1=0, select bank1
  2790  17BB  00B8               	movwf	read_temperatura_interior@lecturaV^(0+128)
  2791  17BC  1283               	bcf	3,5	;RP0=0, select bank0
  2792  17BD  1303               	bcf	3,6	;RP1=0, select bank0
  2793  17BE  083C               	movf	?___ftdiv+1,w
  2794  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  2795  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  2796  17C1  00B9               	movwf	(read_temperatura_interior@lecturaV+1)^(0+128)
  2797  17C2  1283               	bcf	3,5	;RP0=0, select bank0
  2798  17C3  1303               	bcf	3,6	;RP1=0, select bank0
  2799  17C4  083D               	movf	?___ftdiv+2,w
  2800  17C5  1683               	bsf	3,5	;RP0=1, select bank1
  2801  17C6  1303               	bcf	3,6	;RP1=0, select bank1
  2802  17C7  00BA               	movwf	(read_temperatura_interior@lecturaV+2)^(0+128)
  2803  17C8                     l3003:
  2804                           
  2805                           ;sensores.c: 67: tempint = (int) lecturaV;
  2806  17C8  0838               	movf	read_temperatura_interior@lecturaV^(0+128),w
  2807  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  2808  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  2809  17CB  00DB               	movwf	___fttol@f1
  2810  17CC  1683               	bsf	3,5	;RP0=1, select bank1
  2811  17CD  1303               	bcf	3,6	;RP1=0, select bank1
  2812  17CE  0839               	movf	(read_temperatura_interior@lecturaV+1)^(0+128),w
  2813  17CF  1283               	bcf	3,5	;RP0=0, select bank0
  2814  17D0  1303               	bcf	3,6	;RP1=0, select bank0
  2815  17D1  00DC               	movwf	___fttol@f1+1
  2816  17D2  1683               	bsf	3,5	;RP0=1, select bank1
  2817  17D3  1303               	bcf	3,6	;RP1=0, select bank1
  2818  17D4  083A               	movf	(read_temperatura_interior@lecturaV+2)^(0+128),w
  2819  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2820  17D6  1303               	bcf	3,6	;RP1=0, select bank0
  2821  17D7  00DD               	movwf	___fttol@f1+2
  2822  17D8  160A  118A  2357  160A  118A  	fcall	___fttol
  2823  17DD  1283               	bcf	3,5	;RP0=0, select bank0
  2824  17DE  1303               	bcf	3,6	;RP1=0, select bank0
  2825  17DF  085C               	movf	?___fttol+1,w
  2826  17E0  1683               	bsf	3,5	;RP0=1, select bank1
  2827  17E1  1303               	bcf	3,6	;RP1=0, select bank1
  2828  17E2  00E6               	movwf	(_tempint+1)^(0+128)
  2829  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  2830  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  2831  17E5  085B               	movf	?___fttol,w
  2832  17E6  1683               	bsf	3,5	;RP0=1, select bank1
  2833  17E7  1303               	bcf	3,6	;RP1=0, select bank1
  2834  17E8  00E5               	movwf	_tempint^(0+128)
  2835  17E9                     l3005:
  2836                           
  2837                           ;sensores.c: 68: printf("Temperatura interior  \r\n",get_temperatura_interior());
  2838  17E9  308E               	movlw	low (STR_1| (0+32768))
  2839  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  2840  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  2841  17EC  00EB               	movwf	printf@f
  2842  17ED  3088               	movlw	high (STR_1| (0+32768))
  2843  17EE  00EC               	movwf	printf@f+1
  2844  17EF  160A  158A  2769  160A  118A  	fcall	_get_temperatura_interior
  2845  17F4  1283               	bcf	3,5	;RP0=0, select bank0
  2846  17F5  1303               	bcf	3,6	;RP1=0, select bank0
  2847  17F6  0821               	movf	?_get_temperatura_interior+1,w
  2848  17F7  00EE               	movwf	?_printf+3
  2849  17F8  0820               	movf	?_get_temperatura_interior,w
  2850  17F9  00ED               	movwf	?_printf+2
  2851  17FA  120A  118A  2020  160A  118A  	fcall	_printf
  2852  17FF                     l47:
  2853  17FF  0008               	return
  2854  1800                     __end_of_read_temperatura_interior:
  2855                           
  2856                           	psect	text6
  2857  0AFB                     __ptext6:	
  2858 ;; *************** function _read_temperatura_exterior *****************
  2859 ;; Defined at:
  2860 ;;		line 76 in file "sensores.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  lecturaV        3   30[BANK1 ] float 
  2865 ;;  Tc              3   27[BANK1 ] float 
  2866 ;;  V0              3   24[BANK1 ] float 
  2867 ;;  lectura         2   36[BANK1 ] int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         0       0      14       0       0
  2879 ;;      Temps:          0       0       2       0       0
  2880 ;;      Totals:         0       0      16       0       0
  2881 ;;Total ram usage:       16 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    5
  2884 ;; This function calls:
  2885 ;;		___awtoft
  2886 ;;		___ftdiv
  2887 ;;		___ftsub
  2888 ;;		___fttol
  2889 ;;		___wmul
  2890 ;;		_printf
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _read_temperatura_exterior
  2898  0AFB                     _read_temperatura_exterior:
  2899  0AFB                     l3007:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _read_temperatura_exterior: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2902                           
  2903  0AFB                     l3009:
  2904                           
  2905                           ;sensores.c: 80: float V0 = 0.5;
  2906  0AFB  3000               	movlw	0
  2907  0AFC  1683               	bsf	3,5	;RP0=1, select bank1
  2908  0AFD  1303               	bcf	3,6	;RP1=0, select bank1
  2909  0AFE  00B8               	movwf	read_temperatura_exterior@V0^(0+128)
  2910  0AFF  3000               	movlw	0
  2911  0B00  00B9               	movwf	(read_temperatura_exterior@V0+1)^(0+128)
  2912  0B01  303F               	movlw	63
  2913  0B02  00BA               	movwf	(read_temperatura_exterior@V0+2)^(0+128)
  2914  0B03                     l3011:
  2915                           
  2916                           ;sensores.c: 81: float Tc = 0.01;
  2917  0B03  30D7               	movlw	215
  2918  0B04  00BB               	movwf	read_temperatura_exterior@Tc^(0+128)
  2919  0B05  3023               	movlw	35
  2920  0B06  00BC               	movwf	(read_temperatura_exterior@Tc+1)^(0+128)
  2921  0B07  303C               	movlw	60
  2922  0B08  00BD               	movwf	(read_temperatura_exterior@Tc+2)^(0+128)
  2923  0B09                     l3013:
  2924                           
  2925                           ;sensores.c: 83: ADCON0bits.CHS = 0b1000;
  2926  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0B0B  081F               	movf	31,w	;volatile
  2929  0B0C  39C3               	andlw	-61
  2930  0B0D  3820               	iorlw	32
  2931  0B0E  009F               	movwf	31	;volatile
  2932  0B0F                     l3015:
  2933                           
  2934                           ;sensores.c: 85: ADCON0bits.GO=1;
  2935  0B0F  149F               	bsf	31,1	;volatile
  2936  0B10                     l3017:	
  2937                           ;sensores.c: 89: while (ADCready == 0);
  2938                           
  2939  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0B11  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0B12  0859               	movf	_ADCready^(0+128),w
  2942  0B13  045A               	iorwf	(_ADCready+1)^(0+128),w
  2943  0B14  1903               	btfsc	3,2
  2944  0B15  2B17               	goto	u3761
  2945  0B16  2B18               	goto	u3760
  2946  0B17                     u3761:
  2947  0B17  2B10               	goto	l3017
  2948  0B18                     u3760:
  2949  0B18                     l3019:
  2950                           
  2951                           ;sensores.c: 90: ADCready = 0;
  2952  0B18  01D9               	clrf	_ADCready^(0+128)
  2953  0B19  01DA               	clrf	(_ADCready+1)^(0+128)
  2954  0B1A                     l3021:
  2955                           
  2956                           ;sensores.c: 92: lectura = ADRESH << 8;
  2957  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0B1C  081E               	movf	30,w	;volatile
  2960  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0B1E  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0B1F  00B6               	movwf	??_read_temperatura_exterior^(0+128)
  2963  0B20  01B7               	clrf	(??_read_temperatura_exterior^(0+128)+1)
  2964  0B21  0836               	movf	??_read_temperatura_exterior^(0+128),w
  2965  0B22  00B7               	movwf	(??_read_temperatura_exterior^(0+128)+1)
  2966  0B23  01B6               	clrf	??_read_temperatura_exterior^(0+128)
  2967  0B24  0836               	movf	??_read_temperatura_exterior^(0+128),w
  2968  0B25  00C4               	movwf	read_temperatura_exterior@lectura^(0+128)
  2969  0B26  0837               	movf	(??_read_temperatura_exterior+1)^(0+128),w
  2970  0B27  00C5               	movwf	(read_temperatura_exterior@lectura+1)^(0+128)
  2971  0B28                     l3023:
  2972                           
  2973                           ;sensores.c: 93: lectura += ADRESL;
  2974  0B28  081E               	movf	30,w	;volatile
  2975  0B29  00B6               	movwf	??_read_temperatura_exterior^(0+128)
  2976  0B2A  01B7               	clrf	(??_read_temperatura_exterior^(0+128)+1)
  2977  0B2B  0836               	movf	??_read_temperatura_exterior^(0+128),w
  2978  0B2C  07C4               	addwf	read_temperatura_exterior@lectura^(0+128),f
  2979  0B2D  1803               	skipnc
  2980  0B2E  0AC5               	incf	(read_temperatura_exterior@lectura+1)^(0+128),f
  2981  0B2F  0837               	movf	(??_read_temperatura_exterior+1)^(0+128),w
  2982  0B30  07C5               	addwf	(read_temperatura_exterior@lectura+1)^(0+128),f
  2983  0B31                     l3025:
  2984                           
  2985                           ;sensores.c: 96: float lecturaV = (((lectura * 5) / 1024.0) - V0) / Tc;
  2986  0B31  0838               	movf	read_temperatura_exterior@V0^(0+128),w
  2987  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0B34  00CB               	movwf	___ftsub@f2
  2990  0B35  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0B36  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0B37  0839               	movf	(read_temperatura_exterior@V0+1)^(0+128),w
  2993  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0B3A  00CC               	movwf	___ftsub@f2+1
  2996  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0B3D  083A               	movf	(read_temperatura_exterior@V0+2)^(0+128),w
  2999  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0B40  00CD               	movwf	___ftsub@f2+2
  3002  0B41  3000               	movlw	0
  3003  0B42  00BB               	movwf	___ftdiv@f2
  3004  0B43  3080               	movlw	128
  3005  0B44  00BC               	movwf	___ftdiv@f2+1
  3006  0B45  3044               	movlw	68
  3007  0B46  00BD               	movwf	___ftdiv@f2+2
  3008  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0B48  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0B49  0845               	movf	(read_temperatura_exterior@lectura+1)^(0+128),w
  3011  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0B4C  00A1               	movwf	___wmul@multiplier+1
  3014  0B4D  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0B4E  1303               	bcf	3,6	;RP1=0, select bank1
  3016  0B4F  0844               	movf	read_temperatura_exterior@lectura^(0+128),w
  3017  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0B52  00A0               	movwf	___wmul@multiplier
  3020  0B53  3005               	movlw	5
  3021  0B54  00A2               	movwf	___wmul@multiplicand
  3022  0B55  3000               	movlw	0
  3023  0B56  00A3               	movwf	___wmul@multiplicand+1
  3024  0B57  160A  118A  2082  120A  158A  	fcall	___wmul
  3025  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0B5E  0821               	movf	?___wmul+1,w
  3028  0B5F  00A9               	movwf	___awtoft@c+1
  3029  0B60  0820               	movf	?___wmul,w
  3030  0B61  00A8               	movwf	___awtoft@c
  3031  0B62  160A  118A  20A9  120A  158A  	fcall	___awtoft
  3032  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0B69  0828               	movf	?___awtoft,w
  3035  0B6A  00BE               	movwf	___ftdiv@f1
  3036  0B6B  0829               	movf	?___awtoft+1,w
  3037  0B6C  00BF               	movwf	___ftdiv@f1+1
  3038  0B6D  082A               	movf	?___awtoft+2,w
  3039  0B6E  00C0               	movwf	___ftdiv@f1+2
  3040  0B6F  120A  158A  214D  120A  158A  	fcall	___ftdiv
  3041  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0B76  083B               	movf	?___ftdiv,w
  3044  0B77  00CE               	movwf	___ftsub@f1
  3045  0B78  083C               	movf	?___ftdiv+1,w
  3046  0B79  00CF               	movwf	___ftsub@f1+1
  3047  0B7A  083D               	movf	?___ftdiv+2,w
  3048  0B7B  00D0               	movwf	___ftsub@f1+2
  3049  0B7C  160A  118A  205D  120A  158A  	fcall	___ftsub
  3050  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0B83  084B               	movf	?___ftsub,w
  3053  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0B85  1303               	bcf	3,6	;RP1=0, select bank1
  3055  0B86  00C1               	movwf	_read_temperatura_exterior$1426^(0+128)
  3056  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0B89  084C               	movf	?___ftsub+1,w
  3059  0B8A  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0B8B  1303               	bcf	3,6	;RP1=0, select bank1
  3061  0B8C  00C2               	movwf	(_read_temperatura_exterior$1426+1)^(0+128)
  3062  0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0B8F  084D               	movf	?___ftsub+2,w
  3065  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0B92  00C3               	movwf	(_read_temperatura_exterior$1426+2)^(0+128)
  3068  0B93                     l3027:
  3069                           
  3070                           ;sensores.c: 96: float lecturaV = (((lectura * 5) / 1024.0) - V0) / Tc;
  3071  0B93  083B               	movf	read_temperatura_exterior@Tc^(0+128),w
  3072  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0B96  00BB               	movwf	___ftdiv@f2
  3075  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0B98  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0B99  083C               	movf	(read_temperatura_exterior@Tc+1)^(0+128),w
  3078  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0B9C  00BC               	movwf	___ftdiv@f2+1
  3081  0B9D  1683               	bsf	3,5	;RP0=1, select bank1
  3082  0B9E  1303               	bcf	3,6	;RP1=0, select bank1
  3083  0B9F  083D               	movf	(read_temperatura_exterior@Tc+2)^(0+128),w
  3084  0BA0  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0BA1  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0BA2  00BD               	movwf	___ftdiv@f2+2
  3087  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  3089  0BA5  0841               	movf	_read_temperatura_exterior$1426^(0+128),w
  3090  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0BA8  00BE               	movwf	___ftdiv@f1
  3093  0BA9  1683               	bsf	3,5	;RP0=1, select bank1
  3094  0BAA  1303               	bcf	3,6	;RP1=0, select bank1
  3095  0BAB  0842               	movf	(_read_temperatura_exterior$1426+1)^(0+128),w
  3096  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0BAE  00BF               	movwf	___ftdiv@f1+1
  3099  0BAF  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0BB0  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0BB1  0843               	movf	(_read_temperatura_exterior$1426+2)^(0+128),w
  3102  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0BB4  00C0               	movwf	___ftdiv@f1+2
  3105  0BB5  120A  158A  214D  120A  158A  	fcall	___ftdiv
  3106  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0BBC  083B               	movf	?___ftdiv,w
  3109  0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0BBE  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0BBF  00BE               	movwf	read_temperatura_exterior@lecturaV^(0+128)
  3112  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0BC2  083C               	movf	?___ftdiv+1,w
  3115  0BC3  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0BC4  1303               	bcf	3,6	;RP1=0, select bank1
  3117  0BC5  00BF               	movwf	(read_temperatura_exterior@lecturaV+1)^(0+128)
  3118  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0BC8  083D               	movf	?___ftdiv+2,w
  3121  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  3122  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  3123  0BCB  00C0               	movwf	(read_temperatura_exterior@lecturaV+2)^(0+128)
  3124  0BCC                     l3029:
  3125                           
  3126                           ;sensores.c: 97: tempext = (int)lecturaV;
  3127  0BCC  083E               	movf	read_temperatura_exterior@lecturaV^(0+128),w
  3128  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0BCF  00DB               	movwf	___fttol@f1
  3131  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0BD1  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0BD2  083F               	movf	(read_temperatura_exterior@lecturaV+1)^(0+128),w
  3134  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0BD5  00DC               	movwf	___fttol@f1+1
  3137  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0BD7  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0BD8  0840               	movf	(read_temperatura_exterior@lecturaV+2)^(0+128),w
  3140  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0BDB  00DD               	movwf	___fttol@f1+2
  3143  0BDC  160A  118A  2357  120A  158A  	fcall	___fttol
  3144  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0BE3  085C               	movf	?___fttol+1,w
  3147  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0BE6  00E4               	movwf	(_tempext+1)^(0+128)
  3150  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0BE9  085B               	movf	?___fttol,w
  3153  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0BEC  00E3               	movwf	_tempext^(0+128)
  3156  0BED                     l3031:
  3157                           
  3158                           ;sensores.c: 98: printf("Temperatura Exterior: %d \r\n",tempext);
  3159  0BED  3072               	movlw	low (STR_2| (0+32768))
  3160  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0BF0  00EB               	movwf	printf@f
  3163  0BF1  3088               	movlw	high (STR_2| (0+32768))
  3164  0BF2  00EC               	movwf	printf@f+1
  3165  0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0BF5  0864               	movf	(_tempext+1)^(0+128),w
  3168  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0BF8  00EE               	movwf	?_printf+3
  3171  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0BFB  0863               	movf	_tempext^(0+128),w
  3174  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0BFE  00ED               	movwf	?_printf+2
  3177  0BFF  120A  118A  2020  120A  158A  	fcall	_printf
  3178  0C04                     l56:
  3179  0C04  0008               	return
  3180  0C05                     __end_of_read_temperatura_exterior:
  3181                           
  3182                           	psect	text7
  3183  105D                     __ptext7:	
  3184 ;; *************** function ___ftsub *****************
  3185 ;; Defined at:
  3186 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftsub.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  f2              3   43[BANK0 ] float 
  3189 ;;  f1              3   46[BANK0 ] float 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  3   43[BANK0 ] float 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       6       0       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         0       6       0       0       0
  3205 ;;Total ram usage:        6 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    4
  3208 ;; This function calls:
  3209 ;;		___ftadd
  3210 ;; This function is called by:
  3211 ;;		_read_temperatura_exterior
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function ___ftsub
  3217  105D                     ___ftsub:
  3218  105D                     l2965:	
  3219                           ;incstack = 0
  3220                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3221                           
  3222  105D  1283               	bcf	3,5	;RP0=0, select bank0
  3223  105E  1303               	bcf	3,6	;RP1=0, select bank0
  3224  105F  084D               	movf	___ftsub@f2+2,w
  3225  1060  044C               	iorwf	___ftsub@f2+1,w
  3226  1061  044B               	iorwf	___ftsub@f2,w
  3227  1062  1903               	skipnz
  3228  1063  2865               	goto	u3741
  3229  1064  2866               	goto	u3740
  3230  1065                     u3741:
  3231  1065  2868               	goto	l2969
  3232  1066                     u3740:
  3233  1066                     l2967:
  3234  1066  3080               	movlw	128
  3235  1067  06CD               	xorwf	___ftsub@f2+2,f
  3236  1068                     l2969:
  3237  1068  084E               	movf	___ftsub@f1,w
  3238  1069  00AE               	movwf	___ftadd@f1
  3239  106A  084F               	movf	___ftsub@f1+1,w
  3240  106B  00AF               	movwf	___ftadd@f1+1
  3241  106C  0850               	movf	___ftsub@f1+2,w
  3242  106D  00B0               	movwf	___ftadd@f1+2
  3243  106E  084B               	movf	___ftsub@f2,w
  3244  106F  00B1               	movwf	___ftadd@f2
  3245  1070  084C               	movf	___ftsub@f2+1,w
  3246  1071  00B2               	movwf	___ftadd@f2+1
  3247  1072  084D               	movf	___ftsub@f2+2,w
  3248  1073  00B3               	movwf	___ftadd@f2+2
  3249  1074  120A  158A  251D  160A  118A  	fcall	___ftadd
  3250  1079  1283               	bcf	3,5	;RP0=0, select bank0
  3251  107A  1303               	bcf	3,6	;RP1=0, select bank0
  3252  107B  082E               	movf	?___ftadd,w
  3253  107C  00CB               	movwf	?___ftsub
  3254  107D  082F               	movf	?___ftadd+1,w
  3255  107E  00CC               	movwf	?___ftsub+1
  3256  107F  0830               	movf	?___ftadd+2,w
  3257  1080  00CD               	movwf	?___ftsub+2
  3258  1081                     l879:
  3259  1081  0008               	return
  3260  1082                     __end_of___ftsub:
  3261                           
  3262                           	psect	text8
  3263  1630                     __ptext8:	
  3264 ;; *************** function _read_potenciometro *****************
  3265 ;; Defined at:
  3266 ;;		line 162 in file "sensores.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  lecturaV        3   28[BANK1 ] float 
  3271 ;;  lectura         2   26[BANK1 ] int 
  3272 ;;  aux             2   24[BANK1 ] int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         0       0       7       0       0
  3284 ;;      Temps:          0       0       2       0       0
  3285 ;;      Totals:         0       0       9       0       0
  3286 ;;Total ram usage:        9 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		___awtoft
  3291 ;;		___ftdiv
  3292 ;;		___ftmul
  3293 ;;		___fttol
  3294 ;;		___wmul
  3295 ;;		_get_tempObjetivo
  3296 ;;		_printf
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _read_potenciometro
  3304  1630                     _read_potenciometro:
  3305  1630                     l3077:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _read_potenciometro: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3308                           
  3309                           
  3310                           ;sensores.c: 164: int aux = 0;
  3311  1630  1683               	bsf	3,5	;RP0=1, select bank1
  3312  1631  1303               	bcf	3,6	;RP1=0, select bank1
  3313  1632  01B8               	clrf	read_potenciometro@aux^(0+128)
  3314  1633  01B9               	clrf	(read_potenciometro@aux+1)^(0+128)
  3315  1634                     l3079:
  3316                           
  3317                           ;sensores.c: 165: ADCON0bits.CHS = 0b1101;
  3318  1634  1283               	bcf	3,5	;RP0=0, select bank0
  3319  1635  1303               	bcf	3,6	;RP1=0, select bank0
  3320  1636  081F               	movf	31,w	;volatile
  3321  1637  39C3               	andlw	-61
  3322  1638  3834               	iorlw	52
  3323  1639  009F               	movwf	31	;volatile
  3324  163A                     l3081:
  3325                           
  3326                           ;sensores.c: 167: ADCON0bits.GO=1;
  3327  163A  149F               	bsf	31,1	;volatile
  3328  163B                     l3083:	
  3329                           ;sensores.c: 170: while (ADCready == 0);
  3330                           
  3331  163B  1683               	bsf	3,5	;RP0=1, select bank1
  3332  163C  1303               	bcf	3,6	;RP1=0, select bank1
  3333  163D  0859               	movf	_ADCready^(0+128),w
  3334  163E  045A               	iorwf	(_ADCready+1)^(0+128),w
  3335  163F  1903               	btfsc	3,2
  3336  1640  2E42               	goto	u3791
  3337  1641  2E43               	goto	u3790
  3338  1642                     u3791:
  3339  1642  2E3B               	goto	l3083
  3340  1643                     u3790:
  3341  1643                     l3085:
  3342                           
  3343                           ;sensores.c: 171: ADCready = 0;
  3344  1643  01D9               	clrf	_ADCready^(0+128)
  3345  1644  01DA               	clrf	(_ADCready+1)^(0+128)
  3346  1645                     l3087:
  3347                           
  3348                           ;sensores.c: 173: lectura = ADRESH << 8;
  3349  1645  1283               	bcf	3,5	;RP0=0, select bank0
  3350  1646  1303               	bcf	3,6	;RP1=0, select bank0
  3351  1647  081E               	movf	30,w	;volatile
  3352  1648  1683               	bsf	3,5	;RP0=1, select bank1
  3353  1649  1303               	bcf	3,6	;RP1=0, select bank1
  3354  164A  00B6               	movwf	??_read_potenciometro^(0+128)
  3355  164B  01B7               	clrf	(??_read_potenciometro^(0+128)+1)
  3356  164C  0836               	movf	??_read_potenciometro^(0+128),w
  3357  164D  00B7               	movwf	(??_read_potenciometro^(0+128)+1)
  3358  164E  01B6               	clrf	??_read_potenciometro^(0+128)
  3359  164F  0836               	movf	??_read_potenciometro^(0+128),w
  3360  1650  00BA               	movwf	read_potenciometro@lectura^(0+128)
  3361  1651  0837               	movf	(??_read_potenciometro+1)^(0+128),w
  3362  1652  00BB               	movwf	(read_potenciometro@lectura+1)^(0+128)
  3363  1653                     l3089:
  3364                           
  3365                           ;sensores.c: 174: lectura += ADRESL;
  3366  1653  081E               	movf	30,w	;volatile
  3367  1654  00B6               	movwf	??_read_potenciometro^(0+128)
  3368  1655  01B7               	clrf	(??_read_potenciometro^(0+128)+1)
  3369  1656  0836               	movf	??_read_potenciometro^(0+128),w
  3370  1657  07BA               	addwf	read_potenciometro@lectura^(0+128),f
  3371  1658  1803               	skipnc
  3372  1659  0ABB               	incf	(read_potenciometro@lectura+1)^(0+128),f
  3373  165A  0837               	movf	(??_read_potenciometro+1)^(0+128),w
  3374  165B  07BB               	addwf	(read_potenciometro@lectura+1)^(0+128),f
  3375  165C                     l3091:
  3376                           
  3377                           ;sensores.c: 177: float lecturaV = (lectura * 5) / 1024.0;
  3378  165C  3000               	movlw	0
  3379  165D  1283               	bcf	3,5	;RP0=0, select bank0
  3380  165E  1303               	bcf	3,6	;RP1=0, select bank0
  3381  165F  00BB               	movwf	___ftdiv@f2
  3382  1660  3080               	movlw	128
  3383  1661  00BC               	movwf	___ftdiv@f2+1
  3384  1662  3044               	movlw	68
  3385  1663  00BD               	movwf	___ftdiv@f2+2
  3386  1664  1683               	bsf	3,5	;RP0=1, select bank1
  3387  1665  1303               	bcf	3,6	;RP1=0, select bank1
  3388  1666  083B               	movf	(read_potenciometro@lectura+1)^(0+128),w
  3389  1667  1283               	bcf	3,5	;RP0=0, select bank0
  3390  1668  1303               	bcf	3,6	;RP1=0, select bank0
  3391  1669  00A1               	movwf	___wmul@multiplier+1
  3392  166A  1683               	bsf	3,5	;RP0=1, select bank1
  3393  166B  1303               	bcf	3,6	;RP1=0, select bank1
  3394  166C  083A               	movf	read_potenciometro@lectura^(0+128),w
  3395  166D  1283               	bcf	3,5	;RP0=0, select bank0
  3396  166E  1303               	bcf	3,6	;RP1=0, select bank0
  3397  166F  00A0               	movwf	___wmul@multiplier
  3398  1670  3005               	movlw	5
  3399  1671  00A2               	movwf	___wmul@multiplicand
  3400  1672  3000               	movlw	0
  3401  1673  00A3               	movwf	___wmul@multiplicand+1
  3402  1674  160A  118A  2082  160A  118A  	fcall	___wmul
  3403  1679  1283               	bcf	3,5	;RP0=0, select bank0
  3404  167A  1303               	bcf	3,6	;RP1=0, select bank0
  3405  167B  0821               	movf	?___wmul+1,w
  3406  167C  00A9               	movwf	___awtoft@c+1
  3407  167D  0820               	movf	?___wmul,w
  3408  167E  00A8               	movwf	___awtoft@c
  3409  167F  160A  118A  20A9  160A  118A  	fcall	___awtoft
  3410  1684  1283               	bcf	3,5	;RP0=0, select bank0
  3411  1685  1303               	bcf	3,6	;RP1=0, select bank0
  3412  1686  0828               	movf	?___awtoft,w
  3413  1687  00BE               	movwf	___ftdiv@f1
  3414  1688  0829               	movf	?___awtoft+1,w
  3415  1689  00BF               	movwf	___ftdiv@f1+1
  3416  168A  082A               	movf	?___awtoft+2,w
  3417  168B  00C0               	movwf	___ftdiv@f1+2
  3418  168C  120A  158A  214D  160A  118A  	fcall	___ftdiv
  3419  1691  1283               	bcf	3,5	;RP0=0, select bank0
  3420  1692  1303               	bcf	3,6	;RP1=0, select bank0
  3421  1693  083B               	movf	?___ftdiv,w
  3422  1694  1683               	bsf	3,5	;RP0=1, select bank1
  3423  1695  1303               	bcf	3,6	;RP1=0, select bank1
  3424  1696  00BC               	movwf	read_potenciometro@lecturaV^(0+128)
  3425  1697  1283               	bcf	3,5	;RP0=0, select bank0
  3426  1698  1303               	bcf	3,6	;RP1=0, select bank0
  3427  1699  083C               	movf	?___ftdiv+1,w
  3428  169A  1683               	bsf	3,5	;RP0=1, select bank1
  3429  169B  1303               	bcf	3,6	;RP1=0, select bank1
  3430  169C  00BD               	movwf	(read_potenciometro@lecturaV+1)^(0+128)
  3431  169D  1283               	bcf	3,5	;RP0=0, select bank0
  3432  169E  1303               	bcf	3,6	;RP1=0, select bank0
  3433  169F  083D               	movf	?___ftdiv+2,w
  3434  16A0  1683               	bsf	3,5	;RP0=1, select bank1
  3435  16A1  1303               	bcf	3,6	;RP1=0, select bank1
  3436  16A2  00BE               	movwf	(read_potenciometro@lecturaV+2)^(0+128)
  3437  16A3                     l3093:
  3438                           
  3439                           ;sensores.c: 178: lastPotenciometro = lecturaV;
  3440  16A3  083C               	movf	read_potenciometro@lecturaV^(0+128),w
  3441  16A4  00D2               	movwf	_lastPotenciometro^(0+128)
  3442  16A5  083D               	movf	(read_potenciometro@lecturaV+1)^(0+128),w
  3443  16A6  00D3               	movwf	(_lastPotenciometro+1)^(0+128)
  3444  16A7  083E               	movf	(read_potenciometro@lecturaV+2)^(0+128),w
  3445  16A8  00D4               	movwf	(_lastPotenciometro+2)^(0+128)
  3446  16A9                     l3095:
  3447                           
  3448                           ;sensores.c: 179: aux = (lecturaV * 60) / 3.0;
  3449  16A9  083C               	movf	read_potenciometro@lecturaV^(0+128),w
  3450  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  3451  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  3452  16AC  00CE               	movwf	___ftmul@f2
  3453  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  3454  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  3455  16AF  083D               	movf	(read_potenciometro@lecturaV+1)^(0+128),w
  3456  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  3457  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  3458  16B2  00CF               	movwf	___ftmul@f2+1
  3459  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  3460  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  3461  16B5  083E               	movf	(read_potenciometro@lecturaV+2)^(0+128),w
  3462  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  3463  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  3464  16B8  00D0               	movwf	___ftmul@f2+2
  3465  16B9  3000               	movlw	0
  3466  16BA  00CB               	movwf	___ftmul@f1
  3467  16BB  3070               	movlw	112
  3468  16BC  00CC               	movwf	___ftmul@f1+1
  3469  16BD  3042               	movlw	66
  3470  16BE  00CD               	movwf	___ftmul@f1+2
  3471  16BF  160A  118A  254B  160A  118A  	fcall	___ftmul
  3472  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  3473  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  3474  16C6  084B               	movf	?___ftmul,w
  3475  16C7  00BE               	movwf	___ftdiv@f1
  3476  16C8  084C               	movf	?___ftmul+1,w
  3477  16C9  00BF               	movwf	___ftdiv@f1+1
  3478  16CA  084D               	movf	?___ftmul+2,w
  3479  16CB  00C0               	movwf	___ftdiv@f1+2
  3480  16CC  3000               	movlw	0
  3481  16CD  00BB               	movwf	___ftdiv@f2
  3482  16CE  3040               	movlw	64
  3483  16CF  00BC               	movwf	___ftdiv@f2+1
  3484  16D0  3040               	movlw	64
  3485  16D1  00BD               	movwf	___ftdiv@f2+2
  3486  16D2  120A  158A  214D  160A  118A  	fcall	___ftdiv
  3487  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  3488  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  3489  16D9  083B               	movf	?___ftdiv,w
  3490  16DA  00DB               	movwf	___fttol@f1
  3491  16DB  083C               	movf	?___ftdiv+1,w
  3492  16DC  00DC               	movwf	___fttol@f1+1
  3493  16DD  083D               	movf	?___ftdiv+2,w
  3494  16DE  00DD               	movwf	___fttol@f1+2
  3495  16DF  160A  118A  2357  160A  118A  	fcall	___fttol
  3496  16E4  1283               	bcf	3,5	;RP0=0, select bank0
  3497  16E5  1303               	bcf	3,6	;RP1=0, select bank0
  3498  16E6  085C               	movf	?___fttol+1,w
  3499  16E7  1683               	bsf	3,5	;RP0=1, select bank1
  3500  16E8  1303               	bcf	3,6	;RP1=0, select bank1
  3501  16E9  00B9               	movwf	(read_potenciometro@aux+1)^(0+128)
  3502  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  3503  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  3504  16EC  085B               	movf	?___fttol,w
  3505  16ED  1683               	bsf	3,5	;RP0=1, select bank1
  3506  16EE  1303               	bcf	3,6	;RP1=0, select bank1
  3507  16EF  00B8               	movwf	read_potenciometro@aux^(0+128)
  3508  16F0                     l3097:
  3509                           
  3510                           ;sensores.c: 180: sumaLecturas = sumaLecturas + aux;
  3511  16F0  0838               	movf	read_potenciometro@aux^(0+128),w
  3512  16F1  075D               	addwf	_sumaLecturas^(0+128),w
  3513  16F2  00DD               	movwf	_sumaLecturas^(0+128)
  3514  16F3  0839               	movf	(read_potenciometro@aux+1)^(0+128),w
  3515  16F4  1803               	skipnc
  3516  16F5  0A39               	incf	(read_potenciometro@aux+1)^(0+128),w
  3517  16F6  075E               	addwf	(_sumaLecturas+1)^(0+128),w
  3518  16F7  00DE               	movwf	(_sumaLecturas+1)^(0+128)
  3519  16F8                     l3099:
  3520                           
  3521                           ;sensores.c: 181: numeroLecturas++;
  3522  16F8  3001               	movlw	1
  3523  16F9  07DB               	addwf	_numeroLecturas^(0+128),f
  3524  16FA  1803               	skipnc
  3525  16FB  0ADC               	incf	(_numeroLecturas+1)^(0+128),f
  3526  16FC  3000               	movlw	0
  3527  16FD  07DC               	addwf	(_numeroLecturas+1)^(0+128),f
  3528  16FE                     l3101:
  3529                           
  3530                           ;sensores.c: 184: printf(" Temperatura objetivo: %d \r\n",get_tempObjetivo());
  3531  16FE  30E5               	movlw	low (STR_5| (0+32768))
  3532  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  3533  1700  1303               	bcf	3,6	;RP1=0, select bank0
  3534  1701  00EB               	movwf	printf@f
  3535  1702  3087               	movlw	high (STR_5| (0+32768))
  3536  1703  00EC               	movwf	printf@f+1
  3537  1704  160A  118A  2128  160A  118A  	fcall	_get_tempObjetivo
  3538  1709  1283               	bcf	3,5	;RP0=0, select bank0
  3539  170A  1303               	bcf	3,6	;RP1=0, select bank0
  3540  170B  0830               	movf	?_get_tempObjetivo+1,w
  3541  170C  00EE               	movwf	?_printf+3
  3542  170D  082F               	movf	?_get_tempObjetivo,w
  3543  170E  00ED               	movwf	?_printf+2
  3544  170F  120A  118A  2020  160A  118A  	fcall	_printf
  3545  1714                     l83:
  3546  1714  0008               	return
  3547  1715                     __end_of_read_potenciometro:
  3548                           
  3549                           	psect	text9
  3550  1472                     __ptext9:	
  3551 ;; *************** function _read_intensidad_lumninosa *****************
  3552 ;; Defined at:
  3553 ;;		line 134 in file "sensores.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  lecturaV        3   24[BANK1 ] float 
  3558 ;;  lectura         2   30[BANK1 ] int 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3568 ;;      Params:         0       0       0       0       0
  3569 ;;      Locals:         0       0       8       0       0
  3570 ;;      Temps:          0       0       2       0       0
  3571 ;;      Totals:         0       0      10       0       0
  3572 ;;Total ram usage:       10 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    4
  3575 ;; This function calls:
  3576 ;;		___awtoft
  3577 ;;		___ftdiv
  3578 ;;		___fttol
  3579 ;;		___wmul
  3580 ;;		_printf
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _read_intensidad_lumninosa
  3588  1472                     _read_intensidad_lumninosa:
  3589  1472                     l3055:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _read_intensidad_lumninosa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  3592                           
  3593  1472                     l3057:
  3594                           
  3595                           ;sensores.c: 137: ADCON0bits.CHS = 0b1100;
  3596  1472  1283               	bcf	3,5	;RP0=0, select bank0
  3597  1473  1303               	bcf	3,6	;RP1=0, select bank0
  3598  1474  081F               	movf	31,w	;volatile
  3599  1475  39C3               	andlw	-61
  3600  1476  3830               	iorlw	48
  3601  1477  009F               	movwf	31	;volatile
  3602  1478                     l3059:
  3603                           
  3604                           ;sensores.c: 139: ADCON0bits.GO=1;
  3605  1478  149F               	bsf	31,1	;volatile
  3606  1479                     l3061:	
  3607                           ;sensores.c: 142: while (ADCready == 0);
  3608                           
  3609  1479  1683               	bsf	3,5	;RP0=1, select bank1
  3610  147A  1303               	bcf	3,6	;RP1=0, select bank1
  3611  147B  0859               	movf	_ADCready^(0+128),w
  3612  147C  045A               	iorwf	(_ADCready+1)^(0+128),w
  3613  147D  1903               	btfsc	3,2
  3614  147E  2C80               	goto	u3781
  3615  147F  2C81               	goto	u3780
  3616  1480                     u3781:
  3617  1480  2C79               	goto	l3061
  3618  1481                     u3780:
  3619  1481                     l3063:
  3620                           
  3621                           ;sensores.c: 143: ADCready = 0;
  3622  1481  01D9               	clrf	_ADCready^(0+128)
  3623  1482  01DA               	clrf	(_ADCready+1)^(0+128)
  3624  1483                     l3065:
  3625                           
  3626                           ;sensores.c: 145: lectura = ADRESH << 8;
  3627  1483  1283               	bcf	3,5	;RP0=0, select bank0
  3628  1484  1303               	bcf	3,6	;RP1=0, select bank0
  3629  1485  081E               	movf	30,w	;volatile
  3630  1486  1683               	bsf	3,5	;RP0=1, select bank1
  3631  1487  1303               	bcf	3,6	;RP1=0, select bank1
  3632  1488  00B6               	movwf	??_read_intensidad_lumninosa^(0+128)
  3633  1489  01B7               	clrf	(??_read_intensidad_lumninosa^(0+128)+1)
  3634  148A  0836               	movf	??_read_intensidad_lumninosa^(0+128),w
  3635  148B  00B7               	movwf	(??_read_intensidad_lumninosa^(0+128)+1)
  3636  148C  01B6               	clrf	??_read_intensidad_lumninosa^(0+128)
  3637  148D  0836               	movf	??_read_intensidad_lumninosa^(0+128),w
  3638  148E  00BE               	movwf	read_intensidad_lumninosa@lectura^(0+128)
  3639  148F  0837               	movf	(??_read_intensidad_lumninosa+1)^(0+128),w
  3640  1490  00BF               	movwf	(read_intensidad_lumninosa@lectura+1)^(0+128)
  3641  1491                     l3067:
  3642                           
  3643                           ;sensores.c: 146: lectura += ADRESL;
  3644  1491  081E               	movf	30,w	;volatile
  3645  1492  00B6               	movwf	??_read_intensidad_lumninosa^(0+128)
  3646  1493  01B7               	clrf	(??_read_intensidad_lumninosa^(0+128)+1)
  3647  1494  0836               	movf	??_read_intensidad_lumninosa^(0+128),w
  3648  1495  07BE               	addwf	read_intensidad_lumninosa@lectura^(0+128),f
  3649  1496  1803               	skipnc
  3650  1497  0ABF               	incf	(read_intensidad_lumninosa@lectura+1)^(0+128),f
  3651  1498  0837               	movf	(??_read_intensidad_lumninosa+1)^(0+128),w
  3652  1499  07BF               	addwf	(read_intensidad_lumninosa@lectura+1)^(0+128),f
  3653  149A                     l3069:
  3654                           
  3655                           ;sensores.c: 150: float lecturaV = ((lectura * 5) / 1024.0)/0.00038;
  3656  149A  3000               	movlw	0
  3657  149B  1283               	bcf	3,5	;RP0=0, select bank0
  3658  149C  1303               	bcf	3,6	;RP1=0, select bank0
  3659  149D  00BB               	movwf	___ftdiv@f2
  3660  149E  3080               	movlw	128
  3661  149F  00BC               	movwf	___ftdiv@f2+1
  3662  14A0  3044               	movlw	68
  3663  14A1  00BD               	movwf	___ftdiv@f2+2
  3664  14A2  1683               	bsf	3,5	;RP0=1, select bank1
  3665  14A3  1303               	bcf	3,6	;RP1=0, select bank1
  3666  14A4  083F               	movf	(read_intensidad_lumninosa@lectura+1)^(0+128),w
  3667  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  3668  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  3669  14A7  00A1               	movwf	___wmul@multiplier+1
  3670  14A8  1683               	bsf	3,5	;RP0=1, select bank1
  3671  14A9  1303               	bcf	3,6	;RP1=0, select bank1
  3672  14AA  083E               	movf	read_intensidad_lumninosa@lectura^(0+128),w
  3673  14AB  1283               	bcf	3,5	;RP0=0, select bank0
  3674  14AC  1303               	bcf	3,6	;RP1=0, select bank0
  3675  14AD  00A0               	movwf	___wmul@multiplier
  3676  14AE  3005               	movlw	5
  3677  14AF  00A2               	movwf	___wmul@multiplicand
  3678  14B0  3000               	movlw	0
  3679  14B1  00A3               	movwf	___wmul@multiplicand+1
  3680  14B2  160A  118A  2082  160A  118A  	fcall	___wmul
  3681  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  3682  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  3683  14B9  0821               	movf	?___wmul+1,w
  3684  14BA  00A9               	movwf	___awtoft@c+1
  3685  14BB  0820               	movf	?___wmul,w
  3686  14BC  00A8               	movwf	___awtoft@c
  3687  14BD  160A  118A  20A9  160A  118A  	fcall	___awtoft
  3688  14C2  1283               	bcf	3,5	;RP0=0, select bank0
  3689  14C3  1303               	bcf	3,6	;RP1=0, select bank0
  3690  14C4  0828               	movf	?___awtoft,w
  3691  14C5  00BE               	movwf	___ftdiv@f1
  3692  14C6  0829               	movf	?___awtoft+1,w
  3693  14C7  00BF               	movwf	___ftdiv@f1+1
  3694  14C8  082A               	movf	?___awtoft+2,w
  3695  14C9  00C0               	movwf	___ftdiv@f1+2
  3696  14CA  120A  158A  214D  160A  118A  	fcall	___ftdiv
  3697  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  3698  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  3699  14D1  083B               	movf	?___ftdiv,w
  3700  14D2  1683               	bsf	3,5	;RP0=1, select bank1
  3701  14D3  1303               	bcf	3,6	;RP1=0, select bank1
  3702  14D4  00BB               	movwf	_read_intensidad_lumninosa$1428^(0+128)
  3703  14D5  1283               	bcf	3,5	;RP0=0, select bank0
  3704  14D6  1303               	bcf	3,6	;RP1=0, select bank0
  3705  14D7  083C               	movf	?___ftdiv+1,w
  3706  14D8  1683               	bsf	3,5	;RP0=1, select bank1
  3707  14D9  1303               	bcf	3,6	;RP1=0, select bank1
  3708  14DA  00BC               	movwf	(_read_intensidad_lumninosa$1428+1)^(0+128)
  3709  14DB  1283               	bcf	3,5	;RP0=0, select bank0
  3710  14DC  1303               	bcf	3,6	;RP1=0, select bank0
  3711  14DD  083D               	movf	?___ftdiv+2,w
  3712  14DE  1683               	bsf	3,5	;RP0=1, select bank1
  3713  14DF  1303               	bcf	3,6	;RP1=0, select bank1
  3714  14E0  00BD               	movwf	(_read_intensidad_lumninosa$1428+2)^(0+128)
  3715  14E1                     l3071:
  3716                           
  3717                           ;sensores.c: 150: float lecturaV = ((lectura * 5) / 1024.0)/0.00038;
  3718  14E1  303B               	movlw	59
  3719  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  3720  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  3721  14E4  00BB               	movwf	___ftdiv@f2
  3722  14E5  30C7               	movlw	199
  3723  14E6  00BC               	movwf	___ftdiv@f2+1
  3724  14E7  3039               	movlw	57
  3725  14E8  00BD               	movwf	___ftdiv@f2+2
  3726  14E9  1683               	bsf	3,5	;RP0=1, select bank1
  3727  14EA  1303               	bcf	3,6	;RP1=0, select bank1
  3728  14EB  083B               	movf	_read_intensidad_lumninosa$1428^(0+128),w
  3729  14EC  1283               	bcf	3,5	;RP0=0, select bank0
  3730  14ED  1303               	bcf	3,6	;RP1=0, select bank0
  3731  14EE  00BE               	movwf	___ftdiv@f1
  3732  14EF  1683               	bsf	3,5	;RP0=1, select bank1
  3733  14F0  1303               	bcf	3,6	;RP1=0, select bank1
  3734  14F1  083C               	movf	(_read_intensidad_lumninosa$1428+1)^(0+128),w
  3735  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3736  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3737  14F4  00BF               	movwf	___ftdiv@f1+1
  3738  14F5  1683               	bsf	3,5	;RP0=1, select bank1
  3739  14F6  1303               	bcf	3,6	;RP1=0, select bank1
  3740  14F7  083D               	movf	(_read_intensidad_lumninosa$1428+2)^(0+128),w
  3741  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  3742  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  3743  14FA  00C0               	movwf	___ftdiv@f1+2
  3744  14FB  120A  158A  214D  160A  118A  	fcall	___ftdiv
  3745  1500  1283               	bcf	3,5	;RP0=0, select bank0
  3746  1501  1303               	bcf	3,6	;RP1=0, select bank0
  3747  1502  083B               	movf	?___ftdiv,w
  3748  1503  1683               	bsf	3,5	;RP0=1, select bank1
  3749  1504  1303               	bcf	3,6	;RP1=0, select bank1
  3750  1505  00B8               	movwf	read_intensidad_lumninosa@lecturaV^(0+128)
  3751  1506  1283               	bcf	3,5	;RP0=0, select bank0
  3752  1507  1303               	bcf	3,6	;RP1=0, select bank0
  3753  1508  083C               	movf	?___ftdiv+1,w
  3754  1509  1683               	bsf	3,5	;RP0=1, select bank1
  3755  150A  1303               	bcf	3,6	;RP1=0, select bank1
  3756  150B  00B9               	movwf	(read_intensidad_lumninosa@lecturaV+1)^(0+128)
  3757  150C  1283               	bcf	3,5	;RP0=0, select bank0
  3758  150D  1303               	bcf	3,6	;RP1=0, select bank0
  3759  150E  083D               	movf	?___ftdiv+2,w
  3760  150F  1683               	bsf	3,5	;RP0=1, select bank1
  3761  1510  1303               	bcf	3,6	;RP1=0, select bank1
  3762  1511  00BA               	movwf	(read_intensidad_lumninosa@lecturaV+2)^(0+128)
  3763  1512                     l3073:
  3764                           
  3765                           ;sensores.c: 152: lum = lecturaV ;
  3766  1512  0838               	movf	read_intensidad_lumninosa@lecturaV^(0+128),w
  3767  1513  1283               	bcf	3,5	;RP0=0, select bank0
  3768  1514  1303               	bcf	3,6	;RP1=0, select bank0
  3769  1515  00DB               	movwf	___fttol@f1
  3770  1516  1683               	bsf	3,5	;RP0=1, select bank1
  3771  1517  1303               	bcf	3,6	;RP1=0, select bank1
  3772  1518  0839               	movf	(read_intensidad_lumninosa@lecturaV+1)^(0+128),w
  3773  1519  1283               	bcf	3,5	;RP0=0, select bank0
  3774  151A  1303               	bcf	3,6	;RP1=0, select bank0
  3775  151B  00DC               	movwf	___fttol@f1+1
  3776  151C  1683               	bsf	3,5	;RP0=1, select bank1
  3777  151D  1303               	bcf	3,6	;RP1=0, select bank1
  3778  151E  083A               	movf	(read_intensidad_lumninosa@lecturaV+2)^(0+128),w
  3779  151F  1283               	bcf	3,5	;RP0=0, select bank0
  3780  1520  1303               	bcf	3,6	;RP1=0, select bank0
  3781  1521  00DD               	movwf	___fttol@f1+2
  3782  1522  160A  118A  2357  160A  118A  	fcall	___fttol
  3783  1527  1283               	bcf	3,5	;RP0=0, select bank0
  3784  1528  1303               	bcf	3,6	;RP1=0, select bank0
  3785  1529  085C               	movf	?___fttol+1,w
  3786  152A  1683               	bsf	3,5	;RP0=1, select bank1
  3787  152B  1303               	bcf	3,6	;RP1=0, select bank1
  3788  152C  00E0               	movwf	(_lum+1)^(0+128)
  3789  152D  1283               	bcf	3,5	;RP0=0, select bank0
  3790  152E  1303               	bcf	3,6	;RP1=0, select bank0
  3791  152F  085B               	movf	?___fttol,w
  3792  1530  1683               	bsf	3,5	;RP0=1, select bank1
  3793  1531  1303               	bcf	3,6	;RP1=0, select bank1
  3794  1532  00DF               	movwf	_lum^(0+128)
  3795  1533                     l3075:
  3796                           
  3797                           ;sensores.c: 153: printf("Luminosidad: %d \r\n",lum);
  3798  1533  30CF               	movlw	low (STR_4| (0+32768))
  3799  1534  1283               	bcf	3,5	;RP0=0, select bank0
  3800  1535  1303               	bcf	3,6	;RP1=0, select bank0
  3801  1536  00EB               	movwf	printf@f
  3802  1537  3088               	movlw	high (STR_4| (0+32768))
  3803  1538  00EC               	movwf	printf@f+1
  3804  1539  1683               	bsf	3,5	;RP0=1, select bank1
  3805  153A  1303               	bcf	3,6	;RP1=0, select bank1
  3806  153B  0860               	movf	(_lum+1)^(0+128),w
  3807  153C  1283               	bcf	3,5	;RP0=0, select bank0
  3808  153D  1303               	bcf	3,6	;RP1=0, select bank0
  3809  153E  00EE               	movwf	?_printf+3
  3810  153F  1683               	bsf	3,5	;RP0=1, select bank1
  3811  1540  1303               	bcf	3,6	;RP1=0, select bank1
  3812  1541  085F               	movf	_lum^(0+128),w
  3813  1542  1283               	bcf	3,5	;RP0=0, select bank0
  3814  1543  1303               	bcf	3,6	;RP1=0, select bank0
  3815  1544  00ED               	movwf	?_printf+2
  3816  1545  120A  118A  2020  160A  118A  	fcall	_printf
  3817  154A                     l74:
  3818  154A  0008               	return
  3819  154B                     __end_of_read_intensidad_lumninosa:
  3820                           
  3821                           	psect	text10
  3822  0A0F                     __ptext10:	
  3823 ;; *************** function _read_humedad *****************
  3824 ;; Defined at:
  3825 ;;		line 106 in file "sensores.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  lecturaV        3   24[BANK1 ] float 
  3830 ;;  lectura         2   30[BANK1 ] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       0       0       0       0
  3841 ;;      Locals:         0       0       8       0       0
  3842 ;;      Temps:          0       0       2       0       0
  3843 ;;      Totals:         0       0      10       0       0
  3844 ;;Total ram usage:       10 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    4
  3847 ;; This function calls:
  3848 ;;		___awtoft
  3849 ;;		___ftadd
  3850 ;;		___ftdiv
  3851 ;;		___fttol
  3852 ;;		___wmul
  3853 ;;		_printf
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _read_humedad
  3861  0A0F                     _read_humedad:
  3862  0A0F                     l3033:	
  3863                           ;incstack = 0
  3864                           ; Regs used in _read_humedad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3865                           
  3866  0A0F                     l3035:
  3867                           
  3868                           ;sensores.c: 109: ADCON0bits.CHS = 0b1010;
  3869  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0A11  081F               	movf	31,w	;volatile
  3872  0A12  39C3               	andlw	-61
  3873  0A13  3828               	iorlw	40
  3874  0A14  009F               	movwf	31	;volatile
  3875  0A15                     l3037:
  3876                           
  3877                           ;sensores.c: 111: ADCON0bits.GO=1;
  3878  0A15  149F               	bsf	31,1	;volatile
  3879  0A16                     l3039:	
  3880                           ;sensores.c: 114: while (ADCready == 0);
  3881                           
  3882  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0A17  1303               	bcf	3,6	;RP1=0, select bank1
  3884  0A18  0859               	movf	_ADCready^(0+128),w
  3885  0A19  045A               	iorwf	(_ADCready+1)^(0+128),w
  3886  0A1A  1903               	btfsc	3,2
  3887  0A1B  2A1D               	goto	u3771
  3888  0A1C  2A1E               	goto	u3770
  3889  0A1D                     u3771:
  3890  0A1D  2A16               	goto	l3039
  3891  0A1E                     u3770:
  3892  0A1E                     l3041:
  3893                           
  3894                           ;sensores.c: 115: ADCready = 0;
  3895  0A1E  01D9               	clrf	_ADCready^(0+128)
  3896  0A1F  01DA               	clrf	(_ADCready+1)^(0+128)
  3897  0A20                     l3043:
  3898                           
  3899                           ;sensores.c: 117: lectura = ADRESH << 8;
  3900  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0A22  081E               	movf	30,w	;volatile
  3903  0A23  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0A24  1303               	bcf	3,6	;RP1=0, select bank1
  3905  0A25  00B6               	movwf	??_read_humedad^(0+128)
  3906  0A26  01B7               	clrf	(??_read_humedad^(0+128)+1)
  3907  0A27  0836               	movf	??_read_humedad^(0+128),w
  3908  0A28  00B7               	movwf	(??_read_humedad^(0+128)+1)
  3909  0A29  01B6               	clrf	??_read_humedad^(0+128)
  3910  0A2A  0836               	movf	??_read_humedad^(0+128),w
  3911  0A2B  00BE               	movwf	read_humedad@lectura^(0+128)
  3912  0A2C  0837               	movf	(??_read_humedad+1)^(0+128),w
  3913  0A2D  00BF               	movwf	(read_humedad@lectura+1)^(0+128)
  3914  0A2E                     l3045:
  3915                           
  3916                           ;sensores.c: 118: lectura += ADRESL;
  3917  0A2E  081E               	movf	30,w	;volatile
  3918  0A2F  00B6               	movwf	??_read_humedad^(0+128)
  3919  0A30  01B7               	clrf	(??_read_humedad^(0+128)+1)
  3920  0A31  0836               	movf	??_read_humedad^(0+128),w
  3921  0A32  07BE               	addwf	read_humedad@lectura^(0+128),f
  3922  0A33  1803               	skipnc
  3923  0A34  0ABF               	incf	(read_humedad@lectura+1)^(0+128),f
  3924  0A35  0837               	movf	(??_read_humedad+1)^(0+128),w
  3925  0A36  07BF               	addwf	(read_humedad@lectura+1)^(0+128),f
  3926  0A37                     l3047:
  3927                           
  3928                           ;sensores.c: 121: float lecturaV = (((lectura * 5) / 1024.0) -0.826)/0.0315;
  3929  0A37  3075               	movlw	117
  3930  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0A3A  00AE               	movwf	___ftadd@f1
  3933  0A3B  3053               	movlw	83
  3934  0A3C  00AF               	movwf	___ftadd@f1+1
  3935  0A3D  30BF               	movlw	191
  3936  0A3E  00B0               	movwf	___ftadd@f1+2
  3937  0A3F  3000               	movlw	0
  3938  0A40  00BB               	movwf	___ftdiv@f2
  3939  0A41  3080               	movlw	128
  3940  0A42  00BC               	movwf	___ftdiv@f2+1
  3941  0A43  3044               	movlw	68
  3942  0A44  00BD               	movwf	___ftdiv@f2+2
  3943  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  3945  0A47  083F               	movf	(read_humedad@lectura+1)^(0+128),w
  3946  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0A4A  00A1               	movwf	___wmul@multiplier+1
  3949  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  3950  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  3951  0A4D  083E               	movf	read_humedad@lectura^(0+128),w
  3952  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0A50  00A0               	movwf	___wmul@multiplier
  3955  0A51  3005               	movlw	5
  3956  0A52  00A2               	movwf	___wmul@multiplicand
  3957  0A53  3000               	movlw	0
  3958  0A54  00A3               	movwf	___wmul@multiplicand+1
  3959  0A55  160A  118A  2082  120A  158A  	fcall	___wmul
  3960  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0A5C  0821               	movf	?___wmul+1,w
  3963  0A5D  00A9               	movwf	___awtoft@c+1
  3964  0A5E  0820               	movf	?___wmul,w
  3965  0A5F  00A8               	movwf	___awtoft@c
  3966  0A60  160A  118A  20A9  120A  158A  	fcall	___awtoft
  3967  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0A67  0828               	movf	?___awtoft,w
  3970  0A68  00BE               	movwf	___ftdiv@f1
  3971  0A69  0829               	movf	?___awtoft+1,w
  3972  0A6A  00BF               	movwf	___ftdiv@f1+1
  3973  0A6B  082A               	movf	?___awtoft+2,w
  3974  0A6C  00C0               	movwf	___ftdiv@f1+2
  3975  0A6D  120A  158A  214D  120A  158A  	fcall	___ftdiv
  3976  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0A74  083B               	movf	?___ftdiv,w
  3979  0A75  00B1               	movwf	___ftadd@f2
  3980  0A76  083C               	movf	?___ftdiv+1,w
  3981  0A77  00B2               	movwf	___ftadd@f2+1
  3982  0A78  083D               	movf	?___ftdiv+2,w
  3983  0A79  00B3               	movwf	___ftadd@f2+2
  3984  0A7A  120A  158A  251D  120A  158A  	fcall	___ftadd
  3985  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0A81  082E               	movf	?___ftadd,w
  3988  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  3989  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  3990  0A84  00BB               	movwf	_read_humedad$1427^(0+128)
  3991  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0A87  082F               	movf	?___ftadd+1,w
  3994  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  3995  0A89  1303               	bcf	3,6	;RP1=0, select bank1
  3996  0A8A  00BC               	movwf	(_read_humedad$1427+1)^(0+128)
  3997  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0A8D  0830               	movf	?___ftadd+2,w
  4000  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  4002  0A90  00BD               	movwf	(_read_humedad$1427+2)^(0+128)
  4003  0A91                     l3049:
  4004                           
  4005                           ;sensores.c: 121: float lecturaV = (((lectura * 5) / 1024.0) -0.826)/0.0315;
  4006  0A91  3006               	movlw	6
  4007  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0A94  00BB               	movwf	___ftdiv@f2
  4010  0A95  3001               	movlw	1
  4011  0A96  00BC               	movwf	___ftdiv@f2+1
  4012  0A97  303D               	movlw	61
  4013  0A98  00BD               	movwf	___ftdiv@f2+2
  4014  0A99  1683               	bsf	3,5	;RP0=1, select bank1
  4015  0A9A  1303               	bcf	3,6	;RP1=0, select bank1
  4016  0A9B  083B               	movf	_read_humedad$1427^(0+128),w
  4017  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0A9E  00BE               	movwf	___ftdiv@f1
  4020  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0AA0  1303               	bcf	3,6	;RP1=0, select bank1
  4022  0AA1  083C               	movf	(_read_humedad$1427+1)^(0+128),w
  4023  0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0AA4  00BF               	movwf	___ftdiv@f1+1
  4026  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0AA6  1303               	bcf	3,6	;RP1=0, select bank1
  4028  0AA7  083D               	movf	(_read_humedad$1427+2)^(0+128),w
  4029  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  4031  0AAA  00C0               	movwf	___ftdiv@f1+2
  4032  0AAB  120A  158A  214D  120A  158A  	fcall	___ftdiv
  4033  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0AB2  083B               	movf	?___ftdiv,w
  4036  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0AB4  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0AB5  00B8               	movwf	read_humedad@lecturaV^(0+128)
  4039  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0AB8  083C               	movf	?___ftdiv+1,w
  4042  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  4043  0ABA  1303               	bcf	3,6	;RP1=0, select bank1
  4044  0ABB  00B9               	movwf	(read_humedad@lecturaV+1)^(0+128)
  4045  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4047  0ABE  083D               	movf	?___ftdiv+2,w
  4048  0ABF  1683               	bsf	3,5	;RP0=1, select bank1
  4049  0AC0  1303               	bcf	3,6	;RP1=0, select bank1
  4050  0AC1  00BA               	movwf	(read_humedad@lecturaV+2)^(0+128)
  4051  0AC2                     l3051:
  4052                           
  4053                           ;sensores.c: 123: humedad = (int) lecturaV;
  4054  0AC2  0838               	movf	read_humedad@lecturaV^(0+128),w
  4055  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0AC5  00DB               	movwf	___fttol@f1
  4058  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  4059  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  4060  0AC8  0839               	movf	(read_humedad@lecturaV+1)^(0+128),w
  4061  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0ACB  00DC               	movwf	___fttol@f1+1
  4064  0ACC  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0ACD  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0ACE  083A               	movf	(read_humedad@lecturaV+2)^(0+128),w
  4067  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0AD1  00DD               	movwf	___fttol@f1+2
  4070  0AD2  160A  118A  2357  120A  158A  	fcall	___fttol
  4071  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0AD9  085C               	movf	?___fttol+1,w
  4074  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
  4076  0ADC  00E2               	movwf	(_humedad+1)^(0+128)
  4077  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0ADF  085B               	movf	?___fttol,w
  4080  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  4081  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  4082  0AE2  00E1               	movwf	_humedad^(0+128)
  4083  0AE3                     l3053:
  4084                           
  4085                           ;sensores.c: 126: printf("Humedad: %d \r\n",humedad);
  4086  0AE3  3026               	movlw	low (STR_3| (0+32768))
  4087  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0AE6  00EB               	movwf	printf@f
  4090  0AE7  3089               	movlw	high (STR_3| (0+32768))
  4091  0AE8  00EC               	movwf	printf@f+1
  4092  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0AEA  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0AEB  0862               	movf	(_humedad+1)^(0+128),w
  4095  0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  4096  0AED  1303               	bcf	3,6	;RP1=0, select bank0
  4097  0AEE  00EE               	movwf	?_printf+3
  4098  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  4099  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  4100  0AF1  0861               	movf	_humedad^(0+128),w
  4101  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0AF4  00ED               	movwf	?_printf+2
  4104  0AF5  120A  118A  2020  120A  158A  	fcall	_printf
  4105  0AFA                     l65:
  4106  0AFA  0008               	return
  4107  0AFB                     __end_of_read_humedad:
  4108                           
  4109                           	psect	text11
  4110  0D1D                     __ptext11:	
  4111 ;; *************** function ___ftadd *****************
  4112 ;; Defined at:
  4113 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftadd.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  f1              3   14[BANK0 ] float 
  4116 ;;  f2              3   17[BANK0 ] float 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  exp1            1   26[BANK0 ] unsigned char 
  4119 ;;  exp2            1   25[BANK0 ] unsigned char 
  4120 ;;  sign            1   24[BANK0 ] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  3   14[BANK0 ] float 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4130 ;;      Params:         0       6       0       0       0
  4131 ;;      Locals:         0       3       0       0       0
  4132 ;;      Temps:          0       4       0       0       0
  4133 ;;      Totals:         0      13       0       0       0
  4134 ;;Total ram usage:       13 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		___ftpack
  4139 ;; This function is called by:
  4140 ;;		_read_humedad
  4141 ;;		___ftsub
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function ___ftadd
  4147  0D1D                     ___ftadd:
  4148  0D1D                     l2317:	
  4149                           ;incstack = 0
  4150                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4151                           
  4152  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0D1F  082E               	movf	___ftadd@f1,w
  4155  0D20  00B4               	movwf	??___ftadd
  4156  0D21  082F               	movf	___ftadd@f1+1,w
  4157  0D22  00B5               	movwf	??___ftadd+1
  4158  0D23  0830               	movf	___ftadd@f1+2,w
  4159  0D24  00B6               	movwf	??___ftadd+2
  4160  0D25  1003               	clrc
  4161  0D26  0D35               	rlf	??___ftadd+1,w
  4162  0D27  0D36               	rlf	??___ftadd+2,w
  4163  0D28  00B7               	movwf	??___ftadd+3
  4164  0D29  0837               	movf	??___ftadd+3,w
  4165  0D2A  00BA               	movwf	___ftadd@exp1
  4166  0D2B  0831               	movf	___ftadd@f2,w
  4167  0D2C  00B4               	movwf	??___ftadd
  4168  0D2D  0832               	movf	___ftadd@f2+1,w
  4169  0D2E  00B5               	movwf	??___ftadd+1
  4170  0D2F  0833               	movf	___ftadd@f2+2,w
  4171  0D30  00B6               	movwf	??___ftadd+2
  4172  0D31  1003               	clrc
  4173  0D32  0D35               	rlf	??___ftadd+1,w
  4174  0D33  0D36               	rlf	??___ftadd+2,w
  4175  0D34  00B7               	movwf	??___ftadd+3
  4176  0D35  0837               	movf	??___ftadd+3,w
  4177  0D36  00B9               	movwf	___ftadd@exp2
  4178  0D37  083A               	movf	___ftadd@exp1,w
  4179  0D38  1903               	btfsc	3,2
  4180  0D39  2D3B               	goto	u2361
  4181  0D3A  2D3C               	goto	u2360
  4182  0D3B                     u2361:
  4183  0D3B  2D4C               	goto	l2323
  4184  0D3C                     u2360:
  4185  0D3C                     l2319:
  4186  0D3C  0839               	movf	___ftadd@exp2,w
  4187  0D3D  023A               	subwf	___ftadd@exp1,w
  4188  0D3E  1803               	skipnc
  4189  0D3F  2D41               	goto	u2371
  4190  0D40  2D42               	goto	u2370
  4191  0D41                     u2371:
  4192  0D41  2D53               	goto	l2327
  4193  0D42                     u2370:
  4194  0D42                     l2321:
  4195  0D42  0839               	movf	___ftadd@exp2,w
  4196  0D43  00B4               	movwf	??___ftadd
  4197  0D44  083A               	movf	___ftadd@exp1,w
  4198  0D45  02B4               	subwf	??___ftadd,f
  4199  0D46  3019               	movlw	25
  4200  0D47  0234               	subwf	??___ftadd,w
  4201  0D48  1C03               	skipc
  4202  0D49  2D4B               	goto	u2381
  4203  0D4A  2D4C               	goto	u2380
  4204  0D4B                     u2381:
  4205  0D4B  2D53               	goto	l2327
  4206  0D4C                     u2380:
  4207  0D4C                     l2323:
  4208  0D4C  0831               	movf	___ftadd@f2,w
  4209  0D4D  00AE               	movwf	?___ftadd
  4210  0D4E  0832               	movf	___ftadd@f2+1,w
  4211  0D4F  00AF               	movwf	?___ftadd+1
  4212  0D50  0833               	movf	___ftadd@f2+2,w
  4213  0D51  00B0               	movwf	?___ftadd+2
  4214  0D52  2E52               	goto	l816
  4215  0D53                     l2327:
  4216  0D53  0839               	movf	___ftadd@exp2,w
  4217  0D54  1903               	btfsc	3,2
  4218  0D55  2D57               	goto	u2391
  4219  0D56  2D58               	goto	u2390
  4220  0D57                     u2391:
  4221  0D57  2D68               	goto	l819
  4222  0D58                     u2390:
  4223  0D58                     l2329:
  4224  0D58  083A               	movf	___ftadd@exp1,w
  4225  0D59  0239               	subwf	___ftadd@exp2,w
  4226  0D5A  1803               	skipnc
  4227  0D5B  2D5D               	goto	u2401
  4228  0D5C  2D5E               	goto	u2400
  4229  0D5D                     u2401:
  4230  0D5D  2D69               	goto	l2333
  4231  0D5E                     u2400:
  4232  0D5E                     l2331:
  4233  0D5E  083A               	movf	___ftadd@exp1,w
  4234  0D5F  00B4               	movwf	??___ftadd
  4235  0D60  0839               	movf	___ftadd@exp2,w
  4236  0D61  02B4               	subwf	??___ftadd,f
  4237  0D62  3019               	movlw	25
  4238  0D63  0234               	subwf	??___ftadd,w
  4239  0D64  1C03               	skipc
  4240  0D65  2D67               	goto	u2411
  4241  0D66  2D68               	goto	u2410
  4242  0D67                     u2411:
  4243  0D67  2D69               	goto	l2333
  4244  0D68                     u2410:
  4245  0D68                     l819:
  4246  0D68  2E52               	goto	l816
  4247  0D69                     l2333:
  4248  0D69  3006               	movlw	6
  4249  0D6A  00B4               	movwf	??___ftadd
  4250  0D6B  0834               	movf	??___ftadd,w
  4251  0D6C  00B8               	movwf	___ftadd@sign
  4252  0D6D                     l2335:
  4253  0D6D  1FB0               	btfss	___ftadd@f1+2,7
  4254  0D6E  2D70               	goto	u2421
  4255  0D6F  2D71               	goto	u2420
  4256  0D70                     u2421:
  4257  0D70  2D72               	goto	l820
  4258  0D71                     u2420:
  4259  0D71                     l2337:
  4260  0D71  17B8               	bsf	___ftadd@sign,7
  4261  0D72                     l820:
  4262  0D72  1FB3               	btfss	___ftadd@f2+2,7
  4263  0D73  2D75               	goto	u2431
  4264  0D74  2D76               	goto	u2430
  4265  0D75                     u2431:
  4266  0D75  2D77               	goto	l821
  4267  0D76                     u2430:
  4268  0D76                     l2339:
  4269  0D76  1738               	bsf	___ftadd@sign,6
  4270  0D77                     l821:
  4271  0D77  17AF               	bsf	___ftadd@f1+1,7
  4272  0D78                     l2341:
  4273  0D78  30FF               	movlw	255
  4274  0D79  05AE               	andwf	___ftadd@f1,f
  4275  0D7A  30FF               	movlw	255
  4276  0D7B  05AF               	andwf	___ftadd@f1+1,f
  4277  0D7C  3000               	movlw	0
  4278  0D7D  05B0               	andwf	___ftadd@f1+2,f
  4279  0D7E                     l2343:
  4280  0D7E  17B2               	bsf	___ftadd@f2+1,7
  4281  0D7F  30FF               	movlw	255
  4282  0D80  05B1               	andwf	___ftadd@f2,f
  4283  0D81  30FF               	movlw	255
  4284  0D82  05B2               	andwf	___ftadd@f2+1,f
  4285  0D83  3000               	movlw	0
  4286  0D84  05B3               	andwf	___ftadd@f2+2,f
  4287  0D85  0839               	movf	___ftadd@exp2,w
  4288  0D86  023A               	subwf	___ftadd@exp1,w
  4289  0D87  1803               	skipnc
  4290  0D88  2D8A               	goto	u2441
  4291  0D89  2D8B               	goto	u2440
  4292  0D8A                     u2441:
  4293  0D8A  2DB7               	goto	l2355
  4294  0D8B                     u2440:
  4295  0D8B                     l2345:
  4296  0D8B  3001               	movlw	1
  4297  0D8C                     u2455:
  4298  0D8C  1003               	clrc
  4299  0D8D  0DB1               	rlf	___ftadd@f2,f
  4300  0D8E  0DB2               	rlf	___ftadd@f2+1,f
  4301  0D8F  0DB3               	rlf	___ftadd@f2+2,f
  4302  0D90  3EFF               	addlw	-1
  4303  0D91  1D03               	skipz
  4304  0D92  2D8C               	goto	u2455
  4305  0D93  3001               	movlw	1
  4306  0D94  02B9               	subwf	___ftadd@exp2,f
  4307  0D95                     l2347:
  4308  0D95  0839               	movf	___ftadd@exp2,w
  4309  0D96  063A               	xorwf	___ftadd@exp1,w
  4310  0D97  1903               	skipnz
  4311  0D98  2D9A               	goto	u2461
  4312  0D99  2D9B               	goto	u2460
  4313  0D9A                     u2461:
  4314  0D9A  2DB0               	goto	l2353
  4315  0D9B                     u2460:
  4316  0D9B                     l2349:
  4317  0D9B  3001               	movlw	1
  4318  0D9C  02B8               	subwf	___ftadd@sign,f
  4319  0D9D  0838               	movf	___ftadd@sign,w
  4320  0D9E  3907               	andlw	7
  4321  0D9F  1D03               	btfss	3,2
  4322  0DA0  2DA2               	goto	u2471
  4323  0DA1  2DA3               	goto	u2470
  4324  0DA2                     u2471:
  4325  0DA2  2D8B               	goto	l2345
  4326  0DA3                     u2470:
  4327  0DA3  2DB0               	goto	l2353
  4328  0DA4                     l2351:
  4329  0DA4  3001               	movlw	1
  4330  0DA5                     u2485:
  4331  0DA5  1003               	clrc
  4332  0DA6  0CB0               	rrf	___ftadd@f1+2,f
  4333  0DA7  0CAF               	rrf	___ftadd@f1+1,f
  4334  0DA8  0CAE               	rrf	___ftadd@f1,f
  4335  0DA9  3EFF               	addlw	-1
  4336  0DAA  1D03               	skipz
  4337  0DAB  2DA5               	goto	u2485
  4338  0DAC  3001               	movlw	1
  4339  0DAD  00B4               	movwf	??___ftadd
  4340  0DAE  0834               	movf	??___ftadd,w
  4341  0DAF  07BA               	addwf	___ftadd@exp1,f
  4342  0DB0                     l2353:
  4343  0DB0  083A               	movf	___ftadd@exp1,w
  4344  0DB1  0639               	xorwf	___ftadd@exp2,w
  4345  0DB2  1D03               	skipz
  4346  0DB3  2DB5               	goto	u2491
  4347  0DB4  2DB6               	goto	u2490
  4348  0DB5                     u2491:
  4349  0DB5  2DA4               	goto	l2351
  4350  0DB6                     u2490:
  4351  0DB6  2DE8               	goto	l830
  4352  0DB7                     l2355:
  4353  0DB7  083A               	movf	___ftadd@exp1,w
  4354  0DB8  0239               	subwf	___ftadd@exp2,w
  4355  0DB9  1803               	skipnc
  4356  0DBA  2DBC               	goto	u2501
  4357  0DBB  2DBD               	goto	u2500
  4358  0DBC                     u2501:
  4359  0DBC  2DE8               	goto	l830
  4360  0DBD                     u2500:
  4361  0DBD                     l2357:
  4362  0DBD  3001               	movlw	1
  4363  0DBE                     u2515:
  4364  0DBE  1003               	clrc
  4365  0DBF  0DAE               	rlf	___ftadd@f1,f
  4366  0DC0  0DAF               	rlf	___ftadd@f1+1,f
  4367  0DC1  0DB0               	rlf	___ftadd@f1+2,f
  4368  0DC2  3EFF               	addlw	-1
  4369  0DC3  1D03               	skipz
  4370  0DC4  2DBE               	goto	u2515
  4371  0DC5  3001               	movlw	1
  4372  0DC6  02BA               	subwf	___ftadd@exp1,f
  4373  0DC7                     l2359:
  4374  0DC7  0839               	movf	___ftadd@exp2,w
  4375  0DC8  063A               	xorwf	___ftadd@exp1,w
  4376  0DC9  1903               	skipnz
  4377  0DCA  2DCC               	goto	u2521
  4378  0DCB  2DCD               	goto	u2520
  4379  0DCC                     u2521:
  4380  0DCC  2DE2               	goto	l2365
  4381  0DCD                     u2520:
  4382  0DCD                     l2361:
  4383  0DCD  3001               	movlw	1
  4384  0DCE  02B8               	subwf	___ftadd@sign,f
  4385  0DCF  0838               	movf	___ftadd@sign,w
  4386  0DD0  3907               	andlw	7
  4387  0DD1  1D03               	btfss	3,2
  4388  0DD2  2DD4               	goto	u2531
  4389  0DD3  2DD5               	goto	u2530
  4390  0DD4                     u2531:
  4391  0DD4  2DBD               	goto	l2357
  4392  0DD5                     u2530:
  4393  0DD5  2DE2               	goto	l2365
  4394  0DD6                     l2363:
  4395  0DD6  3001               	movlw	1
  4396  0DD7                     u2545:
  4397  0DD7  1003               	clrc
  4398  0DD8  0CB3               	rrf	___ftadd@f2+2,f
  4399  0DD9  0CB2               	rrf	___ftadd@f2+1,f
  4400  0DDA  0CB1               	rrf	___ftadd@f2,f
  4401  0DDB  3EFF               	addlw	-1
  4402  0DDC  1D03               	skipz
  4403  0DDD  2DD7               	goto	u2545
  4404  0DDE  3001               	movlw	1
  4405  0DDF  00B4               	movwf	??___ftadd
  4406  0DE0  0834               	movf	??___ftadd,w
  4407  0DE1  07B9               	addwf	___ftadd@exp2,f
  4408  0DE2                     l2365:
  4409  0DE2  083A               	movf	___ftadd@exp1,w
  4410  0DE3  0639               	xorwf	___ftadd@exp2,w
  4411  0DE4  1D03               	skipz
  4412  0DE5  2DE7               	goto	u2551
  4413  0DE6  2DE8               	goto	u2550
  4414  0DE7                     u2551:
  4415  0DE7  2DD6               	goto	l2363
  4416  0DE8                     u2550:
  4417  0DE8                     l830:
  4418  0DE8  1FB8               	btfss	___ftadd@sign,7
  4419  0DE9  2DEB               	goto	u2561
  4420  0DEA  2DEC               	goto	u2560
  4421  0DEB                     u2561:
  4422  0DEB  2DFC               	goto	l2369
  4423  0DEC                     u2560:
  4424  0DEC                     l2367:
  4425  0DEC  30FF               	movlw	255
  4426  0DED  06AE               	xorwf	___ftadd@f1,f
  4427  0DEE  30FF               	movlw	255
  4428  0DEF  06AF               	xorwf	___ftadd@f1+1,f
  4429  0DF0  30FF               	movlw	255
  4430  0DF1  06B0               	xorwf	___ftadd@f1+2,f
  4431  0DF2  3001               	movlw	1
  4432  0DF3  07AE               	addwf	___ftadd@f1,f
  4433  0DF4  3000               	movlw	0
  4434  0DF5  1803               	skipnc
  4435  0DF6  3001               	movlw	1
  4436  0DF7  07AF               	addwf	___ftadd@f1+1,f
  4437  0DF8  3000               	movlw	0
  4438  0DF9  1803               	skipnc
  4439  0DFA  3001               	movlw	1
  4440  0DFB  07B0               	addwf	___ftadd@f1+2,f
  4441  0DFC                     l2369:
  4442  0DFC  1F38               	btfss	___ftadd@sign,6
  4443  0DFD  2DFF               	goto	u2571
  4444  0DFE  2E00               	goto	u2570
  4445  0DFF                     u2571:
  4446  0DFF  2E10               	goto	l2373
  4447  0E00                     u2570:
  4448  0E00                     l2371:
  4449  0E00  30FF               	movlw	255
  4450  0E01  06B1               	xorwf	___ftadd@f2,f
  4451  0E02  30FF               	movlw	255
  4452  0E03  06B2               	xorwf	___ftadd@f2+1,f
  4453  0E04  30FF               	movlw	255
  4454  0E05  06B3               	xorwf	___ftadd@f2+2,f
  4455  0E06  3001               	movlw	1
  4456  0E07  07B1               	addwf	___ftadd@f2,f
  4457  0E08  3000               	movlw	0
  4458  0E09  1803               	skipnc
  4459  0E0A  3001               	movlw	1
  4460  0E0B  07B2               	addwf	___ftadd@f2+1,f
  4461  0E0C  3000               	movlw	0
  4462  0E0D  1803               	skipnc
  4463  0E0E  3001               	movlw	1
  4464  0E0F  07B3               	addwf	___ftadd@f2+2,f
  4465  0E10                     l2373:
  4466  0E10  01B8               	clrf	___ftadd@sign
  4467  0E11                     l2375:
  4468  0E11  082E               	movf	___ftadd@f1,w
  4469  0E12  07B1               	addwf	___ftadd@f2,f
  4470  0E13  082F               	movf	___ftadd@f1+1,w
  4471  0E14  1103               	clrz
  4472  0E15  1803               	skipnc
  4473  0E16  0A2F               	incf	___ftadd@f1+1,w
  4474  0E17  1903               	skipnz
  4475  0E18  2E1A               	goto	u2581
  4476  0E19  07B2               	addwf	___ftadd@f2+1,f
  4477  0E1A                     u2581:
  4478  0E1A  0830               	movf	___ftadd@f1+2,w
  4479  0E1B  1103               	clrz
  4480  0E1C  1803               	skipnc
  4481  0E1D  0A30               	incf	___ftadd@f1+2,w
  4482  0E1E  1903               	skipnz
  4483  0E1F  2E21               	goto	u2582
  4484  0E20  07B3               	addwf	___ftadd@f2+2,f
  4485  0E21                     u2582:
  4486  0E21                     l2377:
  4487  0E21  1FB3               	btfss	___ftadd@f2+2,7
  4488  0E22  2E24               	goto	u2591
  4489  0E23  2E25               	goto	u2590
  4490  0E24                     u2591:
  4491  0E24  2E37               	goto	l2383
  4492  0E25                     u2590:
  4493  0E25                     l2379:
  4494  0E25  30FF               	movlw	255
  4495  0E26  06B1               	xorwf	___ftadd@f2,f
  4496  0E27  30FF               	movlw	255
  4497  0E28  06B2               	xorwf	___ftadd@f2+1,f
  4498  0E29  30FF               	movlw	255
  4499  0E2A  06B3               	xorwf	___ftadd@f2+2,f
  4500  0E2B  3001               	movlw	1
  4501  0E2C  07B1               	addwf	___ftadd@f2,f
  4502  0E2D  3000               	movlw	0
  4503  0E2E  1803               	skipnc
  4504  0E2F  3001               	movlw	1
  4505  0E30  07B2               	addwf	___ftadd@f2+1,f
  4506  0E31  3000               	movlw	0
  4507  0E32  1803               	skipnc
  4508  0E33  3001               	movlw	1
  4509  0E34  07B3               	addwf	___ftadd@f2+2,f
  4510  0E35                     l2381:
  4511  0E35  01B8               	clrf	___ftadd@sign
  4512  0E36  0AB8               	incf	___ftadd@sign,f
  4513  0E37                     l2383:
  4514  0E37  0831               	movf	___ftadd@f2,w
  4515  0E38  00A0               	movwf	___ftpack@arg
  4516  0E39  0832               	movf	___ftadd@f2+1,w
  4517  0E3A  00A1               	movwf	___ftpack@arg+1
  4518  0E3B  0833               	movf	___ftadd@f2+2,w
  4519  0E3C  00A2               	movwf	___ftpack@arg+2
  4520  0E3D  083A               	movf	___ftadd@exp1,w
  4521  0E3E  00B4               	movwf	??___ftadd
  4522  0E3F  0834               	movf	??___ftadd,w
  4523  0E40  00A3               	movwf	___ftpack@exp
  4524  0E41  0838               	movf	___ftadd@sign,w
  4525  0E42  00B5               	movwf	??___ftadd+1
  4526  0E43  0835               	movf	??___ftadd+1,w
  4527  0E44  00A4               	movwf	___ftpack@sign
  4528  0E45  120A  118A  267B  120A  158A  	fcall	___ftpack
  4529  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0E4C  0820               	movf	?___ftpack,w
  4532  0E4D  00AE               	movwf	?___ftadd
  4533  0E4E  0821               	movf	?___ftpack+1,w
  4534  0E4F  00AF               	movwf	?___ftadd+1
  4535  0E50  0822               	movf	?___ftpack+2,w
  4536  0E51  00B0               	movwf	?___ftadd+2
  4537  0E52                     l816:
  4538  0E52  0008               	return
  4539  0E53                     __end_of___ftadd:
  4540                           
  4541                           	psect	text12
  4542  12DD                     __ptext12:	
  4543 ;; *************** function _mostrarDatos *****************
  4544 ;; Defined at:
  4545 ;;		line 52 in file "display.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0
  4562 ;;      Totals:         0       0       0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    4
  4566 ;; This function calls:
  4567 ;;		_get_humedad
  4568 ;;		_get_intensidad_luminosa
  4569 ;;		_get_temperatura_exterior
  4570 ;;		_get_temperatura_interior
  4571 ;;		_get_velocidad_ventilador
  4572 ;;		_printf
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _mostrarDatos
  4580  12DD                     _mostrarDatos:
  4581  12DD                     l3127:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _mostrarDatos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4584                           
  4585                           
  4586                           ;display.c: 53: printf("\r\n------> Datos:\r\n");
  4587  12DD  30BC               	movlw	low (STR_8| (0+32768))
  4588  12DE  1283               	bcf	3,5	;RP0=0, select bank0
  4589  12DF  1303               	bcf	3,6	;RP1=0, select bank0
  4590  12E0  00EB               	movwf	printf@f
  4591  12E1  3088               	movlw	high (STR_8| (0+32768))
  4592  12E2  00EC               	movwf	printf@f+1
  4593  12E3  120A  118A  2020  160A  118A  	fcall	_printf
  4594                           
  4595                           ;display.c: 55: printf("Temperatura interior %dº \r\n", get_temperatura_interior());
  4596  12E8  301E               	movlw	low (STR_9| (0+32768))
  4597  12E9  1283               	bcf	3,5	;RP0=0, select bank0
  4598  12EA  1303               	bcf	3,6	;RP1=0, select bank0
  4599  12EB  00EB               	movwf	printf@f
  4600  12EC  3088               	movlw	high (STR_9| (0+32768))
  4601  12ED  00EC               	movwf	printf@f+1
  4602  12EE  160A  158A  2769  160A  118A  	fcall	_get_temperatura_interior
  4603  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  4604  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  4605  12F5  0821               	movf	?_get_temperatura_interior+1,w
  4606  12F6  00EE               	movwf	?_printf+3
  4607  12F7  0820               	movf	?_get_temperatura_interior,w
  4608  12F8  00ED               	movwf	?_printf+2
  4609  12F9  120A  118A  2020  160A  118A  	fcall	_printf
  4610                           
  4611                           ;display.c: 57: printf("Temperatura exterior %dº \r\n", get_temperatura_exterior());
  4612  12FE  303A               	movlw	low (STR_10| (0+32768))
  4613  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  4614  1300  1303               	bcf	3,6	;RP1=0, select bank0
  4615  1301  00EB               	movwf	printf@f
  4616  1302  3088               	movlw	high (STR_10| (0+32768))
  4617  1303  00EC               	movwf	printf@f+1
  4618  1304  160A  158A  2790  160A  118A  	fcall	_get_temperatura_exterior
  4619  1309  1283               	bcf	3,5	;RP0=0, select bank0
  4620  130A  1303               	bcf	3,6	;RP1=0, select bank0
  4621  130B  0821               	movf	?_get_temperatura_exterior+1,w
  4622  130C  00EE               	movwf	?_printf+3
  4623  130D  0820               	movf	?_get_temperatura_exterior,w
  4624  130E  00ED               	movwf	?_printf+2
  4625  130F  120A  118A  2020  160A  118A  	fcall	_printf
  4626                           
  4627                           ;display.c: 59: printf("Humedad %d%% \r\n", get_humedad());
  4628  1314  3016               	movlw	low (STR_11| (0+32768))
  4629  1315  1283               	bcf	3,5	;RP0=0, select bank0
  4630  1316  1303               	bcf	3,6	;RP1=0, select bank0
  4631  1317  00EB               	movwf	printf@f
  4632  1318  3089               	movlw	high (STR_11| (0+32768))
  4633  1319  00EC               	movwf	printf@f+1
  4634  131A  160A  158A  2776  160A  118A  	fcall	_get_humedad
  4635  131F  1283               	bcf	3,5	;RP0=0, select bank0
  4636  1320  1303               	bcf	3,6	;RP1=0, select bank0
  4637  1321  0821               	movf	?_get_humedad+1,w
  4638  1322  00EE               	movwf	?_printf+3
  4639  1323  0820               	movf	?_get_humedad,w
  4640  1324  00ED               	movwf	?_printf+2
  4641  1325  120A  118A  2020  160A  118A  	fcall	_printf
  4642                           
  4643                           ;display.c: 61: printf("Intensidad luminosa %d lm\r\n", get_intensidad_luminosa());
  4644  132A  3056               	movlw	low (STR_12| (0+32768))
  4645  132B  1283               	bcf	3,5	;RP0=0, select bank0
  4646  132C  1303               	bcf	3,6	;RP1=0, select bank0
  4647  132D  00EB               	movwf	printf@f
  4648  132E  3088               	movlw	high (STR_12| (0+32768))
  4649  132F  00EC               	movwf	printf@f+1
  4650  1330  160A  158A  2783  160A  118A  	fcall	_get_intensidad_luminosa
  4651  1335  1283               	bcf	3,5	;RP0=0, select bank0
  4652  1336  1303               	bcf	3,6	;RP1=0, select bank0
  4653  1337  0821               	movf	?_get_intensidad_luminosa+1,w
  4654  1338  00EE               	movwf	?_printf+3
  4655  1339  0820               	movf	?_get_intensidad_luminosa,w
  4656  133A  00ED               	movwf	?_printf+2
  4657  133B  120A  118A  2020  160A  118A  	fcall	_printf
  4658                           
  4659                           ;display.c: 63: printf("Velocidad del ventilador %d%%\r\n", get_velocidad_ventilador());
  4660  1340  30C5               	movlw	low (STR_13| (0+32768))
  4661  1341  1283               	bcf	3,5	;RP0=0, select bank0
  4662  1342  1303               	bcf	3,6	;RP1=0, select bank0
  4663  1343  00EB               	movwf	printf@f
  4664  1344  3087               	movlw	high (STR_13| (0+32768))
  4665  1345  00EC               	movwf	printf@f+1
  4666  1346  160A  118A  203F  160A  118A  	fcall	_get_velocidad_ventilador
  4667  134B  1283               	bcf	3,5	;RP0=0, select bank0
  4668  134C  1303               	bcf	3,6	;RP1=0, select bank0
  4669  134D  086A               	movf	?_get_velocidad_ventilador+1,w
  4670  134E  00EE               	movwf	?_printf+3
  4671  134F  0869               	movf	?_get_velocidad_ventilador,w
  4672  1350  00ED               	movwf	?_printf+2
  4673  1351  120A  118A  2020  160A  118A  	fcall	_printf
  4674  1356                     l156:
  4675  1356  0008               	return
  4676  1357                     __end_of_mostrarDatos:
  4677                           
  4678                           	psect	text13
  4679  103F                     __ptext13:	
  4680 ;; *************** function _get_velocidad_ventilador *****************
  4681 ;; Defined at:
  4682 ;;		line 111 in file "actuadores.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  2   73[BANK0 ] int 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       2       0       0       0
  4697 ;;      Locals:         0       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0
  4699 ;;      Totals:         0       2       0       0       0
  4700 ;;Total ram usage:        2 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    3
  4703 ;; This function calls:
  4704 ;;		___fttol
  4705 ;; This function is called by:
  4706 ;;		_mostrarDatos
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           
  4711                           ;psect for function _get_velocidad_ventilador
  4712  103F                     _get_velocidad_ventilador:
  4713  103F                     l2811:	
  4714                           ;incstack = 0
  4715                           ; Regs used in _get_velocidad_ventilador: [wreg+status,2+status,0+pclath+cstack]
  4716                           
  4717                           
  4718                           ;actuadores.c: 112: return vent;
  4719  103F  1683               	bsf	3,5	;RP0=1, select bank1
  4720  1040  1303               	bcf	3,6	;RP1=0, select bank1
  4721  1041  084F               	movf	_vent^(0+128),w
  4722  1042  1283               	bcf	3,5	;RP0=0, select bank0
  4723  1043  1303               	bcf	3,6	;RP1=0, select bank0
  4724  1044  00DB               	movwf	___fttol@f1
  4725  1045  1683               	bsf	3,5	;RP0=1, select bank1
  4726  1046  1303               	bcf	3,6	;RP1=0, select bank1
  4727  1047  0850               	movf	(_vent+1)^(0+128),w
  4728  1048  1283               	bcf	3,5	;RP0=0, select bank0
  4729  1049  1303               	bcf	3,6	;RP1=0, select bank0
  4730  104A  00DC               	movwf	___fttol@f1+1
  4731  104B  1683               	bsf	3,5	;RP0=1, select bank1
  4732  104C  1303               	bcf	3,6	;RP1=0, select bank1
  4733  104D  0851               	movf	(_vent+2)^(0+128),w
  4734  104E  1283               	bcf	3,5	;RP0=0, select bank0
  4735  104F  1303               	bcf	3,6	;RP1=0, select bank0
  4736  1050  00DD               	movwf	___fttol@f1+2
  4737  1051  160A  118A  2357  160A  118A  	fcall	___fttol
  4738  1056  1283               	bcf	3,5	;RP0=0, select bank0
  4739  1057  1303               	bcf	3,6	;RP1=0, select bank0
  4740  1058  085C               	movf	?___fttol+1,w
  4741  1059  00EA               	movwf	?_get_velocidad_ventilador+1
  4742  105A  085B               	movf	?___fttol,w
  4743  105B  00E9               	movwf	?_get_velocidad_ventilador
  4744  105C                     l248:
  4745  105C  0008               	return
  4746  105D                     __end_of_get_velocidad_ventilador:
  4747                           
  4748                           	psect	text14
  4749  1F90                     __ptext14:	
  4750 ;; *************** function _get_temperatura_exterior *****************
  4751 ;; Defined at:
  4752 ;;		line 101 in file "sensores.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2    0[BANK0 ] int 
  4759 ;; Registers used:
  4760 ;;		wreg
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         0       2       0       0       0
  4767 ;;      Locals:         0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0
  4769 ;;      Totals:         0       2       0       0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_mostrarDatos
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _get_temperatura_exterior
  4782  1F90                     _get_temperatura_exterior:
  4783  1F90                     l2783:	
  4784                           ;incstack = 0
  4785                           ; Regs used in _get_temperatura_exterior: [wreg]
  4786                           
  4787                           
  4788                           ;sensores.c: 103: return tempext;
  4789  1F90  1683               	bsf	3,5	;RP0=1, select bank1
  4790  1F91  1303               	bcf	3,6	;RP1=0, select bank1
  4791  1F92  0864               	movf	(_tempext+1)^(0+128),w
  4792  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  4793  1F94  1303               	bcf	3,6	;RP1=0, select bank0
  4794  1F95  00A1               	movwf	?_get_temperatura_exterior+1
  4795  1F96  1683               	bsf	3,5	;RP0=1, select bank1
  4796  1F97  1303               	bcf	3,6	;RP1=0, select bank1
  4797  1F98  0863               	movf	_tempext^(0+128),w
  4798  1F99  1283               	bcf	3,5	;RP0=0, select bank0
  4799  1F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4800  1F9B  00A0               	movwf	?_get_temperatura_exterior
  4801  1F9C                     l59:
  4802  1F9C  0008               	return
  4803  1F9D                     __end_of_get_temperatura_exterior:
  4804                           
  4805                           	psect	text15
  4806  1F83                     __ptext15:	
  4807 ;; *************** function _get_intensidad_luminosa *****************
  4808 ;; Defined at:
  4809 ;;		line 157 in file "sensores.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2    0[BANK0 ] int 
  4816 ;; Registers used:
  4817 ;;		wreg
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         0       2       0       0       0
  4824 ;;      Locals:         0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0
  4826 ;;      Totals:         0       2       0       0       0
  4827 ;;Total ram usage:        2 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    2
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_mostrarDatos
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function _get_intensidad_luminosa
  4839  1F83                     _get_intensidad_luminosa:
  4840  1F83                     l2791:	
  4841                           ;incstack = 0
  4842                           ; Regs used in _get_intensidad_luminosa: [wreg]
  4843                           
  4844                           
  4845                           ;sensores.c: 159: return lum;
  4846  1F83  1683               	bsf	3,5	;RP0=1, select bank1
  4847  1F84  1303               	bcf	3,6	;RP1=0, select bank1
  4848  1F85  0860               	movf	(_lum+1)^(0+128),w
  4849  1F86  1283               	bcf	3,5	;RP0=0, select bank0
  4850  1F87  1303               	bcf	3,6	;RP1=0, select bank0
  4851  1F88  00A1               	movwf	?_get_intensidad_luminosa+1
  4852  1F89  1683               	bsf	3,5	;RP0=1, select bank1
  4853  1F8A  1303               	bcf	3,6	;RP1=0, select bank1
  4854  1F8B  085F               	movf	_lum^(0+128),w
  4855  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4856  1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4857  1F8E  00A0               	movwf	?_get_intensidad_luminosa
  4858  1F8F                     l77:
  4859  1F8F  0008               	return
  4860  1F90                     __end_of_get_intensidad_luminosa:
  4861                           
  4862                           	psect	text16
  4863  1F76                     __ptext16:	
  4864 ;; *************** function _get_humedad *****************
  4865 ;; Defined at:
  4866 ;;		line 130 in file "sensores.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  2    0[BANK0 ] int 
  4873 ;; Registers used:
  4874 ;;		wreg
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       2       0       0       0
  4881 ;;      Locals:         0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0
  4883 ;;      Totals:         0       2       0       0       0
  4884 ;;Total ram usage:        2 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_mostrarDatos
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           
  4895                           ;psect for function _get_humedad
  4896  1F76                     _get_humedad:
  4897  1F76                     l2787:	
  4898                           ;incstack = 0
  4899                           ; Regs used in _get_humedad: [wreg]
  4900                           
  4901                           
  4902                           ;sensores.c: 131: return humedad;
  4903  1F76  1683               	bsf	3,5	;RP0=1, select bank1
  4904  1F77  1303               	bcf	3,6	;RP1=0, select bank1
  4905  1F78  0862               	movf	(_humedad+1)^(0+128),w
  4906  1F79  1283               	bcf	3,5	;RP0=0, select bank0
  4907  1F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4908  1F7B  00A1               	movwf	?_get_humedad+1
  4909  1F7C  1683               	bsf	3,5	;RP0=1, select bank1
  4910  1F7D  1303               	bcf	3,6	;RP1=0, select bank1
  4911  1F7E  0861               	movf	_humedad^(0+128),w
  4912  1F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4913  1F80  1303               	bcf	3,6	;RP1=0, select bank0
  4914  1F81  00A0               	movwf	?_get_humedad
  4915  1F82                     l68:
  4916  1F82  0008               	return
  4917  1F83                     __end_of_get_humedad:
  4918                           
  4919                           	psect	text17
  4920  1FE9                     __ptext17:	
  4921 ;; *************** function _mostrarConsigna *****************
  4922 ;; Defined at:
  4923 ;;		line 48 in file "display.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4937 ;;      Params:         0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0
  4939 ;;      Temps:          0       0       0       0       0
  4940 ;;      Totals:         0       0       0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    4
  4944 ;; This function calls:
  4945 ;;		_get_tempObjetivo
  4946 ;;		_printf
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _mostrarConsigna
  4954  1FE9                     _mostrarConsigna:
  4955  1FE9                     l3125:	
  4956                           ;incstack = 0
  4957                           ; Regs used in _mostrarConsigna: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4958                           
  4959                           
  4960                           ;display.c: 49: printf("\r\n------> Consigna o Temperatura Objetivo: %dº\r\n", get_tempO
      +                          bjetivo());
  4961  1FE9  3071               	movlw	low (STR_7| (0+32768))
  4962  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  4963  1FEB  1303               	bcf	3,6	;RP1=0, select bank0
  4964  1FEC  00EB               	movwf	printf@f
  4965  1FED  3087               	movlw	high (STR_7| (0+32768))
  4966  1FEE  00EC               	movwf	printf@f+1
  4967  1FEF  160A  118A  2128  160A  158A  	fcall	_get_tempObjetivo
  4968  1FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4969  1FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4970  1FF6  0830               	movf	?_get_tempObjetivo+1,w
  4971  1FF7  00EE               	movwf	?_printf+3
  4972  1FF8  082F               	movf	?_get_tempObjetivo,w
  4973  1FF9  00ED               	movwf	?_printf+2
  4974  1FFA  120A  118A  2020  160A  158A  	fcall	_printf
  4975  1FFF                     l153:
  4976  1FFF  0008               	return
  4977  2000                     __end_of_mostrarConsigna:
  4978                           
  4979                           	psect	text18
  4980  1F5D                     __ptext18:	
  4981 ;; *************** function _mensajeBienvenida *****************
  4982 ;; Defined at:
  4983 ;;		line 44 in file "display.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4997 ;;      Params:         0       0       0       0       0
  4998 ;;      Locals:         0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0
  5000 ;;      Totals:         0       0       0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    4
  5004 ;; This function calls:
  5005 ;;		_printf
  5006 ;; This function is called by:
  5007 ;;		_main
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function _mensajeBienvenida
  5013  1F5D                     _mensajeBienvenida:
  5014  1F5D                     l3123:	
  5015                           ;incstack = 0
  5016                           ; Regs used in _mensajeBienvenida: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5017                           
  5018                           
  5019                           ;display.c: 45: printf("\r\nBienvenidos al sistema de Control y Monitorizacion del Horno
      +                          \r\n");
  5020  1F5D  3030               	movlw	low (STR_6| (0+32768))
  5021  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  5022  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  5023  1F60  00EB               	movwf	printf@f
  5024  1F61  3087               	movlw	high (STR_6| (0+32768))
  5025  1F62  00EC               	movwf	printf@f+1
  5026  1F63  120A  118A  2020  160A  158A  	fcall	_printf
  5027  1F68                     l150:
  5028  1F68  0008               	return
  5029  1F69                     __end_of_mensajeBienvenida:
  5030                           
  5031                           	psect	text19
  5032  0E53                     __ptext19:	
  5033 ;; *************** function _logica_Actuadores *****************
  5034 ;; Defined at:
  5035 ;;		line 78 in file "actuadores.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5049 ;;      Params:         0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    4
  5056 ;; This function calls:
  5057 ;;		___awtoft
  5058 ;;		___ftdiv
  5059 ;;		___ftge
  5060 ;;		___ftmul
  5061 ;;		___fttol
  5062 ;;		___wmul
  5063 ;;		_get_lastPotenciometro
  5064 ;;		_get_tempObjetivo
  5065 ;;		_get_temperatura_interior
  5066 ;;		_printf
  5067 ;;		_set_Calefactor
  5068 ;;		_set_Refrigerador
  5069 ;;		_set_Ventilador
  5070 ;; This function is called by:
  5071 ;;		_main
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           
  5076                           ;psect for function _logica_Actuadores
  5077  0E53                     _logica_Actuadores:
  5078  0E53                     l3137:	
  5079                           ;incstack = 0
  5080                           ; Regs used in _logica_Actuadores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5081                           
  5082                           
  5083                           ;actuadores.c: 79: tempInt = get_temperatura_interior();
  5084  0E53  160A  158A  2769  120A  158A  	fcall	_get_temperatura_interior
  5085  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0E5A  0821               	movf	?_get_temperatura_interior+1,w
  5088  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  5089  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  5090  0E5D  00D8               	movwf	(_tempInt+1)^(0+128)
  5091  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0E60  0820               	movf	?_get_temperatura_interior,w
  5094  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  5095  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  5096  0E63  00D7               	movwf	_tempInt^(0+128)
  5097  0E64                     l3139:
  5098                           
  5099                           ;actuadores.c: 80: tempObj = get_tempObjetivo();
  5100  0E64  160A  118A  2128  120A  158A  	fcall	_get_tempObjetivo
  5101  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0E6B  0830               	movf	?_get_tempObjetivo+1,w
  5104  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  5105  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  5106  0E6E  00D6               	movwf	(_tempObj+1)^(0+128)
  5107  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  5109  0E71  082F               	movf	?_get_tempObjetivo,w
  5110  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  5111  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  5112  0E74  00D5               	movwf	_tempObj^(0+128)
  5113  0E75                     l3141:
  5114                           
  5115                           ;actuadores.c: 81: diferencia = tempObj - tempInt;
  5116  0E75  0857               	movf	_tempInt^(0+128),w
  5117  0E76  0255               	subwf	_tempObj^(0+128),w
  5118  0E77  00E9               	movwf	_diferencia^(0+128)
  5119  0E78  0858               	movf	(_tempInt+1)^(0+128),w
  5120  0E79  1C03               	skipc
  5121  0E7A  0A58               	incf	(_tempInt+1)^(0+128),w
  5122  0E7B  0256               	subwf	(_tempObj+1)^(0+128),w
  5123  0E7C  00EA               	movwf	(_diferencia+1)^(0+128)
  5124  0E7D                     l3143:
  5125                           
  5126                           ;actuadores.c: 82: errorMaximo = tempObj * 0.05;
  5127  0E7D  30CD               	movlw	205
  5128  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  5129  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  5130  0E80  00CB               	movwf	___ftmul@f1
  5131  0E81  304C               	movlw	76
  5132  0E82  00CC               	movwf	___ftmul@f1+1
  5133  0E83  303D               	movlw	61
  5134  0E84  00CD               	movwf	___ftmul@f1+2
  5135  0E85  1683               	bsf	3,5	;RP0=1, select bank1
  5136  0E86  1303               	bcf	3,6	;RP1=0, select bank1
  5137  0E87  0856               	movf	(_tempObj+1)^(0+128),w
  5138  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0E8A  00A9               	movwf	___awtoft@c+1
  5141  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  5142  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  5143  0E8D  0855               	movf	_tempObj^(0+128),w
  5144  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  5145  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  5146  0E90  00A8               	movwf	___awtoft@c
  5147  0E91  160A  118A  20A9  120A  158A  	fcall	___awtoft
  5148  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0E98  0828               	movf	?___awtoft,w
  5151  0E99  00CE               	movwf	___ftmul@f2
  5152  0E9A  0829               	movf	?___awtoft+1,w
  5153  0E9B  00CF               	movwf	___ftmul@f2+1
  5154  0E9C  082A               	movf	?___awtoft+2,w
  5155  0E9D  00D0               	movwf	___ftmul@f2+2
  5156  0E9E  160A  118A  254B  120A  158A  	fcall	___ftmul
  5157  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0EA5  084B               	movf	?___ftmul,w
  5160  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  5161  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  5162  0EA8  00CC               	movwf	_errorMaximo^(0+128)
  5163  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  5165  0EAB  084C               	movf	?___ftmul+1,w
  5166  0EAC  1683               	bsf	3,5	;RP0=1, select bank1
  5167  0EAD  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0EAE  00CD               	movwf	(_errorMaximo+1)^(0+128)
  5169  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0EB1  084D               	movf	?___ftmul+2,w
  5172  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  5173  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  5174  0EB4  00CE               	movwf	(_errorMaximo+2)^(0+128)
  5175  0EB5                     l3145:
  5176                           
  5177                           ;actuadores.c: 84: if (get_lastPotenciometro() > 3) {
  5178  0EB5  3000               	movlw	0
  5179  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0EB8  00AE               	movwf	___ftge@ff1
  5182  0EB9  3040               	movlw	64
  5183  0EBA  00AF               	movwf	___ftge@ff1+1
  5184  0EBB  3040               	movlw	64
  5185  0EBC  00B0               	movwf	___ftge@ff1+2
  5186  0EBD  160A  158A  27AB  120A  158A  	fcall	_get_lastPotenciometro
  5187  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0EC4  0820               	movf	?_get_lastPotenciometro,w
  5190  0EC5  00B1               	movwf	___ftge@ff2
  5191  0EC6  0821               	movf	?_get_lastPotenciometro+1,w
  5192  0EC7  00B2               	movwf	___ftge@ff2+1
  5193  0EC8  0822               	movf	?_get_lastPotenciometro+2,w
  5194  0EC9  00B3               	movwf	___ftge@ff2+2
  5195  0ECA  160A  118A  215F  120A  158A  	fcall	___ftge
  5196  0ECF  1803               	btfsc	3,0
  5197  0ED0  2ED2               	goto	u3801
  5198  0ED1  2ED3               	goto	u3800
  5199  0ED2                     u3801:
  5200  0ED2  2EE0               	goto	l3149
  5201  0ED3                     u3800:
  5202  0ED3                     l3147:
  5203                           
  5204                           ;actuadores.c: 85: printf("Apagando Horno...");
  5205  0ED3  30E2               	movlw	low (STR_14| (0+32768))
  5206  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0ED6  00EB               	movwf	printf@f
  5209  0ED7  3088               	movlw	high (STR_14| (0+32768))
  5210  0ED8  00EC               	movwf	printf@f+1
  5211  0ED9  120A  118A  2020  120A  158A  	fcall	_printf
  5212  0EDE  0063               	sleep	;# 
  5213                           
  5214                           ;actuadores.c: 87: } else {
  5215  0EDF  2FFF               	goto	l245
  5216  0EE0                     l3149:
  5217                           
  5218                           ;actuadores.c: 89: if (diferencia > 0) {
  5219  0EE0  1683               	bsf	3,5	;RP0=1, select bank1
  5220  0EE1  1303               	bcf	3,6	;RP1=0, select bank1
  5221  0EE2  086A               	movf	(_diferencia+1)^(0+128),w
  5222  0EE3  3A80               	xorlw	128
  5223  0EE4  00FF               	movwf	btemp+1
  5224  0EE5  3080               	movlw	128
  5225  0EE6  027F               	subwf	btemp+1,w
  5226  0EE7  1D03               	skipz
  5227  0EE8  2EEB               	goto	u3815
  5228  0EE9  3001               	movlw	1
  5229  0EEA  0269               	subwf	_diferencia^(0+128),w
  5230  0EEB                     u3815:
  5231  0EEB  1C03               	skipc
  5232  0EEC  2EEE               	goto	u3811
  5233  0EED  2EEF               	goto	u3810
  5234  0EEE                     u3811:
  5235  0EEE  2F05               	goto	l3153
  5236  0EEF                     u3810:
  5237  0EEF                     l3151:
  5238                           
  5239                           ;actuadores.c: 90: set_Refrigerador(0);
  5240  0EEF  3000               	movlw	0
  5241  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5242  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5243  0EF2  00A0               	movwf	set_Refrigerador@on
  5244  0EF3  00A1               	movwf	set_Refrigerador@on+1
  5245  0EF4  160A  158A  2751  120A  158A  	fcall	_set_Refrigerador
  5246                           
  5247                           ;actuadores.c: 91: set_Calefactor(1);
  5248  0EF9  3001               	movlw	1
  5249  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  5250  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  5251  0EFC  00A0               	movwf	set_Calefactor@on
  5252  0EFD  3000               	movlw	0
  5253  0EFE  00A1               	movwf	set_Calefactor@on+1
  5254  0EFF  160A  158A  2745  120A  158A  	fcall	_set_Calefactor
  5255                           
  5256                           ;actuadores.c: 92: } else {
  5257  0F04  2F1A               	goto	l3155
  5258  0F05                     l3153:
  5259                           
  5260                           ;actuadores.c: 93: set_Refrigerador(1);
  5261  0F05  3001               	movlw	1
  5262  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  5263  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0F08  00A0               	movwf	set_Refrigerador@on
  5265  0F09  3000               	movlw	0
  5266  0F0A  00A1               	movwf	set_Refrigerador@on+1
  5267  0F0B  160A  158A  2751  120A  158A  	fcall	_set_Refrigerador
  5268                           
  5269                           ;actuadores.c: 94: set_Calefactor(0);
  5270  0F10  3000               	movlw	0
  5271  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  5272  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  5273  0F13  00A0               	movwf	set_Calefactor@on
  5274  0F14  00A1               	movwf	set_Calefactor@on+1
  5275  0F15  160A  158A  2745  120A  158A  	fcall	_set_Calefactor
  5276  0F1A                     l3155:
  5277                           
  5278                           ;actuadores.c: 95: };actuadores.c: 96: if(diferencia < 0 )
  5279  0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  5280  0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  5281  0F1C  1FEA               	btfss	(_diferencia+1)^(0+128),7
  5282  0F1D  2F1F               	goto	u3821
  5283  0F1E  2F20               	goto	u3820
  5284  0F1F                     u3821:
  5285  0F1F  2F25               	goto	l3159
  5286  0F20                     u3820:
  5287  0F20                     l3157:
  5288                           
  5289                           ;actuadores.c: 97: diferencia = -diferencia;
  5290  0F20  09E9               	comf	_diferencia^(0+128),f
  5291  0F21  09EA               	comf	(_diferencia+1)^(0+128),f
  5292  0F22  0AE9               	incf	_diferencia^(0+128),f
  5293  0F23  1903               	skipnz
  5294  0F24  0AEA               	incf	(_diferencia+1)^(0+128),f
  5295  0F25                     l3159:
  5296                           
  5297                           ;actuadores.c: 99: if (diferencia > errorMaximo) {
  5298  0F25  084C               	movf	_errorMaximo^(0+128),w
  5299  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  5300  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  5301  0F28  00AE               	movwf	___ftge@ff1
  5302  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  5303  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  5304  0F2B  084D               	movf	(_errorMaximo+1)^(0+128),w
  5305  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0F2E  00AF               	movwf	___ftge@ff1+1
  5308  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  5309  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  5310  0F31  084E               	movf	(_errorMaximo+2)^(0+128),w
  5311  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  5312  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  5313  0F34  00B0               	movwf	___ftge@ff1+2
  5314  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  5315  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  5316  0F37  086A               	movf	(_diferencia+1)^(0+128),w
  5317  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0F3A  00A9               	movwf	___awtoft@c+1
  5320  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0F3D  0869               	movf	_diferencia^(0+128),w
  5323  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0F40  00A8               	movwf	___awtoft@c
  5326  0F41  160A  118A  20A9  120A  158A  	fcall	___awtoft
  5327  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0F48  0828               	movf	?___awtoft,w
  5330  0F49  00B1               	movwf	___ftge@ff2
  5331  0F4A  0829               	movf	?___awtoft+1,w
  5332  0F4B  00B2               	movwf	___ftge@ff2+1
  5333  0F4C  082A               	movf	?___awtoft+2,w
  5334  0F4D  00B3               	movwf	___ftge@ff2+2
  5335  0F4E  160A  118A  215F  120A  158A  	fcall	___ftge
  5336  0F53  1803               	btfsc	3,0
  5337  0F54  2F56               	goto	u3831
  5338  0F55  2F57               	goto	u3830
  5339  0F56                     u3831:
  5340  0F56  2F82               	goto	l3165
  5341  0F57                     u3830:
  5342  0F57                     l3161:
  5343                           
  5344                           ;actuadores.c: 100: vent = 75;
  5345  0F57  3000               	movlw	0
  5346  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  5347  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  5348  0F5A  00CF               	movwf	_vent^(0+128)
  5349  0F5B  3096               	movlw	150
  5350  0F5C  00D0               	movwf	(_vent+1)^(0+128)
  5351  0F5D  3042               	movlw	66
  5352  0F5E  00D1               	movwf	(_vent+2)^(0+128)
  5353  0F5F                     l3163:
  5354                           
  5355                           ;actuadores.c: 101: set_Ventilador(vent);
  5356  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5357  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  5358  0F61  084F               	movf	_vent^(0+128),w
  5359  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0F64  00DB               	movwf	___fttol@f1
  5362  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  5363  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  5364  0F67  0850               	movf	(_vent+1)^(0+128),w
  5365  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0F6A  00DC               	movwf	___fttol@f1+1
  5368  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  5369  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  5370  0F6D  0851               	movf	(_vent+2)^(0+128),w
  5371  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0F70  00DD               	movwf	___fttol@f1+2
  5374  0F71  160A  118A  2357  120A  158A  	fcall	___fttol
  5375  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0F78  085C               	movf	?___fttol+1,w
  5378  0F79  00EA               	movwf	set_Ventilador@intensidad+1
  5379  0F7A  085B               	movf	?___fttol,w
  5380  0F7B  00E9               	movwf	set_Ventilador@intensidad
  5381  0F7C  160A  118A  20D2  120A  158A  	fcall	_set_Ventilador
  5382                           
  5383                           ;actuadores.c: 102: } else {
  5384  0F81  2FFF               	goto	l245
  5385  0F82                     l3165:
  5386                           
  5387                           ;actuadores.c: 103: vent = (75 * diferencia) / errorMaximo;
  5388  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  5389  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  5390  0F84  084C               	movf	_errorMaximo^(0+128),w
  5391  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0F87  00BB               	movwf	___ftdiv@f2
  5394  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  5395  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  5396  0F8A  084D               	movf	(_errorMaximo+1)^(0+128),w
  5397  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  5398  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  5399  0F8D  00BC               	movwf	___ftdiv@f2+1
  5400  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  5401  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  5402  0F90  084E               	movf	(_errorMaximo+2)^(0+128),w
  5403  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0F93  00BD               	movwf	___ftdiv@f2+2
  5406  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  5407  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  5408  0F96  086A               	movf	(_diferencia+1)^(0+128),w
  5409  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  5410  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  5411  0F99  00A1               	movwf	___wmul@multiplier+1
  5412  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  5413  0F9B  1303               	bcf	3,6	;RP1=0, select bank1
  5414  0F9C  0869               	movf	_diferencia^(0+128),w
  5415  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0F9F  00A0               	movwf	___wmul@multiplier
  5418  0FA0  304B               	movlw	75
  5419  0FA1  00A2               	movwf	___wmul@multiplicand
  5420  0FA2  3000               	movlw	0
  5421  0FA3  00A3               	movwf	___wmul@multiplicand+1
  5422  0FA4  160A  118A  2082  120A  158A  	fcall	___wmul
  5423  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5425  0FAB  0821               	movf	?___wmul+1,w
  5426  0FAC  00A9               	movwf	___awtoft@c+1
  5427  0FAD  0820               	movf	?___wmul,w
  5428  0FAE  00A8               	movwf	___awtoft@c
  5429  0FAF  160A  118A  20A9  120A  158A  	fcall	___awtoft
  5430  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0FB6  0828               	movf	?___awtoft,w
  5433  0FB7  00BE               	movwf	___ftdiv@f1
  5434  0FB8  0829               	movf	?___awtoft+1,w
  5435  0FB9  00BF               	movwf	___ftdiv@f1+1
  5436  0FBA  082A               	movf	?___awtoft+2,w
  5437  0FBB  00C0               	movwf	___ftdiv@f1+2
  5438  0FBC  120A  158A  214D  120A  158A  	fcall	___ftdiv
  5439  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0FC3  083B               	movf	?___ftdiv,w
  5442  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  5443  0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  5444  0FC6  00CF               	movwf	_vent^(0+128)
  5445  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0FC9  083C               	movf	?___ftdiv+1,w
  5448  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  5449  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  5450  0FCC  00D0               	movwf	(_vent+1)^(0+128)
  5451  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0FCF  083D               	movf	?___ftdiv+2,w
  5454  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  5455  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  5456  0FD2  00D1               	movwf	(_vent+2)^(0+128)
  5457                           
  5458                           ;actuadores.c: 104: if (vent <= 25)
  5459  0FD3  3000               	movlw	0
  5460  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0FD6  00AE               	movwf	___ftge@ff1
  5463  0FD7  30C8               	movlw	200
  5464  0FD8  00AF               	movwf	___ftge@ff1+1
  5465  0FD9  3041               	movlw	65
  5466  0FDA  00B0               	movwf	___ftge@ff1+2
  5467  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  5468  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  5469  0FDD  084F               	movf	_vent^(0+128),w
  5470  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  5471  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  5472  0FE0  00B1               	movwf	___ftge@ff2
  5473  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  5474  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  5475  0FE3  0850               	movf	(_vent+1)^(0+128),w
  5476  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0FE6  00B2               	movwf	___ftge@ff2+1
  5479  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  5480  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  5481  0FE9  0851               	movf	(_vent+2)^(0+128),w
  5482  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0FEC  00B3               	movwf	___ftge@ff2+2
  5485  0FED  160A  118A  215F  120A  158A  	fcall	___ftge
  5486  0FF2  1C03               	btfss	3,0
  5487  0FF3  2FF5               	goto	u3841
  5488  0FF4  2FF6               	goto	u3840
  5489  0FF5                     u3841:
  5490  0FF5  2F5F               	goto	l3163
  5491  0FF6                     u3840:
  5492  0FF6                     l3167:
  5493                           
  5494                           ;actuadores.c: 105: vent = 25;
  5495  0FF6  3000               	movlw	0
  5496  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  5497  0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  5498  0FF9  00CF               	movwf	_vent^(0+128)
  5499  0FFA  30C8               	movlw	200
  5500  0FFB  00D0               	movwf	(_vent+1)^(0+128)
  5501  0FFC  3041               	movlw	65
  5502  0FFD  00D1               	movwf	(_vent+2)^(0+128)
  5503  0FFE  2F5F               	goto	l3163
  5504  0FFF                     l245:
  5505  0FFF  0008               	return
  5506  1000                     __end_of_logica_Actuadores:
  5507                           
  5508                           	psect	text20
  5509  10D2                     __ptext20:	
  5510 ;; *************** function _set_Ventilador *****************
  5511 ;; Defined at:
  5512 ;;		line 72 in file "actuadores.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  intensidad      2   73[BANK0 ] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5526 ;;      Params:         0       2       0       0       0
  5527 ;;      Locals:         0       0       0       0       0
  5528 ;;      Temps:          0       2       0       0       0
  5529 ;;      Totals:         0       4       0       0       0
  5530 ;;Total ram usage:        4 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    3
  5533 ;; This function calls:
  5534 ;;		___awdiv
  5535 ;;		___wmul
  5536 ;; This function is called by:
  5537 ;;		_logica_Actuadores
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _set_Ventilador
  5543  10D2                     _set_Ventilador:
  5544  10D2                     l2839:	
  5545                           ;incstack = 0
  5546                           ; Regs used in _set_Ventilador: [wreg+status,2+status,0+pclath+cstack]
  5547                           
  5548                           
  5549                           ;actuadores.c: 75: CCPR1L = intensidad * PR2 / 100;
  5550  10D2  3064               	movlw	100
  5551  10D3  1283               	bcf	3,5	;RP0=0, select bank0
  5552  10D4  1303               	bcf	3,6	;RP1=0, select bank0
  5553  10D5  00A6               	movwf	___awdiv@divisor
  5554  10D6  3000               	movlw	0
  5555  10D7  00A7               	movwf	___awdiv@divisor+1
  5556  10D8  1683               	bsf	3,5	;RP0=1, select bank1
  5557  10D9  1303               	bcf	3,6	;RP1=0, select bank1
  5558  10DA  0812               	movf	18,w	;volatile
  5559  10DB  1283               	bcf	3,5	;RP0=0, select bank0
  5560  10DC  1303               	bcf	3,6	;RP1=0, select bank0
  5561  10DD  00EB               	movwf	??_set_Ventilador
  5562  10DE  01EC               	clrf	??_set_Ventilador+1
  5563  10DF  086B               	movf	??_set_Ventilador,w
  5564  10E0  00A0               	movwf	___wmul@multiplier
  5565  10E1  086C               	movf	??_set_Ventilador+1,w
  5566  10E2  00A1               	movwf	___wmul@multiplier+1
  5567  10E3  086A               	movf	set_Ventilador@intensidad+1,w
  5568  10E4  00A3               	movwf	___wmul@multiplicand+1
  5569  10E5  0869               	movf	set_Ventilador@intensidad,w
  5570  10E6  00A2               	movwf	___wmul@multiplicand
  5571  10E7  160A  118A  2082  160A  118A  	fcall	___wmul
  5572  10EC  1283               	bcf	3,5	;RP0=0, select bank0
  5573  10ED  1303               	bcf	3,6	;RP1=0, select bank0
  5574  10EE  0821               	movf	?___wmul+1,w
  5575  10EF  00A9               	movwf	___awdiv@dividend+1
  5576  10F0  0820               	movf	?___wmul,w
  5577  10F1  00A8               	movwf	___awdiv@dividend
  5578  10F2  160A  118A  2274  160A  118A  	fcall	___awdiv
  5579  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  5580  10F8  1303               	bcf	3,6	;RP1=0, select bank0
  5581  10F9  0826               	movf	?___awdiv,w
  5582  10FA  0095               	movwf	21	;volatile
  5583  10FB                     l234:
  5584  10FB  0008               	return
  5585  10FC                     __end_of_set_Ventilador:
  5586                           
  5587                           	psect	text21
  5588  1F51                     __ptext21:	
  5589 ;; *************** function _set_Refrigerador *****************
  5590 ;; Defined at:
  5591 ;;		line 57 in file "actuadores.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  on              2    0[BANK0 ] int 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       2       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       2       0       0       0
  5609 ;;Total ram usage:        2 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_logica_Actuadores
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function _set_Refrigerador
  5621  1F51                     _set_Refrigerador:
  5622  1F51                     l2831:	
  5623                           ;incstack = 0
  5624                           ; Regs used in _set_Refrigerador: [wreg+status,2+status,0]
  5625                           
  5626                           
  5627                           ;actuadores.c: 59: if (on)
  5628  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  5629  1F52  1303               	bcf	3,6	;RP1=0, select bank0
  5630  1F53  0820               	movf	set_Refrigerador@on,w
  5631  1F54  0421               	iorwf	set_Refrigerador@on+1,w
  5632  1F55  1903               	btfsc	3,2
  5633  1F56  2F58               	goto	u3461
  5634  1F57  2F59               	goto	u3460
  5635  1F58                     u3461:
  5636  1F58  2F5B               	goto	l224
  5637  1F59                     u3460:
  5638  1F59                     l2833:
  5639                           
  5640                           ;actuadores.c: 60: PORTCbits.RC4 = 1;
  5641  1F59  1607               	bsf	7,4	;volatile
  5642  1F5A  2F5C               	goto	l226
  5643  1F5B                     l224:
  5644                           
  5645                           ;actuadores.c: 61: else;actuadores.c: 62: PORTCbits.RC4 = 0;
  5646  1F5B  1207               	bcf	7,4	;volatile
  5647  1F5C                     l226:
  5648  1F5C  0008               	return
  5649  1F5D                     __end_of_set_Refrigerador:
  5650                           
  5651                           	psect	text22
  5652  1F45                     __ptext22:	
  5653 ;; *************** function _set_Calefactor *****************
  5654 ;; Defined at:
  5655 ;;		line 65 in file "actuadores.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  on              2    0[BANK0 ] int 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5669 ;;      Params:         0       2       0       0       0
  5670 ;;      Locals:         0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0
  5672 ;;      Totals:         0       2       0       0       0
  5673 ;;Total ram usage:        2 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    2
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_logica_Actuadores
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function _set_Calefactor
  5685  1F45                     _set_Calefactor:
  5686  1F45                     l2835:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _set_Calefactor: [wreg+status,2+status,0]
  5689                           
  5690                           
  5691                           ;actuadores.c: 66: if (on)
  5692  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  5693  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  5694  1F47  0820               	movf	set_Calefactor@on,w
  5695  1F48  0421               	iorwf	set_Calefactor@on+1,w
  5696  1F49  1903               	btfsc	3,2
  5697  1F4A  2F4C               	goto	u3471
  5698  1F4B  2F4D               	goto	u3470
  5699  1F4C                     u3471:
  5700  1F4C  2F4F               	goto	l229
  5701  1F4D                     u3470:
  5702  1F4D                     l2837:
  5703                           
  5704                           ;actuadores.c: 67: PORTBbits.RB4 = 1;
  5705  1F4D  1606               	bsf	6,4	;volatile
  5706  1F4E  2F50               	goto	l231
  5707  1F4F                     l229:
  5708                           
  5709                           ;actuadores.c: 68: else;actuadores.c: 69: PORTBbits.RB4 = 0;
  5710  1F4F  1206               	bcf	6,4	;volatile
  5711  1F50                     l231:
  5712  1F50  0008               	return
  5713  1F51                     __end_of_set_Calefactor:
  5714                           
  5715                           	psect	text23
  5716  0020                     __ptext23:	
  5717 ;; *************** function _printf *****************
  5718 ;; Defined at:
  5719 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  f               2   75[BANK0 ] PTR const unsigned char 
  5722 ;;		 -> STR_18(35), STR_17(21), STR_16(28), STR_15(14), 
  5723 ;;		 -> STR_14(18), STR_13(32), STR_12(28), STR_11(16), 
  5724 ;;		 -> STR_10(28), STR_9(28), STR_8(19), STR_7(49), 
  5725 ;;		 -> STR_6(65), STR_5(29), STR_4(19), STR_3(15), 
  5726 ;;		 -> STR_2(28), STR_1(25), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  idx             1    9[BANK1 ] unsigned char 
  5729 ;;  tmpval          4    0        struct .
  5730 ;;  flag            2   20[BANK1 ] unsigned short 
  5731 ;;  width           2   17[BANK1 ] int 
  5732 ;;  val             2   14[BANK1 ] unsigned int 
  5733 ;;  len             2   11[BANK1 ] unsigned int 
  5734 ;;  c               1   19[BANK1 ] unsigned char 
  5735 ;;  prec            1   16[BANK1 ] char 
  5736 ;;  ap              1   13[BANK1 ] PTR void [1]
  5737 ;;		 -> ?_printf(2), 
  5738 ;;  cp              1   10[BANK1 ] PTR const unsigned char 
  5739 ;;		 -> printf@c(1), 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  2   75[BANK0 ] int 
  5742 ;; Registers used:
  5743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         0       4       0       0       0
  5750 ;;      Locals:         0       0      19       0       0
  5751 ;;      Temps:          0       0       3       0       0
  5752 ;;      Totals:         0       4      22       0       0
  5753 ;;Total ram usage:       26 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    3
  5756 ;; This function calls:
  5757 ;;		___bmul
  5758 ;;		___lwdiv
  5759 ;;		___lwmod
  5760 ;;		___wmul
  5761 ;;		_isdigit
  5762 ;;		_putch
  5763 ;; This function is called by:
  5764 ;;		_read_temperatura_interior
  5765 ;;		_read_temperatura_exterior
  5766 ;;		_read_humedad
  5767 ;;		_read_intensidad_lumninosa
  5768 ;;		_read_potenciometro
  5769 ;;		_mensajeBienvenida
  5770 ;;		_mostrarConsigna
  5771 ;;		_mostrarDatos
  5772 ;;		_logica_Actuadores
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _printf
  5779  0020                     _printf:
  5780  0020                     l2481:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5783                           
  5784                           
  5785                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 540: union {;doprnt.
      +                          c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c
      +                          : 545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;do
      +                          prnt.c: 550: *ap = __va_start();
  5786  0020  306D               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5787  0021  1683               	bsf	3,5	;RP0=1, select bank1
  5788  0022  1303               	bcf	3,6	;RP1=0, select bank1
  5789  0023  00A0               	movwf	??_printf^(0+128)
  5790  0024  0820               	movf	??_printf^(0+128),w
  5791  0025  00AD               	movwf	printf@ap^(0+128)
  5792                           
  5793                           ;doprnt.c: 553: while((c = *f++)) {
  5794  0026  2E4E               	goto	l2781
  5795  0027                     l2483:
  5796                           
  5797                           ;doprnt.c: 555: if(c != '%')
  5798  0027  3025               	movlw	37
  5799  0028  0633               	xorwf	printf@c^(0+128),w
  5800  0029  1903               	btfsc	3,2
  5801  002A  282C               	goto	u2831
  5802  002B  282D               	goto	u2830
  5803  002C                     u2831:
  5804  002C  2834               	goto	l2487
  5805  002D                     u2830:
  5806  002D                     l2485:
  5807                           
  5808                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  5809  002D  0833               	movf	printf@c^(0+128),w
  5810  002E  120A  158A  2143  120A  118A  	fcall	_putch
  5811                           
  5812                           ;doprnt.c: 559: continue;
  5813  0033  2E4E               	goto	l2781
  5814  0034                     l2487:
  5815                           
  5816                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5817  0034  01B1               	clrf	printf@width^(0+128)
  5818  0035  01B2               	clrf	(printf@width+1)^(0+128)
  5819                           
  5820                           ;doprnt.c: 565: flag = 0;
  5821  0036  01B4               	clrf	printf@flag^(0+128)
  5822  0037  01B5               	clrf	(printf@flag+1)^(0+128)
  5823  0038  2851               	goto	l2499
  5824  0039                     l457:	
  5825                           ;doprnt.c: 570: case '-':
  5826                           
  5827                           
  5828                           ;doprnt.c: 571: flag |= 0x08;
  5829  0039  1683               	bsf	3,5	;RP0=1, select bank1
  5830  003A  1303               	bcf	3,6	;RP1=0, select bank1
  5831  003B  15B4               	bsf	printf@flag^(0+128),3
  5832  003C                     l2489:
  5833                           
  5834                           ;doprnt.c: 572: f++;
  5835  003C  3001               	movlw	1
  5836  003D  1283               	bcf	3,5	;RP0=0, select bank0
  5837  003E  1303               	bcf	3,6	;RP1=0, select bank0
  5838  003F  07EB               	addwf	printf@f,f
  5839  0040  1803               	skipnc
  5840  0041  0AEC               	incf	printf@f+1,f
  5841  0042  3000               	movlw	0
  5842  0043  07EC               	addwf	printf@f+1,f
  5843                           
  5844                           ;doprnt.c: 573: continue;
  5845  0044  2851               	goto	l2499
  5846  0045                     l459:	
  5847                           ;doprnt.c: 577: case ' ':
  5848                           
  5849                           
  5850                           ;doprnt.c: 578: flag |= 0x01;
  5851  0045  1683               	bsf	3,5	;RP0=1, select bank1
  5852  0046  1303               	bcf	3,6	;RP1=0, select bank1
  5853  0047  1434               	bsf	printf@flag^(0+128),0
  5854  0048  283C               	goto	l2489
  5855  0049                     l460:	
  5856                           ;doprnt.c: 590: case '#':
  5857                           
  5858                           
  5859                           ;doprnt.c: 591: flag |= 0x800;
  5860  0049  1683               	bsf	3,5	;RP0=1, select bank1
  5861  004A  1303               	bcf	3,6	;RP1=0, select bank1
  5862  004B  15B5               	bsf	(printf@flag^(0+128)+1),3
  5863  004C  283C               	goto	l2489
  5864  004D                     l461:	
  5865                           ;doprnt.c: 596: case '0':
  5866                           
  5867                           
  5868                           ;doprnt.c: 597: flag |= 0x04;
  5869  004D  1683               	bsf	3,5	;RP0=1, select bank1
  5870  004E  1303               	bcf	3,6	;RP1=0, select bank1
  5871  004F  1534               	bsf	printf@flag^(0+128),2
  5872  0050  283C               	goto	l2489
  5873  0051                     l2499:
  5874  0051  1283               	bcf	3,5	;RP0=0, select bank0
  5875  0052  086C               	movf	printf@f+1,w
  5876  0053  00FF               	movwf	btemp+1
  5877  0054  086B               	movf	printf@f,w
  5878  0055  0084               	movwf	4
  5879  0056  120A  118A  2700  120A  118A  	fcall	stringtab
  5880                           
  5881                           ; Switch size 1, requested type "simple"
  5882                           ; Number of cases is 4, Range of values is 32 to 48
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           13     7 (average)
  5886                           ; direct_byte           62    11 (fixed)
  5887                           ; jumptable            263     9 (fixed)
  5888                           ;	Chosen strategy is simple_byte
  5889  005B  3A20               	xorlw	32	; case 32
  5890  005C  1903               	skipnz
  5891  005D  2845               	goto	l459
  5892  005E  3A03               	xorlw	3	; case 35
  5893  005F  1903               	skipnz
  5894  0060  2849               	goto	l460
  5895  0061  3A0E               	xorlw	14	; case 45
  5896  0062  1903               	skipnz
  5897  0063  2839               	goto	l457
  5898  0064  3A1D               	xorlw	29	; case 48
  5899  0065  1903               	skipnz
  5900  0066  284D               	goto	l461
  5901  0067  2868               	goto	l463
  5902  0068                     l463:
  5903                           
  5904                           ;doprnt.c: 610: if(flag & 0x08)
  5905  0068  1683               	bsf	3,5	;RP0=1, select bank1
  5906  0069  1303               	bcf	3,6	;RP1=0, select bank1
  5907  006A  1DB4               	btfss	printf@flag^(0+128),3
  5908  006B  286D               	goto	u2841
  5909  006C  286E               	goto	u2840
  5910  006D                     u2841:
  5911  006D  2872               	goto	l2503
  5912  006E                     u2840:
  5913  006E                     l2501:
  5914                           
  5915                           ;doprnt.c: 611: flag &= ~0x04;
  5916  006E  30FB               	movlw	251
  5917  006F  05B4               	andwf	printf@flag^(0+128),f
  5918  0070  30FF               	movlw	255
  5919  0071  05B5               	andwf	(printf@flag+1)^(0+128),f
  5920  0072                     l2503:
  5921                           
  5922                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5923  0072  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0073  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0074  086C               	movf	printf@f+1,w
  5926  0075  00FF               	movwf	btemp+1
  5927  0076  086B               	movf	printf@f,w
  5928  0077  0084               	movwf	4
  5929  0078  120A  118A  2700  120A  118A  	fcall	stringtab
  5930  007D  160A  158A  27BE  120A  118A  	fcall	_isdigit
  5931  0082  1C03               	btfss	3,0
  5932  0083  2885               	goto	u2851
  5933  0084  2886               	goto	u2850
  5934  0085                     u2851:
  5935  0085  28E1               	goto	l2515
  5936  0086                     u2850:
  5937  0086                     l2505:
  5938                           
  5939                           ;doprnt.c: 615: width = 0;
  5940  0086  1683               	bsf	3,5	;RP0=1, select bank1
  5941  0087  1303               	bcf	3,6	;RP1=0, select bank1
  5942  0088  01B1               	clrf	printf@width^(0+128)
  5943  0089  01B2               	clrf	(printf@width+1)^(0+128)
  5944  008A                     l2507:
  5945                           
  5946                           ;doprnt.c: 617: width *= 10;
  5947  008A  300A               	movlw	10
  5948  008B  1283               	bcf	3,5	;RP0=0, select bank0
  5949  008C  1303               	bcf	3,6	;RP1=0, select bank0
  5950  008D  00A0               	movwf	___wmul@multiplier
  5951  008E  3000               	movlw	0
  5952  008F  00A1               	movwf	___wmul@multiplier+1
  5953  0090  1683               	bsf	3,5	;RP0=1, select bank1
  5954  0091  1303               	bcf	3,6	;RP1=0, select bank1
  5955  0092  0832               	movf	(printf@width+1)^(0+128),w
  5956  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5957  0094  1303               	bcf	3,6	;RP1=0, select bank0
  5958  0095  00A3               	movwf	___wmul@multiplicand+1
  5959  0096  1683               	bsf	3,5	;RP0=1, select bank1
  5960  0097  1303               	bcf	3,6	;RP1=0, select bank1
  5961  0098  0831               	movf	printf@width^(0+128),w
  5962  0099  1283               	bcf	3,5	;RP0=0, select bank0
  5963  009A  1303               	bcf	3,6	;RP1=0, select bank0
  5964  009B  00A2               	movwf	___wmul@multiplicand
  5965  009C  160A  118A  2082  120A  118A  	fcall	___wmul
  5966  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5967  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5968  00A3  0821               	movf	?___wmul+1,w
  5969  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  5970  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  5971  00A6  00B2               	movwf	(printf@width+1)^(0+128)
  5972  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  5973  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  5974  00A9  0820               	movf	?___wmul,w
  5975  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  5976  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  5977  00AC  00B1               	movwf	printf@width^(0+128)
  5978  00AD                     l2509:
  5979                           
  5980                           ;doprnt.c: 618: width += *f++ - '0';
  5981  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  5982  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  5983  00AF  086C               	movf	printf@f+1,w
  5984  00B0  00FF               	movwf	btemp+1
  5985  00B1  086B               	movf	printf@f,w
  5986  00B2  0084               	movwf	4
  5987  00B3  120A  118A  2700  120A  118A  	fcall	stringtab
  5988  00B8  3ED0               	addlw	208
  5989  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5990  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  5991  00BB  00A0               	movwf	??_printf^(0+128)
  5992  00BC  30FF               	movlw	255
  5993  00BD  1803               	skipnc
  5994  00BE  3000               	movlw	0
  5995  00BF  00A1               	movwf	(??_printf^(0+128)+1)
  5996  00C0  0820               	movf	??_printf^(0+128),w
  5997  00C1  07B1               	addwf	printf@width^(0+128),f
  5998  00C2  1803               	skipnc
  5999  00C3  0AB2               	incf	(printf@width+1)^(0+128),f
  6000  00C4  0821               	movf	(??_printf+1)^(0+128),w
  6001  00C5  07B2               	addwf	(printf@width+1)^(0+128),f
  6002  00C6                     l2511:
  6003  00C6  3001               	movlw	1
  6004  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  6005  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  6006  00C9  07EB               	addwf	printf@f,f
  6007  00CA  1803               	skipnc
  6008  00CB  0AEC               	incf	printf@f+1,f
  6009  00CC  3000               	movlw	0
  6010  00CD  07EC               	addwf	printf@f+1,f
  6011  00CE                     l2513:
  6012                           
  6013                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  6014  00CE  086C               	movf	printf@f+1,w
  6015  00CF  00FF               	movwf	btemp+1
  6016  00D0  086B               	movf	printf@f,w
  6017  00D1  0084               	movwf	4
  6018  00D2  120A  118A  2700  120A  118A  	fcall	stringtab
  6019  00D7  160A  158A  27BE  120A  118A  	fcall	_isdigit
  6020  00DC  1803               	btfsc	3,0
  6021  00DD  28DF               	goto	u2861
  6022  00DE  28E0               	goto	u2860
  6023  00DF                     u2861:
  6024  00DF  288A               	goto	l2507
  6025  00E0                     u2860:
  6026  00E0  2907               	goto	l2523
  6027  00E1                     l2515:
  6028  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  6029  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  6030  00E3  086C               	movf	printf@f+1,w
  6031  00E4  00FF               	movwf	btemp+1
  6032  00E5  086B               	movf	printf@f,w
  6033  00E6  0084               	movwf	4
  6034  00E7  120A  118A  2700  120A  118A  	fcall	stringtab
  6035  00EC  3A2A               	xorlw	42
  6036  00ED  1D03               	skipz
  6037  00EE  28F0               	goto	u2871
  6038  00EF  28F1               	goto	u2870
  6039  00F0                     u2871:
  6040  00F0  2907               	goto	l2523
  6041  00F1                     u2870:
  6042  00F1                     l2517:
  6043                           
  6044                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  6045  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  6046  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  6047  00F3  082D               	movf	printf@ap^(0+128),w
  6048  00F4  0084               	movwf	4
  6049  00F5  1383               	bcf	3,7	;select IRP bank0
  6050  00F6  0800               	movf	0,w
  6051  00F7  00B1               	movwf	printf@width^(0+128)
  6052  00F8  0A84               	incf	4,f
  6053  00F9  0800               	movf	0,w
  6054  00FA  00B2               	movwf	(printf@width+1)^(0+128)
  6055  00FB                     l2519:
  6056  00FB  3002               	movlw	2
  6057  00FC  00A0               	movwf	??_printf^(0+128)
  6058  00FD  0820               	movf	??_printf^(0+128),w
  6059  00FE  07AD               	addwf	printf@ap^(0+128),f
  6060  00FF                     l2521:
  6061                           
  6062                           ;doprnt.c: 623: f++;
  6063  00FF  3001               	movlw	1
  6064  0100  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0101  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0102  07EB               	addwf	printf@f,f
  6067  0103  1803               	skipnc
  6068  0104  0AEC               	incf	printf@f+1,f
  6069  0105  3000               	movlw	0
  6070  0106  07EC               	addwf	printf@f+1,f
  6071  0107                     l2523:
  6072                           
  6073                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  6074  0107  1283               	bcf	3,5	;RP0=0, select bank0
  6075  0108  1303               	bcf	3,6	;RP1=0, select bank0
  6076  0109  086C               	movf	printf@f+1,w
  6077  010A  00FF               	movwf	btemp+1
  6078  010B  086B               	movf	printf@f,w
  6079  010C  0084               	movwf	4
  6080  010D  120A  118A  2700  120A  118A  	fcall	stringtab
  6081  0112  3A2E               	xorlw	46
  6082  0113  1D03               	skipz
  6083  0114  2916               	goto	u2881
  6084  0115  2917               	goto	u2880
  6085  0116                     u2881:
  6086  0116  2993               	goto	l2553
  6087  0117                     u2880:
  6088  0117                     l2525:
  6089                           
  6090                           ;doprnt.c: 629: flag |= 0x4000;
  6091  0117  1683               	bsf	3,5	;RP0=1, select bank1
  6092  0118  1303               	bcf	3,6	;RP1=0, select bank1
  6093  0119  1735               	bsf	(printf@flag^(0+128)+1),6
  6094  011A                     l2527:
  6095                           
  6096                           ;doprnt.c: 630: f++;
  6097  011A  3001               	movlw	1
  6098  011B  1283               	bcf	3,5	;RP0=0, select bank0
  6099  011C  1303               	bcf	3,6	;RP1=0, select bank0
  6100  011D  07EB               	addwf	printf@f,f
  6101  011E  1803               	skipnc
  6102  011F  0AEC               	incf	printf@f+1,f
  6103  0120  3000               	movlw	0
  6104  0121  07EC               	addwf	printf@f+1,f
  6105  0122                     l2529:
  6106                           
  6107                           ;doprnt.c: 632: if(*f == '*') {
  6108  0122  086C               	movf	printf@f+1,w
  6109  0123  00FF               	movwf	btemp+1
  6110  0124  086B               	movf	printf@f,w
  6111  0125  0084               	movwf	4
  6112  0126  120A  118A  2700  120A  118A  	fcall	stringtab
  6113  012B  3A2A               	xorlw	42
  6114  012C  1D03               	skipz
  6115  012D  292F               	goto	u2891
  6116  012E  2930               	goto	u2890
  6117  012F                     u2891:
  6118  012F  294F               	goto	l2543
  6119  0130                     u2890:
  6120  0130                     l2531:
  6121                           
  6122                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  6123  0130  1683               	bsf	3,5	;RP0=1, select bank1
  6124  0131  1303               	bcf	3,6	;RP1=0, select bank1
  6125  0132  082D               	movf	printf@ap^(0+128),w
  6126  0133  0084               	movwf	4
  6127  0134  1383               	bcf	3,7	;select IRP bank0
  6128  0135  0800               	movf	0,w
  6129  0136  00A0               	movwf	??_printf^(0+128)
  6130  0137  0820               	movf	??_printf^(0+128),w
  6131  0138  00B0               	movwf	printf@prec^(0+128)
  6132  0139                     l2533:
  6133  0139  3002               	movlw	2
  6134  013A  00A0               	movwf	??_printf^(0+128)
  6135  013B  0820               	movf	??_printf^(0+128),w
  6136  013C  07AD               	addwf	printf@ap^(0+128),f
  6137  013D                     l2535:
  6138                           
  6139                           ;doprnt.c: 634: if (prec < 0) {
  6140  013D  1FB0               	btfss	printf@prec^(0+128),7
  6141  013E  2940               	goto	u2901
  6142  013F  2941               	goto	u2900
  6143  0140                     u2901:
  6144  0140  2946               	goto	l2541
  6145  0141                     u2900:
  6146  0141                     l2537:
  6147                           
  6148                           ;doprnt.c: 635: prec = 0;
  6149  0141  01B0               	clrf	printf@prec^(0+128)
  6150  0142                     l2539:
  6151                           
  6152                           ;doprnt.c: 636: flag &= ~0x4000;
  6153  0142  30FF               	movlw	255
  6154  0143  05B4               	andwf	printf@flag^(0+128),f
  6155  0144  30BF               	movlw	191
  6156  0145  05B5               	andwf	(printf@flag+1)^(0+128),f
  6157  0146                     l2541:
  6158                           
  6159                           ;doprnt.c: 640: };doprnt.c: 641: f++;
  6160  0146  3001               	movlw	1
  6161  0147  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0148  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0149  07EB               	addwf	printf@f,f
  6164  014A  1803               	skipnc
  6165  014B  0AEC               	incf	printf@f+1,f
  6166  014C  3000               	movlw	0
  6167  014D  07EC               	addwf	printf@f+1,f
  6168                           
  6169                           ;doprnt.c: 642: } else
  6170  014E  2A40               	goto	l2597
  6171  014F                     l2543:
  6172                           
  6173                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  6174  014F  1683               	bsf	3,5	;RP0=1, select bank1
  6175  0150  1303               	bcf	3,6	;RP1=0, select bank1
  6176  0151  01B0               	clrf	printf@prec^(0+128)
  6177                           
  6178                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  6179  0152  297F               	goto	l2551
  6180  0153                     l2545:
  6181                           
  6182                           ;doprnt.c: 647: prec *= 10;
  6183  0153  1683               	bsf	3,5	;RP0=1, select bank1
  6184  0154  1303               	bcf	3,6	;RP1=0, select bank1
  6185  0155  0830               	movf	printf@prec^(0+128),w
  6186  0156  00A0               	movwf	??_printf^(0+128)
  6187  0157  0820               	movf	??_printf^(0+128),w
  6188  0158  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0159  1303               	bcf	3,6	;RP1=0, select bank0
  6190  015A  00A0               	movwf	___bmul@multiplicand
  6191  015B  300A               	movlw	10
  6192  015C  160A  158A  27D2  120A  118A  	fcall	___bmul
  6193  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6194  0162  1303               	bcf	3,6	;RP1=0, select bank1
  6195  0163  00A1               	movwf	(??_printf+1)^(0+128)
  6196  0164  0821               	movf	(??_printf+1)^(0+128),w
  6197  0165  00B0               	movwf	printf@prec^(0+128)
  6198  0166                     l2547:
  6199                           
  6200                           ;doprnt.c: 648: prec += *f++ - '0';
  6201  0166  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0167  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0168  086C               	movf	printf@f+1,w
  6204  0169  00FF               	movwf	btemp+1
  6205  016A  086B               	movf	printf@f,w
  6206  016B  0084               	movwf	4
  6207  016C  120A  118A  2700  120A  118A  	fcall	stringtab
  6208  0171  3ED0               	addlw	-48
  6209  0172  1683               	bsf	3,5	;RP0=1, select bank1
  6210  0173  1303               	bcf	3,6	;RP1=0, select bank1
  6211  0174  00A0               	movwf	??_printf^(0+128)
  6212  0175  0820               	movf	??_printf^(0+128),w
  6213  0176  07B0               	addwf	printf@prec^(0+128),f
  6214  0177                     l2549:
  6215  0177  3001               	movlw	1
  6216  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6217  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6218  017A  07EB               	addwf	printf@f,f
  6219  017B  1803               	skipnc
  6220  017C  0AEC               	incf	printf@f+1,f
  6221  017D  3000               	movlw	0
  6222  017E  07EC               	addwf	printf@f+1,f
  6223  017F                     l2551:
  6224  017F  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0180  086C               	movf	printf@f+1,w
  6226  0181  00FF               	movwf	btemp+1
  6227  0182  086B               	movf	printf@f,w
  6228  0183  0084               	movwf	4
  6229  0184  120A  118A  2700  120A  118A  	fcall	stringtab
  6230  0189  160A  158A  27BE  120A  118A  	fcall	_isdigit
  6231  018E  1803               	btfsc	3,0
  6232  018F  2991               	goto	u2911
  6233  0190  2992               	goto	u2910
  6234  0191                     u2911:
  6235  0191  2953               	goto	l2545
  6236  0192                     u2910:
  6237  0192  2A40               	goto	l2597
  6238  0193                     l2553:
  6239                           
  6240                           ;doprnt.c: 652: prec = 0;
  6241  0193  1683               	bsf	3,5	;RP0=1, select bank1
  6242  0194  1303               	bcf	3,6	;RP1=0, select bank1
  6243  0195  01B0               	clrf	printf@prec^(0+128)
  6244  0196  2A40               	goto	l2597
  6245  0197                     l481:	
  6246                           ;doprnt.c: 715: case 'o':
  6247                           
  6248                           
  6249                           ;doprnt.c: 717: flag |= 0x40;
  6250  0197  1734               	bsf	printf@flag^(0+128),6
  6251                           
  6252                           ;doprnt.c: 719: break;
  6253  0198  2A7E               	goto	l2599
  6254  0199                     l485:	
  6255                           ;doprnt.c: 738: case 'X':
  6256                           
  6257                           
  6258                           ;doprnt.c: 740: flag |= 0x20;
  6259  0199  16B4               	bsf	printf@flag^(0+128),5
  6260  019A                     l486:	
  6261                           ;doprnt.c: 744: case 'x':
  6262                           
  6263                           
  6264                           ;doprnt.c: 747: flag |= 0x80;
  6265  019A  17B4               	bsf	printf@flag^(0+128),7
  6266                           
  6267                           ;doprnt.c: 749: break;
  6268  019B  2A7E               	goto	l2599
  6269  019C                     l2555:
  6270                           
  6271                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  6272  019C  0830               	movf	printf@prec^(0+128),w
  6273  019D  1903               	btfsc	3,2
  6274  019E  29A0               	goto	u2921
  6275  019F  29A1               	goto	u2920
  6276  01A0                     u2921:
  6277  01A0  29BD               	goto	l488
  6278  01A1                     u2920:
  6279  01A1                     l2557:
  6280  01A1  0830               	movf	printf@prec^(0+128),w
  6281  01A2  00A0               	movwf	??_printf^(0+128)
  6282  01A3  01A1               	clrf	(??_printf^(0+128)+1)
  6283  01A4  1BA0               	btfsc	??_printf^(0+128),7
  6284  01A5  03A1               	decf	(??_printf^(0+128)+1),f
  6285  01A6  0821               	movf	(??_printf+1)^(0+128),w
  6286  01A7  3A80               	xorlw	128
  6287  01A8  00A2               	movwf	(??_printf+2)^(0+128)
  6288  01A9  082C               	movf	(printf@len+1)^(0+128),w
  6289  01AA  3A80               	xorlw	128
  6290  01AB  0222               	subwf	(??_printf+2)^(0+128),w
  6291  01AC  1D03               	skipz
  6292  01AD  29B0               	goto	u2935
  6293  01AE  082B               	movf	printf@len^(0+128),w
  6294  01AF  0220               	subwf	??_printf^(0+128),w
  6295  01B0                     u2935:
  6296  01B0  1803               	skipnc
  6297  01B1  29B3               	goto	u2931
  6298  01B2  29B4               	goto	u2930
  6299  01B3                     u2931:
  6300  01B3  29BD               	goto	l488
  6301  01B4                     u2930:
  6302  01B4                     l2559:
  6303                           
  6304                           ;doprnt.c: 780: len = (unsigned char)prec;
  6305  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  6306  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  6307  01B6  0830               	movf	printf@prec^(0+128),w
  6308  01B7  00A0               	movwf	??_printf^(0+128)
  6309  01B8  01A1               	clrf	(??_printf^(0+128)+1)
  6310  01B9  0820               	movf	??_printf^(0+128),w
  6311  01BA  00AB               	movwf	printf@len^(0+128)
  6312  01BB  0821               	movf	(??_printf+1)^(0+128),w
  6313  01BC  00AC               	movwf	(printf@len+1)^(0+128)
  6314  01BD                     l488:
  6315                           
  6316                           ;doprnt.c: 783: if(((unsigned)width) > len)
  6317  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  6318  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  6319  01BF  0832               	movf	(printf@width+1)^(0+128),w
  6320  01C0  022C               	subwf	(printf@len+1)^(0+128),w
  6321  01C1  1D03               	skipz
  6322  01C2  29C5               	goto	u2945
  6323  01C3  0831               	movf	printf@width^(0+128),w
  6324  01C4  022B               	subwf	printf@len^(0+128),w
  6325  01C5                     u2945:
  6326  01C5  1803               	skipnc
  6327  01C6  29C8               	goto	u2941
  6328  01C7  29C9               	goto	u2940
  6329  01C8                     u2941:
  6330  01C8  29D0               	goto	l2563
  6331  01C9                     u2940:
  6332  01C9                     l2561:
  6333                           
  6334                           ;doprnt.c: 784: width -= len;
  6335  01C9  082B               	movf	printf@len^(0+128),w
  6336  01CA  02B1               	subwf	printf@width^(0+128),f
  6337  01CB  082C               	movf	(printf@len+1)^(0+128),w
  6338  01CC  1C03               	skipc
  6339  01CD  03B2               	decf	(printf@width+1)^(0+128),f
  6340  01CE  02B2               	subwf	(printf@width+1)^(0+128),f
  6341  01CF  29D2               	goto	l2565
  6342  01D0                     l2563:
  6343                           
  6344                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  6345  01D0  01B1               	clrf	printf@width^(0+128)
  6346  01D1  01B2               	clrf	(printf@width+1)^(0+128)
  6347  01D2                     l2565:
  6348                           
  6349                           ;doprnt.c: 788: if(!(flag & 0x08))
  6350  01D2  19B4               	btfsc	printf@flag^(0+128),3
  6351  01D3  29D5               	goto	u2951
  6352  01D4  29D6               	goto	u2950
  6353  01D5                     u2951:
  6354  01D5  29FD               	goto	l2577
  6355  01D6                     u2950:
  6356  01D6  29DD               	goto	l2571
  6357  01D7                     l2569:
  6358                           
  6359                           ;doprnt.c: 791: (putch(' ') );
  6360  01D7  3020               	movlw	32
  6361  01D8  120A  158A  2143  120A  118A  	fcall	_putch
  6362  01DD                     l2571:
  6363  01DD  30FF               	movlw	255
  6364  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  6365  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  6366  01E0  07B1               	addwf	printf@width^(0+128),f
  6367  01E1  1803               	skipnc
  6368  01E2  0AB2               	incf	(printf@width+1)^(0+128),f
  6369  01E3  30FF               	movlw	255
  6370  01E4  07B2               	addwf	(printf@width+1)^(0+128),f
  6371  01E5  0A31               	incf	printf@width^(0+128),w
  6372  01E6  1D03               	skipz
  6373  01E7  29EC               	goto	u2961
  6374  01E8  0A32               	incf	(printf@width+1)^(0+128),w
  6375  01E9  1D03               	btfss	3,2
  6376  01EA  29EC               	goto	u2961
  6377  01EB  29ED               	goto	u2960
  6378  01EC                     u2961:
  6379  01EC  29D7               	goto	l2569
  6380  01ED                     u2960:
  6381  01ED  29FD               	goto	l2577
  6382  01EE                     l2573:
  6383                           
  6384                           ;doprnt.c: 794: (putch(*cp++) );
  6385  01EE  082A               	movf	printf@cp^(0+128),w
  6386  01EF  0084               	movwf	4
  6387  01F0  1383               	bcf	3,7	;select IRP bank0
  6388  01F1  0800               	movf	0,w
  6389  01F2  120A  158A  2143  120A  118A  	fcall	_putch
  6390  01F7                     l2575:
  6391  01F7  3001               	movlw	1
  6392  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  6393  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  6394  01FA  00A0               	movwf	??_printf^(0+128)
  6395  01FB  0820               	movf	??_printf^(0+128),w
  6396  01FC  07AA               	addwf	printf@cp^(0+128),f
  6397  01FD                     l2577:
  6398  01FD  3001               	movlw	1
  6399  01FE  02AB               	subwf	printf@len^(0+128),f
  6400  01FF  3000               	movlw	0
  6401  0200  1C03               	skipc
  6402  0201  03AC               	decf	(printf@len+1)^(0+128),f
  6403  0202  02AC               	subwf	(printf@len+1)^(0+128),f
  6404  0203  0A2B               	incf	printf@len^(0+128),w
  6405  0204  1D03               	skipz
  6406  0205  2A0A               	goto	u2971
  6407  0206  0A2C               	incf	(printf@len+1)^(0+128),w
  6408  0207  1D03               	btfss	3,2
  6409  0208  2A0A               	goto	u2971
  6410  0209  2A0B               	goto	u2970
  6411  020A                     u2971:
  6412  020A  29EE               	goto	l2573
  6413  020B                     u2970:
  6414  020B                     l497:
  6415                           
  6416                           ;doprnt.c: 796: if(flag & 0x08)
  6417  020B  1DB4               	btfss	printf@flag^(0+128),3
  6418  020C  2A0E               	goto	u2981
  6419  020D  2A0F               	goto	u2980
  6420  020E                     u2981:
  6421  020E  2E4E               	goto	l2781
  6422  020F                     u2980:
  6423  020F  2A16               	goto	l2583
  6424  0210                     l2581:
  6425                           
  6426                           ;doprnt.c: 798: (putch(' ') );
  6427  0210  3020               	movlw	32
  6428  0211  120A  158A  2143  120A  118A  	fcall	_putch
  6429  0216                     l2583:
  6430  0216  30FF               	movlw	255
  6431  0217  1683               	bsf	3,5	;RP0=1, select bank1
  6432  0218  1303               	bcf	3,6	;RP1=0, select bank1
  6433  0219  07B1               	addwf	printf@width^(0+128),f
  6434  021A  1803               	skipnc
  6435  021B  0AB2               	incf	(printf@width+1)^(0+128),f
  6436  021C  30FF               	movlw	255
  6437  021D  07B2               	addwf	(printf@width+1)^(0+128),f
  6438  021E  0A31               	incf	printf@width^(0+128),w
  6439  021F  1D03               	skipz
  6440  0220  2A25               	goto	u2991
  6441  0221  0A32               	incf	(printf@width+1)^(0+128),w
  6442  0222  1D03               	btfss	3,2
  6443  0223  2A25               	goto	u2991
  6444  0224  2A26               	goto	u2990
  6445  0225                     u2991:
  6446  0225  2A10               	goto	l2581
  6447  0226                     u2990:
  6448  0226  2E4E               	goto	l2781
  6449  0227                     l2585:
  6450                           
  6451                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  6452  0227  082D               	movf	printf@ap^(0+128),w
  6453  0228  0084               	movwf	4
  6454  0229  1383               	bcf	3,7	;select IRP bank0
  6455  022A  0800               	movf	0,w
  6456  022B  00A0               	movwf	??_printf^(0+128)
  6457  022C  0820               	movf	??_printf^(0+128),w
  6458  022D  00B3               	movwf	printf@c^(0+128)
  6459  022E                     l2587:
  6460  022E  3002               	movlw	2
  6461  022F  00A0               	movwf	??_printf^(0+128)
  6462  0230  0820               	movf	??_printf^(0+128),w
  6463  0231  07AD               	addwf	printf@ap^(0+128),f
  6464  0232                     l2589:
  6465                           
  6466                           ;doprnt.c: 831: cp = (char *)&c;
  6467  0232  30B3               	movlw	(low (printf@c| 0))& (0+255)
  6468  0233  00A0               	movwf	??_printf^(0+128)
  6469  0234  0820               	movf	??_printf^(0+128),w
  6470  0235  00AA               	movwf	printf@cp^(0+128)
  6471  0236                     l2591:
  6472                           
  6473                           ;doprnt.c: 832: len = 1;
  6474  0236  3001               	movlw	1
  6475  0237  00AB               	movwf	printf@len^(0+128)
  6476  0238  3000               	movlw	0
  6477  0239  00AC               	movwf	(printf@len^(0+128)+1)
  6478                           
  6479                           ;doprnt.c: 833: goto dostring;
  6480  023A  299C               	goto	l2555
  6481  023B                     l2593:
  6482                           
  6483                           ;doprnt.c: 844: flag |= 0xC0;
  6484  023B  30C0               	movlw	192
  6485  023C  04B4               	iorwf	printf@flag^(0+128),f
  6486  023D  3000               	movlw	0
  6487  023E  04B5               	iorwf	(printf@flag+1)^(0+128),f
  6488                           
  6489                           ;doprnt.c: 845: break;
  6490  023F  2A7E               	goto	l2599
  6491  0240                     l2597:
  6492  0240  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0241  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0242  086C               	movf	printf@f+1,w
  6495  0243  1683               	bsf	3,5	;RP0=1, select bank1
  6496  0244  1303               	bcf	3,6	;RP1=0, select bank1
  6497  0245  00A1               	movwf	(??_printf^(0+128)+1)
  6498  0246  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0247  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0248  086B               	movf	printf@f,w
  6501  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6502  024A  1303               	bcf	3,6	;RP1=0, select bank1
  6503  024B  00A0               	movwf	??_printf^(0+128)
  6504  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6505  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6506  024E  0AEB               	incf	printf@f,f
  6507  024F  1903               	skipnz
  6508  0250  0AEC               	incf	printf@f+1,f
  6509  0251  1683               	bsf	3,5	;RP0=1, select bank1
  6510  0252  1303               	bcf	3,6	;RP1=0, select bank1
  6511  0253  0821               	movf	(??_printf+1)^(0+128),w
  6512  0254  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0255  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0256  00FF               	movwf	btemp+1
  6515  0257  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0258  1303               	bcf	3,6	;RP1=0, select bank1
  6517  0259  0820               	movf	??_printf^(0+128),w
  6518  025A  0084               	movwf	4
  6519  025B  1283               	bcf	3,5	;RP0=0, select bank0
  6520  025C  1303               	bcf	3,6	;RP1=0, select bank0
  6521  025D  120A  118A  2700  120A  118A  	fcall	stringtab
  6522  0262  1683               	bsf	3,5	;RP0=1, select bank1
  6523  0263  1303               	bcf	3,6	;RP1=0, select bank1
  6524  0264  00B3               	movwf	printf@c^(0+128)
  6525                           
  6526                           ; Switch size 1, requested type "simple"
  6527                           ; Number of cases is 8, Range of values is 0 to 120
  6528                           ; switch strategies available:
  6529                           ; Name         Instructions Cycles
  6530                           ; simple_byte           25    13 (average)
  6531                           ; jumptable            260     6 (fixed)
  6532                           ;	Chosen strategy is simple_byte
  6533  0265  3A00               	xorlw	0	; case 0
  6534  0266  1903               	skipnz
  6535  0267  2E7A               	goto	l583
  6536  0268  3A58               	xorlw	88	; case 88
  6537  0269  1903               	skipnz
  6538  026A  2999               	goto	l485
  6539  026B  3A3B               	xorlw	59	; case 99
  6540  026C  1903               	skipnz
  6541  026D  2A27               	goto	l2585
  6542  026E  3A07               	xorlw	7	; case 100
  6543  026F  1903               	skipnz
  6544  0270  2A7E               	goto	l2599
  6545  0271  3A0D               	xorlw	13	; case 105
  6546  0272  1903               	skipnz
  6547  0273  2A7E               	goto	l2599
  6548  0274  3A06               	xorlw	6	; case 111
  6549  0275  1903               	skipnz
  6550  0276  2997               	goto	l481
  6551  0277  3A1A               	xorlw	26	; case 117
  6552  0278  1903               	skipnz
  6553  0279  2A3B               	goto	l2593
  6554  027A  3A0D               	xorlw	13	; case 120
  6555  027B  1903               	skipnz
  6556  027C  299A               	goto	l486
  6557  027D  2A32               	goto	l2589
  6558  027E                     l2599:
  6559                           
  6560                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
  6561  027E  30C0               	movlw	192
  6562  027F  0534               	andwf	printf@flag^(0+128),w
  6563  0280  00A0               	movwf	??_printf^(0+128)
  6564  0281  3000               	movlw	0
  6565  0282  0535               	andwf	(printf@flag+1)^(0+128),w
  6566  0283  00A1               	movwf	(??_printf+1)^(0+128)
  6567  0284  0820               	movf	??_printf^(0+128),w
  6568  0285  0421               	iorwf	(??_printf^(0+128)+1),w
  6569  0286  1D03               	btfss	3,2
  6570  0287  2A89               	goto	u3001
  6571  0288  2A8A               	goto	u3000
  6572  0289                     u3001:
  6573  0289  2AA4               	goto	l2611
  6574  028A                     u3000:
  6575  028A                     l2601:
  6576                           
  6577                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  6578  028A  082D               	movf	printf@ap^(0+128),w
  6579  028B  0084               	movwf	4
  6580  028C  1383               	bcf	3,7	;select IRP bank0
  6581  028D  0800               	movf	0,w
  6582  028E  00AE               	movwf	printf@val^(0+128)
  6583  028F  0A84               	incf	4,f
  6584  0290  0800               	movf	0,w
  6585  0291  00AF               	movwf	(printf@val+1)^(0+128)
  6586  0292                     l2603:
  6587  0292  3002               	movlw	2
  6588  0293  00A0               	movwf	??_printf^(0+128)
  6589  0294  0820               	movf	??_printf^(0+128),w
  6590  0295  07AD               	addwf	printf@ap^(0+128),f
  6591  0296                     l2605:
  6592                           
  6593                           ;doprnt.c: 1287: if((int)val < 0) {
  6594  0296  1FAF               	btfss	(printf@val+1)^(0+128),7
  6595  0297  2A99               	goto	u3011
  6596  0298  2A9A               	goto	u3010
  6597  0299                     u3011:
  6598  0299  2AB0               	goto	l2615
  6599  029A                     u3010:
  6600  029A                     l2607:
  6601                           
  6602                           ;doprnt.c: 1288: flag |= 0x03;
  6603  029A  3003               	movlw	3
  6604  029B  04B4               	iorwf	printf@flag^(0+128),f
  6605  029C  3000               	movlw	0
  6606  029D  04B5               	iorwf	(printf@flag+1)^(0+128),f
  6607  029E                     l2609:
  6608                           
  6609                           ;doprnt.c: 1289: val = -val;
  6610  029E  09AE               	comf	printf@val^(0+128),f
  6611  029F  09AF               	comf	(printf@val+1)^(0+128),f
  6612  02A0  0AAE               	incf	printf@val^(0+128),f
  6613  02A1  1903               	skipnz
  6614  02A2  0AAF               	incf	(printf@val+1)^(0+128),f
  6615  02A3  2AB0               	goto	l2615
  6616  02A4                     l2611:
  6617                           
  6618                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  6619  02A4  082D               	movf	printf@ap^(0+128),w
  6620  02A5  0084               	movwf	4
  6621  02A6  1383               	bcf	3,7	;select IRP bank0
  6622  02A7  0800               	movf	0,w
  6623  02A8  00AE               	movwf	printf@val^(0+128)
  6624  02A9  0A84               	incf	4,f
  6625  02AA  0800               	movf	0,w
  6626  02AB  00AF               	movwf	(printf@val+1)^(0+128)
  6627  02AC                     l2613:
  6628  02AC  3002               	movlw	2
  6629  02AD  00A0               	movwf	??_printf^(0+128)
  6630  02AE  0820               	movf	??_printf^(0+128),w
  6631  02AF  07AD               	addwf	printf@ap^(0+128),f
  6632  02B0                     l2615:
  6633                           
  6634                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  6635  02B0  0830               	movf	printf@prec^(0+128),w
  6636  02B1  1D03               	btfss	3,2
  6637  02B2  2AB4               	goto	u3021
  6638  02B3  2AB5               	goto	u3020
  6639  02B4                     u3021:
  6640  02B4  2B74               	goto	l2653
  6641  02B5                     u3020:
  6642  02B5                     l2617:
  6643  02B5  082E               	movf	printf@val^(0+128),w
  6644  02B6  042F               	iorwf	(printf@val+1)^(0+128),w
  6645  02B7  1D03               	btfss	3,2
  6646  02B8  2ABA               	goto	u3031
  6647  02B9  2ABB               	goto	u3030
  6648  02BA                     u3031:
  6649  02BA  2B74               	goto	l2653
  6650  02BB                     u3030:
  6651  02BB                     l2619:
  6652                           
  6653                           ;doprnt.c: 1317: prec++;
  6654  02BB  3001               	movlw	1
  6655  02BC  00A0               	movwf	??_printf^(0+128)
  6656  02BD  0820               	movf	??_printf^(0+128),w
  6657  02BE  07B0               	addwf	printf@prec^(0+128),f
  6658  02BF  2B74               	goto	l2653
  6659  02C0                     l511:
  6660                           
  6661                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  6662  02C0  01B3               	clrf	printf@c^(0+128)
  6663  02C1  0AB3               	incf	printf@c^(0+128),f
  6664  02C2                     l2621:
  6665  02C2  3005               	movlw	5
  6666  02C3  0633               	xorwf	printf@c^(0+128),w
  6667  02C4  1D03               	btfss	3,2
  6668  02C5  2AC7               	goto	u3041
  6669  02C6  2AC8               	goto	u3040
  6670  02C7                     u3041:
  6671  02C7  2AC9               	goto	l2625
  6672  02C8                     u3040:
  6673  02C8  2B83               	goto	l2655
  6674  02C9                     l2625:
  6675                           
  6676                           ;doprnt.c: 1332: if(val < dpowers[c])
  6677  02C9  0833               	movf	printf@c^(0+128),w
  6678  02CA  00A0               	movwf	??_printf^(0+128)
  6679  02CB  0720               	addwf	??_printf^(0+128),w
  6680  02CC  3E1E               	addlw	low (_dpowers| (0+32768))
  6681  02CD  0084               	movwf	4
  6682  02CE  3087               	movlw	high (_dpowers| (0+32768))
  6683  02CF  1803               	skipnc
  6684  02D0  3E01               	addlw	1
  6685  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  6686  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  6687  02D3  00FF               	movwf	btemp+1
  6688  02D4  120A  118A  2700  120A  118A  	fcall	stringtab
  6689  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6690  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6691  02DB  00A1               	movwf	(??_printf+1)^(0+128)
  6692  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6693  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6694  02DE  120A  118A  2700  120A  118A  	fcall	stringtab
  6695  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  6696  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  6697  02E5  00A2               	movwf	((??_printf+1)^(0+128)+1)
  6698  02E6  0822               	movf	(??_printf+2)^(0+128),w
  6699  02E7  022F               	subwf	(printf@val+1)^(0+128),w
  6700  02E8  1D03               	skipz
  6701  02E9  2AEC               	goto	u3055
  6702  02EA  0821               	movf	(??_printf+1)^(0+128),w
  6703  02EB  022E               	subwf	printf@val^(0+128),w
  6704  02EC                     u3055:
  6705  02EC  1803               	skipnc
  6706  02ED  2AEF               	goto	u3051
  6707  02EE  2AF0               	goto	u3050
  6708  02EF                     u3051:
  6709  02EF  2AF1               	goto	l2629
  6710  02F0                     u3050:
  6711  02F0  2B83               	goto	l2655
  6712  02F1                     l2629:
  6713  02F1  3001               	movlw	1
  6714  02F2  00A0               	movwf	??_printf^(0+128)
  6715  02F3  0820               	movf	??_printf^(0+128),w
  6716  02F4  07B3               	addwf	printf@c^(0+128),f
  6717  02F5  3005               	movlw	5
  6718  02F6  0633               	xorwf	printf@c^(0+128),w
  6719  02F7  1D03               	btfss	3,2
  6720  02F8  2AFA               	goto	u3061
  6721  02F9  2AFB               	goto	u3060
  6722  02FA                     u3061:
  6723  02FA  2AC9               	goto	l2625
  6724  02FB                     u3060:
  6725  02FB  2B83               	goto	l2655
  6726  02FC                     l516:	
  6727                           ;doprnt.c: 1340: case 0x80:
  6728                           
  6729                           
  6730                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6731  02FC  01B3               	clrf	printf@c^(0+128)
  6732  02FD  0AB3               	incf	printf@c^(0+128),f
  6733  02FE                     l2631:
  6734  02FE  3004               	movlw	4
  6735  02FF  0633               	xorwf	printf@c^(0+128),w
  6736  0300  1D03               	btfss	3,2
  6737  0301  2B03               	goto	u3071
  6738  0302  2B04               	goto	u3070
  6739  0303                     u3071:
  6740  0303  2B05               	goto	l2635
  6741  0304                     u3070:
  6742  0304  2B83               	goto	l2655
  6743  0305                     l2635:
  6744                           
  6745                           ;doprnt.c: 1343: if(val < hexpowers[c])
  6746  0305  0833               	movf	printf@c^(0+128),w
  6747  0306  00A0               	movwf	??_printf^(0+128)
  6748  0307  0720               	addwf	??_printf^(0+128),w
  6749  0308  3E28               	addlw	low (_hexpowers| (0+32768))
  6750  0309  0084               	movwf	4
  6751  030A  3087               	movlw	high (_hexpowers| (0+32768))
  6752  030B  1803               	skipnc
  6753  030C  3E01               	addlw	1
  6754  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6755  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6756  030F  00FF               	movwf	btemp+1
  6757  0310  120A  118A  2700  120A  118A  	fcall	stringtab
  6758  0315  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0316  1303               	bcf	3,6	;RP1=0, select bank1
  6760  0317  00A1               	movwf	(??_printf+1)^(0+128)
  6761  0318  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0319  1303               	bcf	3,6	;RP1=0, select bank0
  6763  031A  120A  118A  2700  120A  118A  	fcall	stringtab
  6764  031F  1683               	bsf	3,5	;RP0=1, select bank1
  6765  0320  1303               	bcf	3,6	;RP1=0, select bank1
  6766  0321  00A2               	movwf	((??_printf+1)^(0+128)+1)
  6767  0322  0822               	movf	(??_printf+2)^(0+128),w
  6768  0323  022F               	subwf	(printf@val+1)^(0+128),w
  6769  0324  1D03               	skipz
  6770  0325  2B28               	goto	u3085
  6771  0326  0821               	movf	(??_printf+1)^(0+128),w
  6772  0327  022E               	subwf	printf@val^(0+128),w
  6773  0328                     u3085:
  6774  0328  1803               	skipnc
  6775  0329  2B2B               	goto	u3081
  6776  032A  2B2C               	goto	u3080
  6777  032B                     u3081:
  6778  032B  2B2D               	goto	l2639
  6779  032C                     u3080:
  6780  032C  2B83               	goto	l2655
  6781  032D                     l2639:
  6782  032D  3001               	movlw	1
  6783  032E  00A0               	movwf	??_printf^(0+128)
  6784  032F  0820               	movf	??_printf^(0+128),w
  6785  0330  07B3               	addwf	printf@c^(0+128),f
  6786  0331  3004               	movlw	4
  6787  0332  0633               	xorwf	printf@c^(0+128),w
  6788  0333  1D03               	btfss	3,2
  6789  0334  2B36               	goto	u3091
  6790  0335  2B37               	goto	u3090
  6791  0336                     u3091:
  6792  0336  2B05               	goto	l2635
  6793  0337                     u3090:
  6794  0337  2B83               	goto	l2655
  6795  0338                     l520:	
  6796                           ;doprnt.c: 1352: case 0x40:
  6797                           
  6798                           
  6799                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  6800  0338  01B3               	clrf	printf@c^(0+128)
  6801  0339  0AB3               	incf	printf@c^(0+128),f
  6802  033A                     l2641:
  6803  033A  3006               	movlw	6
  6804  033B  0633               	xorwf	printf@c^(0+128),w
  6805  033C  1D03               	btfss	3,2
  6806  033D  2B3F               	goto	u3101
  6807  033E  2B40               	goto	u3100
  6808  033F                     u3101:
  6809  033F  2B41               	goto	l2645
  6810  0340                     u3100:
  6811  0340  2B83               	goto	l2655
  6812  0341                     l2645:
  6813                           
  6814                           ;doprnt.c: 1355: if(val < octpowers[c])
  6815  0341  0833               	movf	printf@c^(0+128),w
  6816  0342  00A0               	movwf	??_printf^(0+128)
  6817  0343  0720               	addwf	??_printf^(0+128),w
  6818  0344  3E12               	addlw	low (_octpowers| (0+32768))
  6819  0345  0084               	movwf	4
  6820  0346  3087               	movlw	high (_octpowers| (0+32768))
  6821  0347  1803               	skipnc
  6822  0348  3E01               	addlw	1
  6823  0349  1283               	bcf	3,5	;RP0=0, select bank0
  6824  034A  1303               	bcf	3,6	;RP1=0, select bank0
  6825  034B  00FF               	movwf	btemp+1
  6826  034C  120A  118A  2700  120A  118A  	fcall	stringtab
  6827  0351  1683               	bsf	3,5	;RP0=1, select bank1
  6828  0352  1303               	bcf	3,6	;RP1=0, select bank1
  6829  0353  00A1               	movwf	(??_printf+1)^(0+128)
  6830  0354  1283               	bcf	3,5	;RP0=0, select bank0
  6831  0355  1303               	bcf	3,6	;RP1=0, select bank0
  6832  0356  120A  118A  2700  120A  118A  	fcall	stringtab
  6833  035B  1683               	bsf	3,5	;RP0=1, select bank1
  6834  035C  1303               	bcf	3,6	;RP1=0, select bank1
  6835  035D  00A2               	movwf	((??_printf+1)^(0+128)+1)
  6836  035E  0822               	movf	(??_printf+2)^(0+128),w
  6837  035F  022F               	subwf	(printf@val+1)^(0+128),w
  6838  0360  1D03               	skipz
  6839  0361  2B64               	goto	u3115
  6840  0362  0821               	movf	(??_printf+1)^(0+128),w
  6841  0363  022E               	subwf	printf@val^(0+128),w
  6842  0364                     u3115:
  6843  0364  1803               	skipnc
  6844  0365  2B67               	goto	u3111
  6845  0366  2B68               	goto	u3110
  6846  0367                     u3111:
  6847  0367  2B69               	goto	l2649
  6848  0368                     u3110:
  6849  0368  2B83               	goto	l2655
  6850  0369                     l2649:
  6851  0369  3001               	movlw	1
  6852  036A  00A0               	movwf	??_printf^(0+128)
  6853  036B  0820               	movf	??_printf^(0+128),w
  6854  036C  07B3               	addwf	printf@c^(0+128),f
  6855  036D  3006               	movlw	6
  6856  036E  0633               	xorwf	printf@c^(0+128),w
  6857  036F  1D03               	btfss	3,2
  6858  0370  2B72               	goto	u3121
  6859  0371  2B73               	goto	u3120
  6860  0372                     u3121:
  6861  0372  2B41               	goto	l2645
  6862  0373                     u3120:
  6863  0373  2B83               	goto	l2655
  6864  0374                     l2653:
  6865  0374  0834               	movf	printf@flag^(0+128),w
  6866  0375  39C0               	andlw	192
  6867                           
  6868                           ; Switch size 1, requested type "simple"
  6869                           ; Number of cases is 4, Range of values is 0 to 192
  6870                           ; switch strategies available:
  6871                           ; Name         Instructions Cycles
  6872                           ; simple_byte           13     7 (average)
  6873                           ; jumptable            260     6 (fixed)
  6874                           ;	Chosen strategy is simple_byte
  6875  0376  3A00               	xorlw	0	; case 0
  6876  0377  1903               	skipnz
  6877  0378  2AC0               	goto	l511
  6878  0379  3A40               	xorlw	64	; case 64
  6879  037A  1903               	skipnz
  6880  037B  2B38               	goto	l520
  6881  037C  3AC0               	xorlw	192	; case 128
  6882  037D  1903               	skipnz
  6883  037E  2AFC               	goto	l516
  6884  037F  3A40               	xorlw	64	; case 192
  6885  0380  1903               	skipnz
  6886  0381  2AC0               	goto	l511
  6887  0382  2B83               	goto	l2655
  6888  0383                     l2655:
  6889                           
  6890                           ;doprnt.c: 1365: if(c < prec)
  6891  0383  0830               	movf	printf@prec^(0+128),w
  6892  0384  00A0               	movwf	??_printf^(0+128)
  6893  0385  01A1               	clrf	(??_printf^(0+128)+1)
  6894  0386  1BA0               	btfsc	??_printf^(0+128),7
  6895  0387  03A1               	decf	(??_printf^(0+128)+1),f
  6896  0388  0821               	movf	(??_printf+1)^(0+128),w
  6897  0389  3A80               	xorlw	128
  6898  038A  3C80               	sublw	128
  6899  038B  1D03               	skipz
  6900  038C  2B8F               	goto	u3135
  6901  038D  0820               	movf	??_printf^(0+128),w
  6902  038E  0233               	subwf	printf@c^(0+128),w
  6903  038F                     u3135:
  6904  038F  1803               	skipnc
  6905  0390  2B92               	goto	u3131
  6906  0391  2B93               	goto	u3130
  6907  0392                     u3131:
  6908  0392  2B9A               	goto	l2659
  6909  0393                     u3130:
  6910  0393                     l2657:
  6911                           
  6912                           ;doprnt.c: 1366: c = (char)prec;
  6913  0393  1683               	bsf	3,5	;RP0=1, select bank1
  6914  0394  1303               	bcf	3,6	;RP1=0, select bank1
  6915  0395  0830               	movf	printf@prec^(0+128),w
  6916  0396  00A0               	movwf	??_printf^(0+128)
  6917  0397  0820               	movf	??_printf^(0+128),w
  6918  0398  00B3               	movwf	printf@c^(0+128)
  6919  0399  2BB4               	goto	l2663
  6920  039A                     l2659:
  6921                           
  6922                           ;doprnt.c: 1367: else if(prec < c)
  6923  039A  1683               	bsf	3,5	;RP0=1, select bank1
  6924  039B  1303               	bcf	3,6	;RP1=0, select bank1
  6925  039C  0830               	movf	printf@prec^(0+128),w
  6926  039D  00A0               	movwf	??_printf^(0+128)
  6927  039E  01A1               	clrf	(??_printf^(0+128)+1)
  6928  039F  1BA0               	btfsc	??_printf^(0+128),7
  6929  03A0  03A1               	decf	(??_printf^(0+128)+1),f
  6930  03A1  0821               	movf	(??_printf+1)^(0+128),w
  6931  03A2  3A80               	xorlw	128
  6932  03A3  00A2               	movwf	(??_printf+2)^(0+128)
  6933  03A4  3080               	movlw	128
  6934  03A5  0222               	subwf	(??_printf+2)^(0+128),w
  6935  03A6  1D03               	skipz
  6936  03A7  2BAA               	goto	u3145
  6937  03A8  0833               	movf	printf@c^(0+128),w
  6938  03A9  0220               	subwf	??_printf^(0+128),w
  6939  03AA                     u3145:
  6940  03AA  1803               	skipnc
  6941  03AB  2BAD               	goto	u3141
  6942  03AC  2BAE               	goto	u3140
  6943  03AD                     u3141:
  6944  03AD  2BB4               	goto	l2663
  6945  03AE                     u3140:
  6946  03AE                     l2661:
  6947                           
  6948                           ;doprnt.c: 1368: prec = c;
  6949  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  6950  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  6951  03B0  0833               	movf	printf@c^(0+128),w
  6952  03B1  00A0               	movwf	??_printf^(0+128)
  6953  03B2  0820               	movf	??_printf^(0+128),w
  6954  03B3  00B0               	movwf	printf@prec^(0+128)
  6955  03B4                     l2663:
  6956                           
  6957                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6958  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  6959  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  6960  03B6  0831               	movf	printf@width^(0+128),w
  6961  03B7  0432               	iorwf	(printf@width+1)^(0+128),w
  6962  03B8  1903               	btfsc	3,2
  6963  03B9  2BBB               	goto	u3151
  6964  03BA  2BBC               	goto	u3150
  6965  03BB                     u3151:
  6966  03BB  2BCE               	goto	l2669
  6967  03BC                     u3150:
  6968  03BC                     l2665:
  6969  03BC  3003               	movlw	3
  6970  03BD  0534               	andwf	printf@flag^(0+128),w
  6971  03BE  00A0               	movwf	??_printf^(0+128)
  6972  03BF  3000               	movlw	0
  6973  03C0  0535               	andwf	(printf@flag+1)^(0+128),w
  6974  03C1  00A1               	movwf	(??_printf+1)^(0+128)
  6975  03C2  0820               	movf	??_printf^(0+128),w
  6976  03C3  0421               	iorwf	(??_printf^(0+128)+1),w
  6977  03C4  1903               	btfsc	3,2
  6978  03C5  2BC7               	goto	u3161
  6979  03C6  2BC8               	goto	u3160
  6980  03C7                     u3161:
  6981  03C7  2BCE               	goto	l2669
  6982  03C8                     u3160:
  6983  03C8                     l2667:
  6984                           
  6985                           ;doprnt.c: 1372: width--;
  6986  03C8  30FF               	movlw	255
  6987  03C9  07B1               	addwf	printf@width^(0+128),f
  6988  03CA  1803               	skipnc
  6989  03CB  0AB2               	incf	(printf@width+1)^(0+128),f
  6990  03CC  30FF               	movlw	255
  6991  03CD  07B2               	addwf	(printf@width+1)^(0+128),f
  6992  03CE                     l2669:
  6993                           
  6994                           ;doprnt.c: 1374: if(flag & 0x4000) {
  6995  03CE  1F35               	btfss	(printf@flag+1)^(0+128),6
  6996  03CF  2BD1               	goto	u3171
  6997  03D0  2BD2               	goto	u3170
  6998  03D1                     u3171:
  6999  03D1  2BF7               	goto	l2677
  7000  03D2                     u3170:
  7001  03D2                     l2671:
  7002                           
  7003                           ;doprnt.c: 1375: if(width > prec)
  7004  03D2  0830               	movf	printf@prec^(0+128),w
  7005  03D3  00A0               	movwf	??_printf^(0+128)
  7006  03D4  01A1               	clrf	(??_printf^(0+128)+1)
  7007  03D5  1BA0               	btfsc	??_printf^(0+128),7
  7008  03D6  03A1               	decf	(??_printf^(0+128)+1),f
  7009  03D7  0821               	movf	(??_printf+1)^(0+128),w
  7010  03D8  3A80               	xorlw	128
  7011  03D9  00A2               	movwf	(??_printf+2)^(0+128)
  7012  03DA  0832               	movf	(printf@width+1)^(0+128),w
  7013  03DB  3A80               	xorlw	128
  7014  03DC  0222               	subwf	(??_printf+2)^(0+128),w
  7015  03DD  1D03               	skipz
  7016  03DE  2BE1               	goto	u3185
  7017  03DF  0831               	movf	printf@width^(0+128),w
  7018  03E0  0220               	subwf	??_printf^(0+128),w
  7019  03E1                     u3185:
  7020  03E1  1803               	skipnc
  7021  03E2  2BE4               	goto	u3181
  7022  03E3  2BE5               	goto	u3180
  7023  03E4                     u3181:
  7024  03E4  2BF3               	goto	l2675
  7025  03E5                     u3180:
  7026  03E5                     l2673:
  7027                           
  7028                           ;doprnt.c: 1376: width -= prec;
  7029  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  7030  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  7031  03E7  0830               	movf	printf@prec^(0+128),w
  7032  03E8  00A0               	movwf	??_printf^(0+128)
  7033  03E9  01A1               	clrf	(??_printf^(0+128)+1)
  7034  03EA  1BA0               	btfsc	??_printf^(0+128),7
  7035  03EB  03A1               	decf	(??_printf^(0+128)+1),f
  7036  03EC  0820               	movf	??_printf^(0+128),w
  7037  03ED  02B1               	subwf	printf@width^(0+128),f
  7038  03EE  0821               	movf	(??_printf+1)^(0+128),w
  7039  03EF  1C03               	skipc
  7040  03F0  03B2               	decf	(printf@width+1)^(0+128),f
  7041  03F1  02B2               	subwf	(printf@width+1)^(0+128),f
  7042  03F2  2BF7               	goto	l2677
  7043  03F3                     l2675:
  7044                           
  7045                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  7046  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  7047  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  7048  03F5  01B1               	clrf	printf@width^(0+128)
  7049  03F6  01B2               	clrf	(printf@width+1)^(0+128)
  7050  03F7                     l2677:
  7051                           
  7052                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
  7053  03F7  30C4               	movlw	196
  7054  03F8  0534               	andwf	printf@flag^(0+128),w
  7055  03F9  00A0               	movwf	??_printf^(0+128)
  7056  03FA  3008               	movlw	8
  7057  03FB  0535               	andwf	(printf@flag+1)^(0+128),w
  7058  03FC  00A1               	movwf	(??_printf+1)^(0+128)
  7059  03FD  3040               	movlw	64
  7060  03FE  0620               	xorwf	??_printf^(0+128),w
  7061  03FF  3008               	movlw	8
  7062  0400  1903               	skipnz
  7063  0401  0621               	xorwf	(??_printf^(0+128)+1),w
  7064  0402  1D03               	btfss	3,2
  7065  0403  2C05               	goto	u3191
  7066  0404  2C06               	goto	u3190
  7067  0405                     u3191:
  7068  0405  2C13               	goto	l2683
  7069  0406                     u3190:
  7070  0406                     l2679:
  7071                           
  7072                           ;doprnt.c: 1388: if(width)
  7073  0406  0831               	movf	printf@width^(0+128),w
  7074  0407  0432               	iorwf	(printf@width+1)^(0+128),w
  7075  0408  1903               	btfsc	3,2
  7076  0409  2C0B               	goto	u3201
  7077  040A  2C0C               	goto	u3200
  7078  040B                     u3201:
  7079  040B  2C3C               	goto	l2691
  7080  040C                     u3200:
  7081  040C                     l2681:
  7082                           
  7083                           ;doprnt.c: 1389: width--;
  7084  040C  30FF               	movlw	255
  7085  040D  07B1               	addwf	printf@width^(0+128),f
  7086  040E  1803               	skipnc
  7087  040F  0AB2               	incf	(printf@width+1)^(0+128),f
  7088  0410  30FF               	movlw	255
  7089  0411  07B2               	addwf	(printf@width+1)^(0+128),f
  7090  0412  2C3C               	goto	l2691
  7091  0413                     l2683:
  7092                           
  7093                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  7094  0413  30C0               	movlw	192
  7095  0414  0534               	andwf	printf@flag^(0+128),w
  7096  0415  00A0               	movwf	??_printf^(0+128)
  7097  0416  3008               	movlw	8
  7098  0417  0535               	andwf	(printf@flag+1)^(0+128),w
  7099  0418  00A1               	movwf	(??_printf+1)^(0+128)
  7100  0419  3080               	movlw	128
  7101  041A  0620               	xorwf	??_printf^(0+128),w
  7102  041B  3008               	movlw	8
  7103  041C  1903               	skipnz
  7104  041D  0621               	xorwf	(??_printf^(0+128)+1),w
  7105  041E  1D03               	btfss	3,2
  7106  041F  2C21               	goto	u3211
  7107  0420  2C22               	goto	u3210
  7108  0421                     u3211:
  7109  0421  2C3C               	goto	l2691
  7110  0422                     u3210:
  7111  0422                     l2685:
  7112                           
  7113                           ;doprnt.c: 1398: if(width > 2)
  7114  0422  0832               	movf	(printf@width+1)^(0+128),w
  7115  0423  3A80               	xorlw	128
  7116  0424  00FF               	movwf	btemp+1
  7117  0425  3080               	movlw	128
  7118  0426  027F               	subwf	btemp+1,w
  7119  0427  1D03               	skipz
  7120  0428  2C2B               	goto	u3225
  7121  0429  3003               	movlw	3
  7122  042A  0231               	subwf	printf@width^(0+128),w
  7123  042B                     u3225:
  7124  042B  1C03               	skipc
  7125  042C  2C2E               	goto	u3221
  7126  042D  2C2F               	goto	u3220
  7127  042E                     u3221:
  7128  042E  2C38               	goto	l2689
  7129  042F                     u3220:
  7130  042F                     l2687:
  7131                           
  7132                           ;doprnt.c: 1399: width -= 2;
  7133  042F  30FE               	movlw	254
  7134  0430  1683               	bsf	3,5	;RP0=1, select bank1
  7135  0431  1303               	bcf	3,6	;RP1=0, select bank1
  7136  0432  07B1               	addwf	printf@width^(0+128),f
  7137  0433  1803               	skipnc
  7138  0434  0AB2               	incf	(printf@width+1)^(0+128),f
  7139  0435  30FF               	movlw	255
  7140  0436  07B2               	addwf	(printf@width+1)^(0+128),f
  7141  0437  2C3C               	goto	l2691
  7142  0438                     l2689:
  7143                           
  7144                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
  7145  0438  1683               	bsf	3,5	;RP0=1, select bank1
  7146  0439  1303               	bcf	3,6	;RP1=0, select bank1
  7147  043A  01B1               	clrf	printf@width^(0+128)
  7148  043B  01B2               	clrf	(printf@width+1)^(0+128)
  7149  043C                     l2691:
  7150                           
  7151                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
  7152  043C  0832               	movf	(printf@width+1)^(0+128),w
  7153  043D  3A80               	xorlw	128
  7154  043E  3C80               	sublw	128
  7155  043F  1D03               	skipz
  7156  0440  2C43               	goto	u3235
  7157  0441  0831               	movf	printf@width^(0+128),w
  7158  0442  0233               	subwf	printf@c^(0+128),w
  7159  0443                     u3235:
  7160  0443  1803               	skipnc
  7161  0444  2C46               	goto	u3231
  7162  0445  2C47               	goto	u3230
  7163  0446                     u3231:
  7164  0446  2C53               	goto	l2695
  7165  0447                     u3230:
  7166  0447                     l2693:
  7167                           
  7168                           ;doprnt.c: 1408: width -= c;
  7169  0447  1683               	bsf	3,5	;RP0=1, select bank1
  7170  0448  1303               	bcf	3,6	;RP1=0, select bank1
  7171  0449  0833               	movf	printf@c^(0+128),w
  7172  044A  00A0               	movwf	??_printf^(0+128)
  7173  044B  01A1               	clrf	(??_printf^(0+128)+1)
  7174  044C  0820               	movf	??_printf^(0+128),w
  7175  044D  02B1               	subwf	printf@width^(0+128),f
  7176  044E  0821               	movf	(??_printf+1)^(0+128),w
  7177  044F  1C03               	skipc
  7178  0450  03B2               	decf	(printf@width+1)^(0+128),f
  7179  0451  02B2               	subwf	(printf@width+1)^(0+128),f
  7180  0452  2C57               	goto	l2697
  7181  0453                     l2695:
  7182                           
  7183                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  7184  0453  1683               	bsf	3,5	;RP0=1, select bank1
  7185  0454  1303               	bcf	3,6	;RP1=0, select bank1
  7186  0455  01B1               	clrf	printf@width^(0+128)
  7187  0456  01B2               	clrf	(printf@width+1)^(0+128)
  7188  0457                     l2697:
  7189                           
  7190                           ;doprnt.c: 1413: if(flag & 0x04) {
  7191  0457  1D34               	btfss	printf@flag^(0+128),2
  7192  0458  2C5A               	goto	u3241
  7193  0459  2C5B               	goto	u3240
  7194  045A                     u3241:
  7195  045A  2CC0               	goto	l2723
  7196  045B                     u3240:
  7197  045B                     l2699:
  7198                           
  7199                           ;doprnt.c: 1418: if(flag & 0x03)
  7200  045B  3003               	movlw	3
  7201  045C  0534               	andwf	printf@flag^(0+128),w
  7202  045D  00A0               	movwf	??_printf^(0+128)
  7203  045E  3000               	movlw	0
  7204  045F  0535               	andwf	(printf@flag+1)^(0+128),w
  7205  0460  00A1               	movwf	(??_printf+1)^(0+128)
  7206  0461  0820               	movf	??_printf^(0+128),w
  7207  0462  0421               	iorwf	(??_printf^(0+128)+1),w
  7208  0463  1903               	btfsc	3,2
  7209  0464  2C66               	goto	u3251
  7210  0465  2C67               	goto	u3250
  7211  0466                     u3251:
  7212  0466  2C6E               	goto	l540
  7213  0467                     u3250:
  7214  0467                     l2701:
  7215                           
  7216                           ;doprnt.c: 1419: (putch('-') );
  7217  0467  302D               	movlw	45
  7218  0468  120A  158A  2143  120A  118A  	fcall	_putch
  7219  046D  2CA3               	goto	l2717
  7220  046E                     l540:
  7221                           
  7222                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
  7223  046E  1C34               	btfss	printf@flag^(0+128),0
  7224  046F  2C71               	goto	u3261
  7225  0470  2C72               	goto	u3260
  7226  0471                     u3261:
  7227  0471  2C79               	goto	l2705
  7228  0472                     u3260:
  7229  0472                     l2703:
  7230                           
  7231                           ;doprnt.c: 1426: (putch(' ') );
  7232  0472  3020               	movlw	32
  7233  0473  120A  158A  2143  120A  118A  	fcall	_putch
  7234  0478  2CA3               	goto	l2717
  7235  0479                     l2705:
  7236                           
  7237                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  7238  0479  30C0               	movlw	192
  7239  047A  0534               	andwf	printf@flag^(0+128),w
  7240  047B  00A0               	movwf	??_printf^(0+128)
  7241  047C  3008               	movlw	8
  7242  047D  0535               	andwf	(printf@flag+1)^(0+128),w
  7243  047E  00A1               	movwf	(??_printf+1)^(0+128)
  7244  047F  3080               	movlw	128
  7245  0480  0620               	xorwf	??_printf^(0+128),w
  7246  0481  3008               	movlw	8
  7247  0482  1903               	skipnz
  7248  0483  0621               	xorwf	(??_printf^(0+128)+1),w
  7249  0484  1D03               	btfss	3,2
  7250  0485  2C87               	goto	u3271
  7251  0486  2C88               	goto	u3270
  7252  0487                     u3271:
  7253  0487  2CA3               	goto	l2717
  7254  0488                     u3270:
  7255  0488                     l2707:
  7256                           
  7257                           ;doprnt.c: 1430: (putch('0') );
  7258  0488  3030               	movlw	48
  7259  0489  120A  158A  2143  120A  118A  	fcall	_putch
  7260  048E                     l2709:
  7261                           
  7262                           ;doprnt.c: 1432: (putch(flag & 0x20 ? 'X' : 'x') );
  7263  048E  1683               	bsf	3,5	;RP0=1, select bank1
  7264  048F  1303               	bcf	3,6	;RP1=0, select bank1
  7265  0490  1AB4               	btfsc	printf@flag^(0+128),5
  7266  0491  2C93               	goto	u3281
  7267  0492  2C94               	goto	u3280
  7268  0493                     u3281:
  7269  0493  2C99               	goto	l2713
  7270  0494                     u3280:
  7271  0494                     l2711:
  7272  0494  3078               	movlw	120
  7273  0495  00A3               	movwf	_printf$982^(0+128)
  7274  0496  3000               	movlw	0
  7275  0497  00A4               	movwf	(_printf$982^(0+128)+1)
  7276  0498  2C9D               	goto	l2715
  7277  0499                     l2713:
  7278  0499  3058               	movlw	88
  7279  049A  00A3               	movwf	_printf$982^(0+128)
  7280  049B  3000               	movlw	0
  7281  049C  00A4               	movwf	(_printf$982^(0+128)+1)
  7282  049D                     l2715:
  7283  049D  0823               	movf	_printf$982^(0+128),w
  7284  049E  120A  158A  2143  120A  118A  	fcall	_putch
  7285  04A3                     l2717:
  7286                           
  7287                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
  7288  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  7289  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  7290  04A5  0831               	movf	printf@width^(0+128),w
  7291  04A6  0432               	iorwf	(printf@width+1)^(0+128),w
  7292  04A7  1903               	btfsc	3,2
  7293  04A8  2CAA               	goto	u3291
  7294  04A9  2CAB               	goto	u3290
  7295  04AA                     u3291:
  7296  04AA  2E1E               	goto	l2773
  7297  04AB                     u3290:
  7298  04AB                     l2719:
  7299                           
  7300                           ;doprnt.c: 1443: (putch('0') );
  7301  04AB  3030               	movlw	48
  7302  04AC  120A  158A  2143  120A  118A  	fcall	_putch
  7303  04B1                     l2721:
  7304                           
  7305                           ;doprnt.c: 1444: while(--width);
  7306  04B1  30FF               	movlw	255
  7307  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  7308  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  7309  04B4  07B1               	addwf	printf@width^(0+128),f
  7310  04B5  1803               	skipnc
  7311  04B6  0AB2               	incf	(printf@width+1)^(0+128),f
  7312  04B7  30FF               	movlw	255
  7313  04B8  07B2               	addwf	(printf@width+1)^(0+128),f
  7314  04B9  0831               	movf	printf@width^(0+128),w
  7315  04BA  0432               	iorwf	(printf@width+1)^(0+128),w
  7316  04BB  1D03               	btfss	3,2
  7317  04BC  2CBE               	goto	u3301
  7318  04BD  2CBF               	goto	u3300
  7319  04BE                     u3301:
  7320  04BE  2CAB               	goto	l2719
  7321  04BF                     u3300:
  7322  04BF  2E1E               	goto	l2773
  7323  04C0                     l2723:
  7324                           
  7325                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
  7326  04C0  0831               	movf	printf@width^(0+128),w
  7327  04C1  0432               	iorwf	(printf@width+1)^(0+128),w
  7328  04C2  1903               	btfsc	3,2
  7329  04C3  2CC5               	goto	u3311
  7330  04C4  2CC6               	goto	u3310
  7331  04C5                     u3311:
  7332  04C5  2CDE               	goto	l2731
  7333  04C6                     u3310:
  7334  04C6                     l2725:
  7335  04C6  19B4               	btfsc	printf@flag^(0+128),3
  7336  04C7  2CC9               	goto	u3321
  7337  04C8  2CCA               	goto	u3320
  7338  04C9                     u3321:
  7339  04C9  2CDE               	goto	l2731
  7340  04CA                     u3320:
  7341  04CA                     l2727:
  7342                           
  7343                           ;doprnt.c: 1456: (putch(' ') );
  7344  04CA  3020               	movlw	32
  7345  04CB  120A  158A  2143  120A  118A  	fcall	_putch
  7346  04D0                     l2729:
  7347                           
  7348                           ;doprnt.c: 1457: while(--width);
  7349  04D0  30FF               	movlw	255
  7350  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  7351  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  7352  04D3  07B1               	addwf	printf@width^(0+128),f
  7353  04D4  1803               	skipnc
  7354  04D5  0AB2               	incf	(printf@width+1)^(0+128),f
  7355  04D6  30FF               	movlw	255
  7356  04D7  07B2               	addwf	(printf@width+1)^(0+128),f
  7357  04D8  0831               	movf	printf@width^(0+128),w
  7358  04D9  0432               	iorwf	(printf@width+1)^(0+128),w
  7359  04DA  1D03               	btfss	3,2
  7360  04DB  2CDD               	goto	u3331
  7361  04DC  2CDE               	goto	u3330
  7362  04DD                     u3331:
  7363  04DD  2CCA               	goto	l2727
  7364  04DE                     u3330:
  7365  04DE                     l2731:
  7366                           
  7367                           ;doprnt.c: 1464: if(flag & 0x03)
  7368  04DE  3003               	movlw	3
  7369  04DF  0534               	andwf	printf@flag^(0+128),w
  7370  04E0  00A0               	movwf	??_printf^(0+128)
  7371  04E1  3000               	movlw	0
  7372  04E2  0535               	andwf	(printf@flag+1)^(0+128),w
  7373  04E3  00A1               	movwf	(??_printf+1)^(0+128)
  7374  04E4  0820               	movf	??_printf^(0+128),w
  7375  04E5  0421               	iorwf	(??_printf^(0+128)+1),w
  7376  04E6  1903               	btfsc	3,2
  7377  04E7  2CE9               	goto	u3341
  7378  04E8  2CEA               	goto	u3340
  7379  04E9                     u3341:
  7380  04E9  2CF1               	goto	l556
  7381  04EA                     u3340:
  7382  04EA                     l2733:
  7383                           
  7384                           ;doprnt.c: 1465: (putch('-') );
  7385  04EA  302D               	movlw	45
  7386  04EB  120A  158A  2143  120A  118A  	fcall	_putch
  7387  04F0  2CFB               	goto	l2737
  7388  04F1                     l556:
  7389                           
  7390                           ;doprnt.c: 1469: else if(flag & 0x01)
  7391  04F1  1C34               	btfss	printf@flag^(0+128),0
  7392  04F2  2CF4               	goto	u3351
  7393  04F3  2CF5               	goto	u3350
  7394  04F4                     u3351:
  7395  04F4  2CFB               	goto	l2737
  7396  04F5                     u3350:
  7397  04F5                     l2735:
  7398                           
  7399                           ;doprnt.c: 1470: (putch(' ') );
  7400  04F5  3020               	movlw	32
  7401  04F6  120A  158A  2143  120A  118A  	fcall	_putch
  7402  04FB                     l2737:
  7403                           
  7404                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
  7405  04FB  30C0               	movlw	192
  7406  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  7407  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  7408  04FE  0534               	andwf	printf@flag^(0+128),w
  7409  04FF  00A0               	movwf	??_printf^(0+128)
  7410  0500  3008               	movlw	8
  7411  0501  0535               	andwf	(printf@flag+1)^(0+128),w
  7412  0502  00A1               	movwf	(??_printf+1)^(0+128)
  7413  0503  3040               	movlw	64
  7414  0504  0620               	xorwf	??_printf^(0+128),w
  7415  0505  3008               	movlw	8
  7416  0506  1903               	skipnz
  7417  0507  0621               	xorwf	(??_printf^(0+128)+1),w
  7418  0508  1D03               	btfss	3,2
  7419  0509  2D0B               	goto	u3361
  7420  050A  2D0C               	goto	u3360
  7421  050B                     u3361:
  7422  050B  2D13               	goto	l2741
  7423  050C                     u3360:
  7424  050C                     l2739:
  7425                           
  7426                           ;doprnt.c: 1475: (putch('0') );
  7427  050C  3030               	movlw	48
  7428  050D  120A  158A  2143  120A  118A  	fcall	_putch
  7429  0512  2E1E               	goto	l2773
  7430  0513                     l2741:
  7431                           
  7432                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  7433  0513  30C0               	movlw	192
  7434  0514  0534               	andwf	printf@flag^(0+128),w
  7435  0515  00A0               	movwf	??_printf^(0+128)
  7436  0516  3008               	movlw	8
  7437  0517  0535               	andwf	(printf@flag+1)^(0+128),w
  7438  0518  00A1               	movwf	(??_printf+1)^(0+128)
  7439  0519  3080               	movlw	128
  7440  051A  0620               	xorwf	??_printf^(0+128),w
  7441  051B  3008               	movlw	8
  7442  051C  1903               	skipnz
  7443  051D  0621               	xorwf	(??_printf^(0+128)+1),w
  7444  051E  1D03               	btfss	3,2
  7445  051F  2D21               	goto	u3371
  7446  0520  2D22               	goto	u3370
  7447  0521                     u3371:
  7448  0521  2D3E               	goto	l552
  7449  0522                     u3370:
  7450  0522                     l2743:
  7451                           
  7452                           ;doprnt.c: 1484: (putch('0') );
  7453  0522  3030               	movlw	48
  7454  0523  120A  158A  2143  120A  118A  	fcall	_putch
  7455  0528                     l2745:
  7456                           
  7457                           ;doprnt.c: 1486: (putch(flag & 0x20 ? 'X' : 'x') );
  7458  0528  1683               	bsf	3,5	;RP0=1, select bank1
  7459  0529  1303               	bcf	3,6	;RP1=0, select bank1
  7460  052A  1AB4               	btfsc	printf@flag^(0+128),5
  7461  052B  2D2D               	goto	u3381
  7462  052C  2D2E               	goto	u3380
  7463  052D                     u3381:
  7464  052D  2D33               	goto	l2749
  7465  052E                     u3380:
  7466  052E                     l2747:
  7467  052E  3078               	movlw	120
  7468  052F  00A5               	movwf	_printf$983^(0+128)
  7469  0530  3000               	movlw	0
  7470  0531  00A6               	movwf	(_printf$983^(0+128)+1)
  7471  0532  2D37               	goto	l2751
  7472  0533                     l2749:
  7473  0533  3058               	movlw	88
  7474  0534  00A5               	movwf	_printf$983^(0+128)
  7475  0535  3000               	movlw	0
  7476  0536  00A6               	movwf	(_printf$983^(0+128)+1)
  7477  0537                     l2751:
  7478  0537  0825               	movf	_printf$983^(0+128),w
  7479  0538  120A  158A  2143  120A  118A  	fcall	_putch
  7480  053D  2E1E               	goto	l2773
  7481  053E                     l552:
  7482                           
  7483                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
  7484  053E  2E1E               	goto	l2773
  7485  053F                     l2753:
  7486                           
  7487                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
  7488  053F  300A               	movlw	10
  7489  0540  1283               	bcf	3,5	;RP0=0, select bank0
  7490  0541  1303               	bcf	3,6	;RP1=0, select bank0
  7491  0542  00A8               	movwf	___lwmod@divisor
  7492  0543  3000               	movlw	0
  7493  0544  00A9               	movwf	___lwmod@divisor+1
  7494  0545  1683               	bsf	3,5	;RP0=1, select bank1
  7495  0546  1303               	bcf	3,6	;RP1=0, select bank1
  7496  0547  0830               	movf	printf@prec^(0+128),w
  7497  0548  00A0               	movwf	??_printf^(0+128)
  7498  0549  0720               	addwf	??_printf^(0+128),w
  7499  054A  3E1E               	addlw	low (_dpowers| (0+32768))
  7500  054B  0084               	movwf	4
  7501  054C  3087               	movlw	high (_dpowers| (0+32768))
  7502  054D  1803               	skipnc
  7503  054E  3E01               	addlw	1
  7504  054F  1283               	bcf	3,5	;RP0=0, select bank0
  7505  0550  1303               	bcf	3,6	;RP1=0, select bank0
  7506  0551  00FF               	movwf	btemp+1
  7507  0552  120A  118A  2700  120A  118A  	fcall	stringtab
  7508  0557  00A0               	movwf	___lwdiv@divisor
  7509  0558  120A  118A  2700  120A  118A  	fcall	stringtab
  7510  055D  00A1               	movwf	___lwdiv@divisor+1
  7511  055E  1683               	bsf	3,5	;RP0=1, select bank1
  7512  055F  1303               	bcf	3,6	;RP1=0, select bank1
  7513  0560  082F               	movf	(printf@val+1)^(0+128),w
  7514  0561  1283               	bcf	3,5	;RP0=0, select bank0
  7515  0562  1303               	bcf	3,6	;RP1=0, select bank0
  7516  0563  00A3               	movwf	___lwdiv@dividend+1
  7517  0564  1683               	bsf	3,5	;RP0=1, select bank1
  7518  0565  1303               	bcf	3,6	;RP1=0, select bank1
  7519  0566  082E               	movf	printf@val^(0+128),w
  7520  0567  1283               	bcf	3,5	;RP0=0, select bank0
  7521  0568  1303               	bcf	3,6	;RP1=0, select bank0
  7522  0569  00A2               	movwf	___lwdiv@dividend
  7523  056A  160A  118A  21D5  120A  118A  	fcall	___lwdiv
  7524  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7525  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7526  0571  0821               	movf	?___lwdiv+1,w
  7527  0572  00AB               	movwf	___lwmod@dividend+1
  7528  0573  0820               	movf	?___lwdiv,w
  7529  0574  00AA               	movwf	___lwmod@dividend
  7530  0575  160A  118A  2199  120A  118A  	fcall	___lwmod
  7531  057A  1283               	bcf	3,5	;RP0=0, select bank0
  7532  057B  1303               	bcf	3,6	;RP1=0, select bank0
  7533  057C  0828               	movf	?___lwmod,w
  7534  057D  3E30               	addlw	48
  7535  057E  1683               	bsf	3,5	;RP0=1, select bank1
  7536  057F  1303               	bcf	3,6	;RP1=0, select bank1
  7537  0580  00A1               	movwf	(??_printf+1)^(0+128)
  7538  0581  0821               	movf	(??_printf+1)^(0+128),w
  7539  0582  00B3               	movwf	printf@c^(0+128)
  7540                           
  7541                           ;doprnt.c: 1517: break;
  7542  0583  2E18               	goto	l2771
  7543  0584                     l2755:
  7544                           
  7545                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  7546  0584  0830               	movf	printf@prec^(0+128),w
  7547  0585  00A0               	movwf	??_printf^(0+128)
  7548  0586  0720               	addwf	??_printf^(0+128),w
  7549  0587  3E28               	addlw	low (_hexpowers| (0+32768))
  7550  0588  0084               	movwf	4
  7551  0589  3087               	movlw	high (_hexpowers| (0+32768))
  7552  058A  1803               	skipnc
  7553  058B  3E01               	addlw	1
  7554  058C  1283               	bcf	3,5	;RP0=0, select bank0
  7555  058D  1303               	bcf	3,6	;RP1=0, select bank0
  7556  058E  00FF               	movwf	btemp+1
  7557  058F  120A  118A  2700  120A  118A  	fcall	stringtab
  7558  0594  00A0               	movwf	___lwdiv@divisor
  7559  0595  120A  118A  2700  120A  118A  	fcall	stringtab
  7560  059A  00A1               	movwf	___lwdiv@divisor+1
  7561  059B  1683               	bsf	3,5	;RP0=1, select bank1
  7562  059C  1303               	bcf	3,6	;RP1=0, select bank1
  7563  059D  082F               	movf	(printf@val+1)^(0+128),w
  7564  059E  1283               	bcf	3,5	;RP0=0, select bank0
  7565  059F  1303               	bcf	3,6	;RP1=0, select bank0
  7566  05A0  00A3               	movwf	___lwdiv@dividend+1
  7567  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  7568  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  7569  05A3  082E               	movf	printf@val^(0+128),w
  7570  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  7571  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  7572  05A6  00A2               	movwf	___lwdiv@dividend
  7573  05A7  160A  118A  21D5  120A  118A  	fcall	___lwdiv
  7574  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  7575  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  7576  05AE  0820               	movf	?___lwdiv,w
  7577  05AF  390F               	andlw	15
  7578  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  7579  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  7580  05B2  00A1               	movwf	(??_printf+1)^(0+128)
  7581  05B3  0821               	movf	(??_printf+1)^(0+128),w
  7582  05B4  00A9               	movwf	printf@idx^(0+128)
  7583  05B5                     l2757:
  7584                           
  7585                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  7586  05B5  1AB4               	btfsc	printf@flag^(0+128),5
  7587  05B6  2DB8               	goto	u3391
  7588  05B7  2DB9               	goto	u3390
  7589  05B8                     u3391:
  7590  05B8  2DBE               	goto	l2761
  7591  05B9                     u3390:
  7592  05B9                     l2759:
  7593  05B9  3005               	movlw	low (STR_20| (0+32768))
  7594  05BA  00A7               	movwf	_printf$989^(0+128)
  7595  05BB  3089               	movlw	high (STR_20| (0+32768))
  7596  05BC  00A8               	movwf	(_printf$989^(0+128)+1)
  7597  05BD  2DC2               	goto	l2763
  7598  05BE                     l2761:
  7599  05BE  30F4               	movlw	low (STR_19| (0+32768))
  7600  05BF  00A7               	movwf	_printf$989^(0+128)
  7601  05C0  3088               	movlw	high (STR_19| (0+32768))
  7602  05C1  00A8               	movwf	(_printf$989^(0+128)+1)
  7603  05C2                     l2763:
  7604  05C2  0829               	movf	printf@idx^(0+128),w
  7605  05C3  0727               	addwf	_printf$989^(0+128),w
  7606  05C4  0084               	movwf	4
  7607  05C5  0828               	movf	(_printf$989+1)^(0+128),w
  7608  05C6  1803               	skipnc
  7609  05C7  0A28               	incf	(_printf$989+1)^(0+128),w
  7610  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  7611  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  7612  05CA  00FF               	movwf	btemp+1
  7613  05CB  120A  118A  2700  120A  118A  	fcall	stringtab
  7614  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  7615  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  7616  05D2  00A0               	movwf	??_printf^(0+128)
  7617  05D3  0820               	movf	??_printf^(0+128),w
  7618  05D4  00B3               	movwf	printf@c^(0+128)
  7619                           
  7620                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  7621  05D5  2E18               	goto	l2771
  7622  05D6                     l2765:
  7623                           
  7624                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned char)prec]) & 07) + '0';
  7625  05D6  0830               	movf	printf@prec^(0+128),w
  7626  05D7  00A0               	movwf	??_printf^(0+128)
  7627  05D8  0720               	addwf	??_printf^(0+128),w
  7628  05D9  3E12               	addlw	low (_octpowers| (0+32768))
  7629  05DA  0084               	movwf	4
  7630  05DB  3087               	movlw	high (_octpowers| (0+32768))
  7631  05DC  1803               	skipnc
  7632  05DD  3E01               	addlw	1
  7633  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7634  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7635  05E0  00FF               	movwf	btemp+1
  7636  05E1  120A  118A  2700  120A  118A  	fcall	stringtab
  7637  05E6  00A0               	movwf	___lwdiv@divisor
  7638  05E7  120A  118A  2700  120A  118A  	fcall	stringtab
  7639  05EC  00A1               	movwf	___lwdiv@divisor+1
  7640  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  7641  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  7642  05EF  082F               	movf	(printf@val+1)^(0+128),w
  7643  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  7644  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  7645  05F2  00A3               	movwf	___lwdiv@dividend+1
  7646  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  7647  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  7648  05F5  082E               	movf	printf@val^(0+128),w
  7649  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7650  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7651  05F8  00A2               	movwf	___lwdiv@dividend
  7652  05F9  160A  118A  21D5  120A  118A  	fcall	___lwdiv
  7653  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  7654  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  7655  0600  0820               	movf	?___lwdiv,w
  7656  0601  3907               	andlw	7
  7657  0602  3E30               	addlw	48
  7658  0603  1683               	bsf	3,5	;RP0=1, select bank1
  7659  0604  1303               	bcf	3,6	;RP1=0, select bank1
  7660  0605  00A1               	movwf	(??_printf+1)^(0+128)
  7661  0606  0821               	movf	(??_printf+1)^(0+128),w
  7662  0607  00B3               	movwf	printf@c^(0+128)
  7663                           
  7664                           ;doprnt.c: 1546: break;
  7665  0608  2E18               	goto	l2771
  7666  0609                     l2769:
  7667  0609  0834               	movf	printf@flag^(0+128),w
  7668  060A  39C0               	andlw	192
  7669                           
  7670                           ; Switch size 1, requested type "simple"
  7671                           ; Number of cases is 4, Range of values is 0 to 192
  7672                           ; switch strategies available:
  7673                           ; Name         Instructions Cycles
  7674                           ; simple_byte           13     7 (average)
  7675                           ; jumptable            260     6 (fixed)
  7676                           ;	Chosen strategy is simple_byte
  7677  060B  3A00               	xorlw	0	; case 0
  7678  060C  1903               	skipnz
  7679  060D  2D3F               	goto	l2753
  7680  060E  3A40               	xorlw	64	; case 64
  7681  060F  1903               	skipnz
  7682  0610  2DD6               	goto	l2765
  7683  0611  3AC0               	xorlw	192	; case 128
  7684  0612  1903               	skipnz
  7685  0613  2D84               	goto	l2755
  7686  0614  3A40               	xorlw	64	; case 192
  7687  0615  1903               	skipnz
  7688  0616  2D3F               	goto	l2753
  7689  0617  2E18               	goto	l2771
  7690  0618                     l2771:
  7691                           
  7692                           ;doprnt.c: 1550: (putch(c) );
  7693  0618  0833               	movf	printf@c^(0+128),w
  7694  0619  120A  158A  2143  120A  118A  	fcall	_putch
  7695  061E                     l2773:
  7696  061E  30FF               	movlw	255
  7697  061F  1683               	bsf	3,5	;RP0=1, select bank1
  7698  0620  1303               	bcf	3,6	;RP1=0, select bank1
  7699  0621  00A0               	movwf	??_printf^(0+128)
  7700  0622  0820               	movf	??_printf^(0+128),w
  7701  0623  07B0               	addwf	printf@prec^(0+128),f
  7702  0624  0A30               	incf	printf@prec^(0+128),w
  7703  0625  1D03               	btfss	3,2
  7704  0626  2E28               	goto	u3401
  7705  0627  2E29               	goto	u3400
  7706  0628                     u3401:
  7707  0628  2E09               	goto	l2769
  7708  0629                     u3400:
  7709  0629                     l578:
  7710                           
  7711                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
  7712  0629  1DB4               	btfss	printf@flag^(0+128),3
  7713  062A  2E2C               	goto	u3411
  7714  062B  2E2D               	goto	u3410
  7715  062C                     u3411:
  7716  062C  2E4E               	goto	l2781
  7717  062D                     u3410:
  7718  062D                     l2775:
  7719  062D  0832               	movf	(printf@width+1)^(0+128),w
  7720  062E  3A80               	xorlw	128
  7721  062F  00FF               	movwf	btemp+1
  7722  0630  3080               	movlw	128
  7723  0631  027F               	subwf	btemp+1,w
  7724  0632  1D03               	skipz
  7725  0633  2E36               	goto	u3425
  7726  0634  3001               	movlw	1
  7727  0635  0231               	subwf	printf@width^(0+128),w
  7728  0636                     u3425:
  7729  0636  1C03               	skipc
  7730  0637  2E39               	goto	u3421
  7731  0638  2E3A               	goto	u3420
  7732  0639                     u3421:
  7733  0639  2E4E               	goto	l2781
  7734  063A                     u3420:
  7735  063A                     l2777:
  7736                           
  7737                           ;doprnt.c: 1556: (putch(' ') );
  7738  063A  3020               	movlw	32
  7739  063B  120A  158A  2143  120A  118A  	fcall	_putch
  7740  0640                     l2779:
  7741                           
  7742                           ;doprnt.c: 1557: while(--width);
  7743  0640  30FF               	movlw	255
  7744  0641  1683               	bsf	3,5	;RP0=1, select bank1
  7745  0642  1303               	bcf	3,6	;RP1=0, select bank1
  7746  0643  07B1               	addwf	printf@width^(0+128),f
  7747  0644  1803               	skipnc
  7748  0645  0AB2               	incf	(printf@width+1)^(0+128),f
  7749  0646  30FF               	movlw	255
  7750  0647  07B2               	addwf	(printf@width+1)^(0+128),f
  7751  0648  0831               	movf	printf@width^(0+128),w
  7752  0649  0432               	iorwf	(printf@width+1)^(0+128),w
  7753  064A  1D03               	btfss	3,2
  7754  064B  2E4D               	goto	u3431
  7755  064C  2E4E               	goto	u3430
  7756  064D                     u3431:
  7757  064D  2E3A               	goto	l2777
  7758  064E                     u3430:
  7759  064E                     l2781:
  7760  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7761  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7762  0650  086C               	movf	printf@f+1,w
  7763  0651  1683               	bsf	3,5	;RP0=1, select bank1
  7764  0652  1303               	bcf	3,6	;RP1=0, select bank1
  7765  0653  00A1               	movwf	(??_printf^(0+128)+1)
  7766  0654  1283               	bcf	3,5	;RP0=0, select bank0
  7767  0655  1303               	bcf	3,6	;RP1=0, select bank0
  7768  0656  086B               	movf	printf@f,w
  7769  0657  1683               	bsf	3,5	;RP0=1, select bank1
  7770  0658  1303               	bcf	3,6	;RP1=0, select bank1
  7771  0659  00A0               	movwf	??_printf^(0+128)
  7772  065A  1283               	bcf	3,5	;RP0=0, select bank0
  7773  065B  1303               	bcf	3,6	;RP1=0, select bank0
  7774  065C  0AEB               	incf	printf@f,f
  7775  065D  1903               	skipnz
  7776  065E  0AEC               	incf	printf@f+1,f
  7777  065F  1683               	bsf	3,5	;RP0=1, select bank1
  7778  0660  1303               	bcf	3,6	;RP1=0, select bank1
  7779  0661  0821               	movf	(??_printf+1)^(0+128),w
  7780  0662  1283               	bcf	3,5	;RP0=0, select bank0
  7781  0663  1303               	bcf	3,6	;RP1=0, select bank0
  7782  0664  00FF               	movwf	btemp+1
  7783  0665  1683               	bsf	3,5	;RP0=1, select bank1
  7784  0666  1303               	bcf	3,6	;RP1=0, select bank1
  7785  0667  0820               	movf	??_printf^(0+128),w
  7786  0668  0084               	movwf	4
  7787  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7788  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7789  066B  120A  118A  2700  120A  118A  	fcall	stringtab
  7790  0670  1683               	bsf	3,5	;RP0=1, select bank1
  7791  0671  1303               	bcf	3,6	;RP1=0, select bank1
  7792  0672  00A2               	movwf	(??_printf+2)^(0+128)
  7793  0673  0822               	movf	(??_printf+2)^(0+128),w
  7794  0674  00B3               	movwf	printf@c^(0+128)
  7795  0675  0833               	movf	printf@c^(0+128),w
  7796  0676  1D03               	btfss	3,2
  7797  0677  2E79               	goto	u3441
  7798  0678  2E7A               	goto	u3440
  7799  0679                     u3441:
  7800  0679  2827               	goto	l2483
  7801  067A                     u3440:
  7802  067A                     l583:
  7803  067A  0008               	return
  7804  067B                     __end_of_printf:
  7805                           
  7806                           	psect	text24
  7807  0943                     __ptext24:	
  7808 ;; *************** function _putch *****************
  7809 ;; Defined at:
  7810 ;;		line 38 in file "display.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  c               1    wreg     unsigned char 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  c               1    0[BANK0 ] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7824 ;;      Params:         0       0       0       0       0
  7825 ;;      Locals:         0       1       0       0       0
  7826 ;;      Temps:          0       0       0       0       0
  7827 ;;      Totals:         0       1       0       0       0
  7828 ;;Total ram usage:        1 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    2
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_printf
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _putch
  7840  0943                     _putch:
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _putch: [wreg]
  7844                           ;putch@c stored from wreg
  7845  0943  1283               	bcf	3,5	;RP0=0, select bank0
  7846  0944  1303               	bcf	3,6	;RP1=0, select bank0
  7847  0945  00A0               	movwf	putch@c
  7848  0946                     l2229:
  7849  0946                     l144:	
  7850                           ;display.c: 39: while (!TXIF)
  7851                           
  7852  0946  1E0C               	btfss	12,4	;volatile
  7853  0947  2949               	goto	u2171
  7854  0948  294A               	goto	u2170
  7855  0949                     u2171:
  7856  0949  2946               	goto	l144
  7857  094A                     u2170:
  7858  094A                     l2231:
  7859                           
  7860                           ;display.c: 41: TXREG = c;
  7861  094A  0820               	movf	putch@c,w
  7862  094B  0099               	movwf	25	;volatile
  7863  094C                     l147:
  7864  094C  0008               	return
  7865  094D                     __end_of_putch:
  7866                           
  7867                           	psect	text25
  7868  1FBE                     __ptext25:	
  7869 ;; *************** function _isdigit *****************
  7870 ;; Defined at:
  7871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  c               1    wreg     unsigned char 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  c               1    1[BANK0 ] unsigned char 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;		None               void
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7885 ;;      Params:         0       0       0       0       0
  7886 ;;      Locals:         0       2       0       0       0
  7887 ;;      Temps:          0       0       0       0       0
  7888 ;;      Totals:         0       2       0       0       0
  7889 ;;Total ram usage:        2 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    2
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_printf
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function _isdigit
  7901  1FBE                     _isdigit:
  7902                           
  7903                           ;incstack = 0
  7904                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7905                           ;isdigit@c stored from wreg
  7906  1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7907  1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7908  1FC0  00A1               	movwf	isdigit@c
  7909  1FC1                     l2233:
  7910  1FC1  01A0               	clrf	_isdigit$1201
  7911  1FC2                     l2235:
  7912  1FC2  303A               	movlw	58
  7913  1FC3  0221               	subwf	isdigit@c,w
  7914  1FC4  1803               	skipnc
  7915  1FC5  2FC7               	goto	u2181
  7916  1FC6  2FC8               	goto	u2180
  7917  1FC7                     u2181:
  7918  1FC7  2FD0               	goto	l2241
  7919  1FC8                     u2180:
  7920  1FC8                     l2237:
  7921  1FC8  3030               	movlw	48
  7922  1FC9  0221               	subwf	isdigit@c,w
  7923  1FCA  1C03               	skipc
  7924  1FCB  2FCD               	goto	u2191
  7925  1FCC  2FCE               	goto	u2190
  7926  1FCD                     u2191:
  7927  1FCD  2FD0               	goto	l2241
  7928  1FCE                     u2190:
  7929  1FCE                     l2239:
  7930  1FCE  01A0               	clrf	_isdigit$1201
  7931  1FCF  0AA0               	incf	_isdigit$1201,f
  7932  1FD0                     l2241:
  7933  1FD0  0C20               	rrf	_isdigit$1201,w
  7934  1FD1                     l1015:
  7935  1FD1  0008               	return
  7936  1FD2                     __end_of_isdigit:
  7937                           
  7938                           	psect	text26
  7939  1082                     __ptext26:	
  7940 ;; *************** function ___wmul *****************
  7941 ;; Defined at:
  7942 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7945 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  product         2    4[BANK0 ] unsigned int 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  2    0[BANK0 ] unsigned int 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7957 ;;      Params:         0       4       0       0       0
  7958 ;;      Locals:         0       2       0       0       0
  7959 ;;      Temps:          0       0       0       0       0
  7960 ;;      Totals:         0       6       0       0       0
  7961 ;;Total ram usage:        6 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    2
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_read_temperatura_interior
  7968 ;;		_read_temperatura_exterior
  7969 ;;		_read_humedad
  7970 ;;		_read_intensidad_lumninosa
  7971 ;;		_read_potenciometro
  7972 ;;		_set_Ventilador
  7973 ;;		_logica_Actuadores
  7974 ;;		_printf
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           
  7979                           ;psect for function ___wmul
  7980  1082                     ___wmul:
  7981  1082                     l2245:	
  7982                           ;incstack = 0
  7983                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7984                           
  7985  1082  1283               	bcf	3,5	;RP0=0, select bank0
  7986  1083  1303               	bcf	3,6	;RP1=0, select bank0
  7987  1084  01A4               	clrf	___wmul@product
  7988  1085  01A5               	clrf	___wmul@product+1
  7989  1086                     l2247:
  7990  1086  1C20               	btfss	___wmul@multiplier,0
  7991  1087  2889               	goto	u2201
  7992  1088  288A               	goto	u2200
  7993  1089                     u2201:
  7994  1089  2890               	goto	l587
  7995  108A                     u2200:
  7996  108A                     l2249:
  7997  108A  0822               	movf	___wmul@multiplicand,w
  7998  108B  07A4               	addwf	___wmul@product,f
  7999  108C  1803               	skipnc
  8000  108D  0AA5               	incf	___wmul@product+1,f
  8001  108E  0823               	movf	___wmul@multiplicand+1,w
  8002  108F  07A5               	addwf	___wmul@product+1,f
  8003  1090                     l587:
  8004  1090  3001               	movlw	1
  8005  1091                     u2215:
  8006  1091  1003               	clrc
  8007  1092  0DA2               	rlf	___wmul@multiplicand,f
  8008  1093  0DA3               	rlf	___wmul@multiplicand+1,f
  8009  1094  3EFF               	addlw	-1
  8010  1095  1D03               	skipz
  8011  1096  2891               	goto	u2215
  8012  1097                     l2251:
  8013  1097  3001               	movlw	1
  8014  1098                     u2225:
  8015  1098  1003               	clrc
  8016  1099  0CA1               	rrf	___wmul@multiplier+1,f
  8017  109A  0CA0               	rrf	___wmul@multiplier,f
  8018  109B  3EFF               	addlw	-1
  8019  109C  1D03               	skipz
  8020  109D  2898               	goto	u2225
  8021  109E                     l2253:
  8022  109E  0820               	movf	___wmul@multiplier,w
  8023  109F  0421               	iorwf	___wmul@multiplier+1,w
  8024  10A0  1D03               	btfss	3,2
  8025  10A1  28A3               	goto	u2231
  8026  10A2  28A4               	goto	u2230
  8027  10A3                     u2231:
  8028  10A3  2886               	goto	l2247
  8029  10A4                     u2230:
  8030  10A4                     l2255:
  8031  10A4  0825               	movf	___wmul@product+1,w
  8032  10A5  00A1               	movwf	?___wmul+1
  8033  10A6  0824               	movf	___wmul@product,w
  8034  10A7  00A0               	movwf	?___wmul
  8035  10A8                     l589:
  8036  10A8  0008               	return
  8037  10A9                     __end_of___wmul:
  8038                           
  8039                           	psect	text27
  8040  1199                     __ptext27:	
  8041 ;; *************** function ___lwmod *****************
  8042 ;; Defined at:
  8043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  divisor         2    8[BANK0 ] unsigned int 
  8046 ;;  dividend        2   10[BANK0 ] unsigned int 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  counter         1   13[BANK0 ] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  2    8[BANK0 ] unsigned int 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8058 ;;      Params:         0       4       0       0       0
  8059 ;;      Locals:         0       1       0       0       0
  8060 ;;      Temps:          0       1       0       0       0
  8061 ;;      Totals:         0       6       0       0       0
  8062 ;;Total ram usage:        6 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    2
  8065 ;; This function calls:
  8066 ;;		Nothing
  8067 ;; This function is called by:
  8068 ;;		_printf
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           
  8073                           ;psect for function ___lwmod
  8074  1199                     ___lwmod:
  8075  1199                     l2455:	
  8076                           ;incstack = 0
  8077                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8078                           
  8079  1199  1283               	bcf	3,5	;RP0=0, select bank0
  8080  119A  1303               	bcf	3,6	;RP1=0, select bank0
  8081  119B  0828               	movf	___lwmod@divisor,w
  8082  119C  0429               	iorwf	___lwmod@divisor+1,w
  8083  119D  1903               	btfsc	3,2
  8084  119E  29A0               	goto	u2771
  8085  119F  29A1               	goto	u2770
  8086  11A0                     u2771:
  8087  11A0  29D0               	goto	l2473
  8088  11A1                     u2770:
  8089  11A1                     l2457:
  8090  11A1  01AD               	clrf	___lwmod@counter
  8091  11A2  0AAD               	incf	___lwmod@counter,f
  8092  11A3  29AF               	goto	l2463
  8093  11A4                     l2459:
  8094  11A4  3001               	movlw	1
  8095  11A5                     u2785:
  8096  11A5  1003               	clrc
  8097  11A6  0DA8               	rlf	___lwmod@divisor,f
  8098  11A7  0DA9               	rlf	___lwmod@divisor+1,f
  8099  11A8  3EFF               	addlw	-1
  8100  11A9  1D03               	skipz
  8101  11AA  29A5               	goto	u2785
  8102  11AB                     l2461:
  8103  11AB  3001               	movlw	1
  8104  11AC  00AC               	movwf	??___lwmod
  8105  11AD  082C               	movf	??___lwmod,w
  8106  11AE  07AD               	addwf	___lwmod@counter,f
  8107  11AF                     l2463:
  8108  11AF  1FA9               	btfss	___lwmod@divisor+1,7
  8109  11B0  29B2               	goto	u2791
  8110  11B1  29B3               	goto	u2790
  8111  11B2                     u2791:
  8112  11B2  29A4               	goto	l2459
  8113  11B3                     u2790:
  8114  11B3                     l2465:
  8115  11B3  0829               	movf	___lwmod@divisor+1,w
  8116  11B4  022B               	subwf	___lwmod@dividend+1,w
  8117  11B5  1D03               	skipz
  8118  11B6  29B9               	goto	u2805
  8119  11B7  0828               	movf	___lwmod@divisor,w
  8120  11B8  022A               	subwf	___lwmod@dividend,w
  8121  11B9                     u2805:
  8122  11B9  1C03               	skipc
  8123  11BA  29BC               	goto	u2801
  8124  11BB  29BD               	goto	u2800
  8125  11BC                     u2801:
  8126  11BC  29C3               	goto	l2469
  8127  11BD                     u2800:
  8128  11BD                     l2467:
  8129  11BD  0828               	movf	___lwmod@divisor,w
  8130  11BE  02AA               	subwf	___lwmod@dividend,f
  8131  11BF  0829               	movf	___lwmod@divisor+1,w
  8132  11C0  1C03               	skipc
  8133  11C1  03AB               	decf	___lwmod@dividend+1,f
  8134  11C2  02AB               	subwf	___lwmod@dividend+1,f
  8135  11C3                     l2469:
  8136  11C3  3001               	movlw	1
  8137  11C4                     u2815:
  8138  11C4  1003               	clrc
  8139  11C5  0CA9               	rrf	___lwmod@divisor+1,f
  8140  11C6  0CA8               	rrf	___lwmod@divisor,f
  8141  11C7  3EFF               	addlw	-1
  8142  11C8  1D03               	skipz
  8143  11C9  29C4               	goto	u2815
  8144  11CA                     l2471:
  8145  11CA  3001               	movlw	1
  8146  11CB  02AD               	subwf	___lwmod@counter,f
  8147  11CC  1D03               	btfss	3,2
  8148  11CD  29CF               	goto	u2821
  8149  11CE  29D0               	goto	u2820
  8150  11CF                     u2821:
  8151  11CF  29B3               	goto	l2465
  8152  11D0                     u2820:
  8153  11D0                     l2473:
  8154  11D0  082B               	movf	___lwmod@dividend+1,w
  8155  11D1  00A9               	movwf	?___lwmod+1
  8156  11D2  082A               	movf	___lwmod@dividend,w
  8157  11D3  00A8               	movwf	?___lwmod
  8158  11D4                     l1005:
  8159  11D4  0008               	return
  8160  11D5                     __end_of___lwmod:
  8161                           
  8162                           	psect	text28
  8163  11D5                     __ptext28:	
  8164 ;; *************** function ___lwdiv *****************
  8165 ;; Defined at:
  8166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  divisor         2    0[BANK0 ] unsigned int 
  8169 ;;  dividend        2    2[BANK0 ] unsigned int 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  quotient        2    5[BANK0 ] unsigned int 
  8172 ;;  counter         1    7[BANK0 ] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2    0[BANK0 ] unsigned int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8182 ;;      Params:         0       4       0       0       0
  8183 ;;      Locals:         0       3       0       0       0
  8184 ;;      Temps:          0       1       0       0       0
  8185 ;;      Totals:         0       8       0       0       0
  8186 ;;Total ram usage:        8 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    2
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_printf
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function ___lwdiv
  8198  11D5                     ___lwdiv:
  8199  11D5                     l2429:	
  8200                           ;incstack = 0
  8201                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8202                           
  8203  11D5  1283               	bcf	3,5	;RP0=0, select bank0
  8204  11D6  1303               	bcf	3,6	;RP1=0, select bank0
  8205  11D7  01A5               	clrf	___lwdiv@quotient
  8206  11D8  01A6               	clrf	___lwdiv@quotient+1
  8207  11D9                     l2431:
  8208  11D9  0820               	movf	___lwdiv@divisor,w
  8209  11DA  0421               	iorwf	___lwdiv@divisor+1,w
  8210  11DB  1903               	btfsc	3,2
  8211  11DC  29DE               	goto	u2701
  8212  11DD  29DF               	goto	u2700
  8213  11DE                     u2701:
  8214  11DE  2A16               	goto	l2451
  8215  11DF                     u2700:
  8216  11DF                     l2433:
  8217  11DF  01A7               	clrf	___lwdiv@counter
  8218  11E0  0AA7               	incf	___lwdiv@counter,f
  8219  11E1  29ED               	goto	l2439
  8220  11E2                     l2435:
  8221  11E2  3001               	movlw	1
  8222  11E3                     u2715:
  8223  11E3  1003               	clrc
  8224  11E4  0DA0               	rlf	___lwdiv@divisor,f
  8225  11E5  0DA1               	rlf	___lwdiv@divisor+1,f
  8226  11E6  3EFF               	addlw	-1
  8227  11E7  1D03               	skipz
  8228  11E8  29E3               	goto	u2715
  8229  11E9                     l2437:
  8230  11E9  3001               	movlw	1
  8231  11EA  00A4               	movwf	??___lwdiv
  8232  11EB  0824               	movf	??___lwdiv,w
  8233  11EC  07A7               	addwf	___lwdiv@counter,f
  8234  11ED                     l2439:
  8235  11ED  1FA1               	btfss	___lwdiv@divisor+1,7
  8236  11EE  29F0               	goto	u2721
  8237  11EF  29F1               	goto	u2720
  8238  11F0                     u2721:
  8239  11F0  29E2               	goto	l2435
  8240  11F1                     u2720:
  8241  11F1                     l2441:
  8242  11F1  3001               	movlw	1
  8243  11F2                     u2735:
  8244  11F2  1003               	clrc
  8245  11F3  0DA5               	rlf	___lwdiv@quotient,f
  8246  11F4  0DA6               	rlf	___lwdiv@quotient+1,f
  8247  11F5  3EFF               	addlw	-1
  8248  11F6  1D03               	skipz
  8249  11F7  29F2               	goto	u2735
  8250  11F8  0821               	movf	___lwdiv@divisor+1,w
  8251  11F9  0223               	subwf	___lwdiv@dividend+1,w
  8252  11FA  1D03               	skipz
  8253  11FB  29FE               	goto	u2745
  8254  11FC  0820               	movf	___lwdiv@divisor,w
  8255  11FD  0222               	subwf	___lwdiv@dividend,w
  8256  11FE                     u2745:
  8257  11FE  1C03               	skipc
  8258  11FF  2A01               	goto	u2741
  8259  1200  2A02               	goto	u2740
  8260  1201                     u2741:
  8261  1201  2A09               	goto	l2447
  8262  1202                     u2740:
  8263  1202                     l2443:
  8264  1202  0820               	movf	___lwdiv@divisor,w
  8265  1203  02A2               	subwf	___lwdiv@dividend,f
  8266  1204  0821               	movf	___lwdiv@divisor+1,w
  8267  1205  1C03               	skipc
  8268  1206  03A3               	decf	___lwdiv@dividend+1,f
  8269  1207  02A3               	subwf	___lwdiv@dividend+1,f
  8270  1208                     l2445:
  8271  1208  1425               	bsf	___lwdiv@quotient,0
  8272  1209                     l2447:
  8273  1209  3001               	movlw	1
  8274  120A                     u2755:
  8275  120A  1003               	clrc
  8276  120B  0CA1               	rrf	___lwdiv@divisor+1,f
  8277  120C  0CA0               	rrf	___lwdiv@divisor,f
  8278  120D  3EFF               	addlw	-1
  8279  120E  1D03               	skipz
  8280  120F  2A0A               	goto	u2755
  8281  1210                     l2449:
  8282  1210  3001               	movlw	1
  8283  1211  02A7               	subwf	___lwdiv@counter,f
  8284  1212  1D03               	btfss	3,2
  8285  1213  2A15               	goto	u2761
  8286  1214  2A16               	goto	u2760
  8287  1215                     u2761:
  8288  1215  29F1               	goto	l2441
  8289  1216                     u2760:
  8290  1216                     l2451:
  8291  1216  0826               	movf	___lwdiv@quotient+1,w
  8292  1217  00A1               	movwf	?___lwdiv+1
  8293  1218  0825               	movf	___lwdiv@quotient,w
  8294  1219  00A0               	movwf	?___lwdiv
  8295  121A                     l995:
  8296  121A  0008               	return
  8297  121B                     __end_of___lwdiv:
  8298                           
  8299                           	psect	text29
  8300  1FD2                     __ptext29:	
  8301 ;; *************** function ___bmul *****************
  8302 ;; Defined at:
  8303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul8.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  multiplier      1    wreg     unsigned char 
  8306 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  multiplier      1    3[BANK0 ] unsigned char 
  8309 ;;  product         1    2[BANK0 ] unsigned char 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      unsigned char 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8319 ;;      Params:         0       1       0       0       0
  8320 ;;      Locals:         0       2       0       0       0
  8321 ;;      Temps:          0       1       0       0       0
  8322 ;;      Totals:         0       4       0       0       0
  8323 ;;Total ram usage:        4 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    2
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_printf
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function ___bmul
  8335  1FD2                     ___bmul:
  8336                           
  8337                           ;incstack = 0
  8338                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8339                           ;___bmul@multiplier stored from wreg
  8340  1FD2  1283               	bcf	3,5	;RP0=0, select bank0
  8341  1FD3  1303               	bcf	3,6	;RP1=0, select bank0
  8342  1FD4  00A3               	movwf	___bmul@multiplier
  8343  1FD5                     l2259:
  8344  1FD5  01A2               	clrf	___bmul@product
  8345  1FD6                     l2261:
  8346  1FD6  1C23               	btfss	___bmul@multiplier,0
  8347  1FD7  2FD9               	goto	u2241
  8348  1FD8  2FDA               	goto	u2240
  8349  1FD9                     u2241:
  8350  1FD9  2FDE               	goto	l2265
  8351  1FDA                     u2240:
  8352  1FDA                     l2263:
  8353  1FDA  0820               	movf	___bmul@multiplicand,w
  8354  1FDB  00A1               	movwf	??___bmul
  8355  1FDC  0821               	movf	??___bmul,w
  8356  1FDD  07A2               	addwf	___bmul@product,f
  8357  1FDE                     l2265:
  8358  1FDE  1003               	clrc
  8359  1FDF  0DA0               	rlf	___bmul@multiplicand,f
  8360  1FE0                     l2267:
  8361  1FE0  1003               	clrc
  8362  1FE1  0CA3               	rrf	___bmul@multiplier,f
  8363  1FE2  0823               	movf	___bmul@multiplier,w
  8364  1FE3  1D03               	btfss	3,2
  8365  1FE4  2FE6               	goto	u2251
  8366  1FE5  2FE7               	goto	u2250
  8367  1FE6                     u2251:
  8368  1FE6  2FD6               	goto	l2261
  8369  1FE7                     u2250:
  8370  1FE7                     l2269:
  8371  1FE7  0822               	movf	___bmul@product,w
  8372  1FE8                     l613:
  8373  1FE8  0008               	return
  8374  1FE9                     __end_of___bmul:
  8375                           
  8376                           	psect	text30
  8377  1F69                     __ptext30:	
  8378 ;; *************** function _get_temperatura_interior *****************
  8379 ;; Defined at:
  8380 ;;		line 71 in file "sensores.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  2    0[BANK0 ] int 
  8387 ;; Registers used:
  8388 ;;		wreg
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8394 ;;      Params:         0       2       0       0       0
  8395 ;;      Locals:         0       0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0
  8397 ;;      Totals:         0       2       0       0       0
  8398 ;;Total ram usage:        2 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    2
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_read_temperatura_interior
  8405 ;;		_mostrarDatos
  8406 ;;		_logica_Actuadores
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function _get_temperatura_interior
  8412  1F69                     _get_temperatura_interior:
  8413  1F69                     l2477:	
  8414                           ;incstack = 0
  8415                           ; Regs used in _get_temperatura_interior: [wreg]
  8416                           
  8417                           
  8418                           ;sensores.c: 73: return tempint;
  8419  1F69  1683               	bsf	3,5	;RP0=1, select bank1
  8420  1F6A  1303               	bcf	3,6	;RP1=0, select bank1
  8421  1F6B  0866               	movf	(_tempint+1)^(0+128),w
  8422  1F6C  1283               	bcf	3,5	;RP0=0, select bank0
  8423  1F6D  1303               	bcf	3,6	;RP1=0, select bank0
  8424  1F6E  00A1               	movwf	?_get_temperatura_interior+1
  8425  1F6F  1683               	bsf	3,5	;RP0=1, select bank1
  8426  1F70  1303               	bcf	3,6	;RP1=0, select bank1
  8427  1F71  0865               	movf	_tempint^(0+128),w
  8428  1F72  1283               	bcf	3,5	;RP0=0, select bank0
  8429  1F73  1303               	bcf	3,6	;RP1=0, select bank0
  8430  1F74  00A0               	movwf	?_get_temperatura_interior
  8431  1F75                     l50:
  8432  1F75  0008               	return
  8433  1F76                     __end_of_get_temperatura_interior:
  8434                           
  8435                           	psect	text31
  8436  1128                     __ptext31:	
  8437 ;; *************** function _get_tempObjetivo *****************
  8438 ;; Defined at:
  8439 ;;		line 187 in file "sensores.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;		None
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  2   15[BANK0 ] int 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2, status,0, pclath, cstack
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8453 ;;      Params:         0       2       0       0       0
  8454 ;;      Locals:         0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0
  8456 ;;      Totals:         0       2       0       0       0
  8457 ;;Total ram usage:        2 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    3
  8460 ;; This function calls:
  8461 ;;		___awdiv
  8462 ;; This function is called by:
  8463 ;;		_read_potenciometro
  8464 ;;		_mostrarConsigna
  8465 ;;		_logica_Actuadores
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function _get_tempObjetivo
  8471  1128                     _get_tempObjetivo:
  8472  1128                     l2795:	
  8473                           ;incstack = 0
  8474                           ; Regs used in _get_tempObjetivo: [wreg+status,2+status,0+pclath+cstack]
  8475                           
  8476                           
  8477                           ;sensores.c: 189: if (numeroLecturas == 4) {
  8478  1128  3004               	movlw	4
  8479  1129  1683               	bsf	3,5	;RP0=1, select bank1
  8480  112A  1303               	bcf	3,6	;RP1=0, select bank1
  8481  112B  065B               	xorwf	_numeroLecturas^(0+128),w
  8482  112C  045C               	iorwf	(_numeroLecturas+1)^(0+128),w
  8483  112D  1D03               	btfss	3,2
  8484  112E  2930               	goto	u3451
  8485  112F  2931               	goto	u3450
  8486  1130                     u3451:
  8487  1130  2958               	goto	l2803
  8488  1131                     u3450:
  8489  1131                     l2797:
  8490                           
  8491                           ;sensores.c: 190: tempObjetivo = sumaLecturas / numeroLecturas;
  8492  1131  085C               	movf	(_numeroLecturas+1)^(0+128),w
  8493  1132  1283               	bcf	3,5	;RP0=0, select bank0
  8494  1133  1303               	bcf	3,6	;RP1=0, select bank0
  8495  1134  00A7               	movwf	___awdiv@divisor+1
  8496  1135  1683               	bsf	3,5	;RP0=1, select bank1
  8497  1136  1303               	bcf	3,6	;RP1=0, select bank1
  8498  1137  085B               	movf	_numeroLecturas^(0+128),w
  8499  1138  1283               	bcf	3,5	;RP0=0, select bank0
  8500  1139  1303               	bcf	3,6	;RP1=0, select bank0
  8501  113A  00A6               	movwf	___awdiv@divisor
  8502  113B  1683               	bsf	3,5	;RP0=1, select bank1
  8503  113C  1303               	bcf	3,6	;RP1=0, select bank1
  8504  113D  085E               	movf	(_sumaLecturas+1)^(0+128),w
  8505  113E  1283               	bcf	3,5	;RP0=0, select bank0
  8506  113F  1303               	bcf	3,6	;RP1=0, select bank0
  8507  1140  00A9               	movwf	___awdiv@dividend+1
  8508  1141  1683               	bsf	3,5	;RP0=1, select bank1
  8509  1142  1303               	bcf	3,6	;RP1=0, select bank1
  8510  1143  085D               	movf	_sumaLecturas^(0+128),w
  8511  1144  1283               	bcf	3,5	;RP0=0, select bank0
  8512  1145  1303               	bcf	3,6	;RP1=0, select bank0
  8513  1146  00A8               	movwf	___awdiv@dividend
  8514  1147  160A  118A  2274  160A  118A  	fcall	___awdiv
  8515  114C  1283               	bcf	3,5	;RP0=0, select bank0
  8516  114D  1303               	bcf	3,6	;RP1=0, select bank0
  8517  114E  0827               	movf	?___awdiv+1,w
  8518  114F  00FD               	movwf	_tempObjetivo+1
  8519  1150  0826               	movf	?___awdiv,w
  8520  1151  00FC               	movwf	_tempObjetivo
  8521  1152                     l2799:
  8522                           
  8523                           ;sensores.c: 191: sumaLecturas = 0;
  8524  1152  1683               	bsf	3,5	;RP0=1, select bank1
  8525  1153  1303               	bcf	3,6	;RP1=0, select bank1
  8526  1154  01DD               	clrf	_sumaLecturas^(0+128)
  8527  1155  01DE               	clrf	(_sumaLecturas+1)^(0+128)
  8528  1156                     l2801:
  8529                           
  8530                           ;sensores.c: 192: numeroLecturas = 0;
  8531  1156  01DB               	clrf	_numeroLecturas^(0+128)
  8532  1157  01DC               	clrf	(_numeroLecturas+1)^(0+128)
  8533  1158                     l2803:
  8534                           
  8535                           ;sensores.c: 193: };sensores.c: 194: return tempObjetivo;
  8536  1158  087D               	movf	_tempObjetivo+1,w
  8537  1159  1283               	bcf	3,5	;RP0=0, select bank0
  8538  115A  1303               	bcf	3,6	;RP1=0, select bank0
  8539  115B  00B0               	movwf	?_get_tempObjetivo+1
  8540  115C  087C               	movf	_tempObjetivo,w
  8541  115D  00AF               	movwf	?_get_tempObjetivo
  8542  115E                     l87:
  8543  115E  0008               	return
  8544  115F                     __end_of_get_tempObjetivo:
  8545                           
  8546                           	psect	text32
  8547  1274                     __ptext32:	
  8548 ;; *************** function ___awdiv *****************
  8549 ;; Defined at:
  8550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  divisor         2    6[BANK0 ] int 
  8553 ;;  dividend        2    8[BANK0 ] int 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  quotient        2   13[BANK0 ] int 
  8556 ;;  sign            1   12[BANK0 ] unsigned char 
  8557 ;;  counter         1   11[BANK0 ] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  2    6[BANK0 ] int 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8567 ;;      Params:         0       4       0       0       0
  8568 ;;      Locals:         0       4       0       0       0
  8569 ;;      Temps:          0       1       0       0       0
  8570 ;;      Totals:         0       9       0       0       0
  8571 ;;Total ram usage:        9 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    2
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_get_tempObjetivo
  8578 ;;		_set_Ventilador
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function ___awdiv
  8584  1274                     ___awdiv:
  8585  1274                     l2273:	
  8586                           ;incstack = 0
  8587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8588                           
  8589  1274  1283               	bcf	3,5	;RP0=0, select bank0
  8590  1275  1303               	bcf	3,6	;RP1=0, select bank0
  8591  1276  01AC               	clrf	___awdiv@sign
  8592  1277                     l2275:
  8593  1277  1FA7               	btfss	___awdiv@divisor+1,7
  8594  1278  2A7A               	goto	u2261
  8595  1279  2A7B               	goto	u2260
  8596  127A                     u2261:
  8597  127A  2A82               	goto	l2281
  8598  127B                     u2260:
  8599  127B                     l2277:
  8600  127B  09A6               	comf	___awdiv@divisor,f
  8601  127C  09A7               	comf	___awdiv@divisor+1,f
  8602  127D  0AA6               	incf	___awdiv@divisor,f
  8603  127E  1903               	skipnz
  8604  127F  0AA7               	incf	___awdiv@divisor+1,f
  8605  1280                     l2279:
  8606  1280  01AC               	clrf	___awdiv@sign
  8607  1281  0AAC               	incf	___awdiv@sign,f
  8608  1282                     l2281:
  8609  1282  1FA9               	btfss	___awdiv@dividend+1,7
  8610  1283  2A85               	goto	u2271
  8611  1284  2A86               	goto	u2270
  8612  1285                     u2271:
  8613  1285  2A8F               	goto	l2287
  8614  1286                     u2270:
  8615  1286                     l2283:
  8616  1286  09A8               	comf	___awdiv@dividend,f
  8617  1287  09A9               	comf	___awdiv@dividend+1,f
  8618  1288  0AA8               	incf	___awdiv@dividend,f
  8619  1289  1903               	skipnz
  8620  128A  0AA9               	incf	___awdiv@dividend+1,f
  8621  128B                     l2285:
  8622  128B  3001               	movlw	1
  8623  128C  00AA               	movwf	??___awdiv
  8624  128D  082A               	movf	??___awdiv,w
  8625  128E  06AC               	xorwf	___awdiv@sign,f
  8626  128F                     l2287:
  8627  128F  01AD               	clrf	___awdiv@quotient
  8628  1290  01AE               	clrf	___awdiv@quotient+1
  8629  1291                     l2289:
  8630  1291  0826               	movf	___awdiv@divisor,w
  8631  1292  0427               	iorwf	___awdiv@divisor+1,w
  8632  1293  1903               	btfsc	3,2
  8633  1294  2A96               	goto	u2281
  8634  1295  2A97               	goto	u2280
  8635  1296                     u2281:
  8636  1296  2ACE               	goto	l2309
  8637  1297                     u2280:
  8638  1297                     l2291:
  8639  1297  01AB               	clrf	___awdiv@counter
  8640  1298  0AAB               	incf	___awdiv@counter,f
  8641  1299  2AA5               	goto	l2297
  8642  129A                     l2293:
  8643  129A  3001               	movlw	1
  8644  129B                     u2295:
  8645  129B  1003               	clrc
  8646  129C  0DA6               	rlf	___awdiv@divisor,f
  8647  129D  0DA7               	rlf	___awdiv@divisor+1,f
  8648  129E  3EFF               	addlw	-1
  8649  129F  1D03               	skipz
  8650  12A0  2A9B               	goto	u2295
  8651  12A1                     l2295:
  8652  12A1  3001               	movlw	1
  8653  12A2  00AA               	movwf	??___awdiv
  8654  12A3  082A               	movf	??___awdiv,w
  8655  12A4  07AB               	addwf	___awdiv@counter,f
  8656  12A5                     l2297:
  8657  12A5  1FA7               	btfss	___awdiv@divisor+1,7
  8658  12A6  2AA8               	goto	u2301
  8659  12A7  2AA9               	goto	u2300
  8660  12A8                     u2301:
  8661  12A8  2A9A               	goto	l2293
  8662  12A9                     u2300:
  8663  12A9                     l2299:
  8664  12A9  3001               	movlw	1
  8665  12AA                     u2315:
  8666  12AA  1003               	clrc
  8667  12AB  0DAD               	rlf	___awdiv@quotient,f
  8668  12AC  0DAE               	rlf	___awdiv@quotient+1,f
  8669  12AD  3EFF               	addlw	-1
  8670  12AE  1D03               	skipz
  8671  12AF  2AAA               	goto	u2315
  8672  12B0  0827               	movf	___awdiv@divisor+1,w
  8673  12B1  0229               	subwf	___awdiv@dividend+1,w
  8674  12B2  1D03               	skipz
  8675  12B3  2AB6               	goto	u2325
  8676  12B4  0826               	movf	___awdiv@divisor,w
  8677  12B5  0228               	subwf	___awdiv@dividend,w
  8678  12B6                     u2325:
  8679  12B6  1C03               	skipc
  8680  12B7  2AB9               	goto	u2321
  8681  12B8  2ABA               	goto	u2320
  8682  12B9                     u2321:
  8683  12B9  2AC1               	goto	l2305
  8684  12BA                     u2320:
  8685  12BA                     l2301:
  8686  12BA  0826               	movf	___awdiv@divisor,w
  8687  12BB  02A8               	subwf	___awdiv@dividend,f
  8688  12BC  0827               	movf	___awdiv@divisor+1,w
  8689  12BD  1C03               	skipc
  8690  12BE  03A9               	decf	___awdiv@dividend+1,f
  8691  12BF  02A9               	subwf	___awdiv@dividend+1,f
  8692  12C0                     l2303:
  8693  12C0  142D               	bsf	___awdiv@quotient,0
  8694  12C1                     l2305:
  8695  12C1  3001               	movlw	1
  8696  12C2                     u2335:
  8697  12C2  1003               	clrc
  8698  12C3  0CA7               	rrf	___awdiv@divisor+1,f
  8699  12C4  0CA6               	rrf	___awdiv@divisor,f
  8700  12C5  3EFF               	addlw	-1
  8701  12C6  1D03               	skipz
  8702  12C7  2AC2               	goto	u2335
  8703  12C8                     l2307:
  8704  12C8  3001               	movlw	1
  8705  12C9  02AB               	subwf	___awdiv@counter,f
  8706  12CA  1D03               	btfss	3,2
  8707  12CB  2ACD               	goto	u2341
  8708  12CC  2ACE               	goto	u2340
  8709  12CD                     u2341:
  8710  12CD  2AA9               	goto	l2299
  8711  12CE                     u2340:
  8712  12CE                     l2309:
  8713  12CE  082C               	movf	___awdiv@sign,w
  8714  12CF  1903               	btfsc	3,2
  8715  12D0  2AD2               	goto	u2351
  8716  12D1  2AD3               	goto	u2350
  8717  12D2                     u2351:
  8718  12D2  2AD8               	goto	l2313
  8719  12D3                     u2350:
  8720  12D3                     l2311:
  8721  12D3  09AD               	comf	___awdiv@quotient,f
  8722  12D4  09AE               	comf	___awdiv@quotient+1,f
  8723  12D5  0AAD               	incf	___awdiv@quotient,f
  8724  12D6  1903               	skipnz
  8725  12D7  0AAE               	incf	___awdiv@quotient+1,f
  8726  12D8                     l2313:
  8727  12D8  082E               	movf	___awdiv@quotient+1,w
  8728  12D9  00A7               	movwf	?___awdiv+1
  8729  12DA  082D               	movf	___awdiv@quotient,w
  8730  12DB  00A6               	movwf	?___awdiv
  8731  12DC                     l770:
  8732  12DC  0008               	return
  8733  12DD                     __end_of___awdiv:
  8734                           
  8735                           	psect	text33
  8736  1FAB                     __ptext33:	
  8737 ;; *************** function _get_lastPotenciometro *****************
  8738 ;; Defined at:
  8739 ;;		line 197 in file "sensores.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  3    0[BANK0 ] float 
  8746 ;; Registers used:
  8747 ;;		wreg
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8753 ;;      Params:         0       3       0       0       0
  8754 ;;      Locals:         0       0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0
  8756 ;;      Totals:         0       3       0       0       0
  8757 ;;Total ram usage:        3 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    2
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_logica_Actuadores
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function _get_lastPotenciometro
  8769  1FAB                     _get_lastPotenciometro:
  8770  1FAB                     l2807:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _get_lastPotenciometro: [wreg]
  8773                           
  8774                           
  8775                           ;sensores.c: 198: return lastPotenciometro;
  8776  1FAB  1683               	bsf	3,5	;RP0=1, select bank1
  8777  1FAC  1303               	bcf	3,6	;RP1=0, select bank1
  8778  1FAD  0852               	movf	_lastPotenciometro^(0+128),w
  8779  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
  8780  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
  8781  1FB0  00A0               	movwf	?_get_lastPotenciometro
  8782  1FB1  1683               	bsf	3,5	;RP0=1, select bank1
  8783  1FB2  1303               	bcf	3,6	;RP1=0, select bank1
  8784  1FB3  0853               	movf	(_lastPotenciometro+1)^(0+128),w
  8785  1FB4  1283               	bcf	3,5	;RP0=0, select bank0
  8786  1FB5  1303               	bcf	3,6	;RP1=0, select bank0
  8787  1FB6  00A1               	movwf	?_get_lastPotenciometro+1
  8788  1FB7  1683               	bsf	3,5	;RP0=1, select bank1
  8789  1FB8  1303               	bcf	3,6	;RP1=0, select bank1
  8790  1FB9  0854               	movf	(_lastPotenciometro+2)^(0+128),w
  8791  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8792  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8793  1FBC  00A2               	movwf	?_get_lastPotenciometro+2
  8794  1FBD                     l90:
  8795  1FBD  0008               	return
  8796  1FBE                     __end_of_get_lastPotenciometro:
  8797                           
  8798                           	psect	text34
  8799  1357                     __ptext34:	
  8800 ;; *************** function ___fttol *****************
  8801 ;; Defined at:
  8802 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  f1              3   59[BANK0 ] float 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  lval            4   68[BANK0 ] unsigned long 
  8807 ;;  exp1            1   72[BANK0 ] unsigned char 
  8808 ;;  sign1           1   67[BANK0 ] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  4   59[BANK0 ] long 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         0       4       0       0       0
  8819 ;;      Locals:         0       6       0       0       0
  8820 ;;      Temps:          0       4       0       0       0
  8821 ;;      Totals:         0      14       0       0       0
  8822 ;;Total ram usage:       14 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    2
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_read_temperatura_interior
  8829 ;;		_read_temperatura_exterior
  8830 ;;		_read_humedad
  8831 ;;		_read_intensidad_lumninosa
  8832 ;;		_read_potenciometro
  8833 ;;		_logica_Actuadores
  8834 ;;		_get_velocidad_ventilador
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           
  8839                           ;psect for function ___fttol
  8840  1357                     ___fttol:
  8841  1357                     l2387:	
  8842                           ;incstack = 0
  8843                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8844                           
  8845  1357  1283               	bcf	3,5	;RP0=0, select bank0
  8846  1358  1303               	bcf	3,6	;RP1=0, select bank0
  8847  1359  085B               	movf	___fttol@f1,w
  8848  135A  00DF               	movwf	??___fttol
  8849  135B  085C               	movf	___fttol@f1+1,w
  8850  135C  00E0               	movwf	??___fttol+1
  8851  135D  085D               	movf	___fttol@f1+2,w
  8852  135E  00E1               	movwf	??___fttol+2
  8853  135F  1003               	clrc
  8854  1360  0D60               	rlf	??___fttol+1,w
  8855  1361  0D61               	rlf	??___fttol+2,w
  8856  1362  00E2               	movwf	??___fttol+3
  8857  1363  0862               	movf	??___fttol+3,w
  8858  1364  00E8               	movwf	___fttol@exp1
  8859  1365  0868               	movf	___fttol@exp1,w
  8860  1366  1D03               	btfss	3,2
  8861  1367  2B69               	goto	u2601
  8862  1368  2B6A               	goto	u2600
  8863  1369                     u2601:
  8864  1369  2B73               	goto	l2393
  8865  136A                     u2600:
  8866  136A                     l2389:
  8867  136A  3000               	movlw	0
  8868  136B  00DE               	movwf	?___fttol+3
  8869  136C  3000               	movlw	0
  8870  136D  00DD               	movwf	?___fttol+2
  8871  136E  3000               	movlw	0
  8872  136F  00DC               	movwf	?___fttol+1
  8873  1370  3000               	movlw	0
  8874  1371  00DB               	movwf	?___fttol
  8875  1372  2BE2               	goto	l883
  8876  1373                     l2393:
  8877  1373  085B               	movf	___fttol@f1,w
  8878  1374  00DF               	movwf	??___fttol
  8879  1375  085C               	movf	___fttol@f1+1,w
  8880  1376  00E0               	movwf	??___fttol+1
  8881  1377  085D               	movf	___fttol@f1+2,w
  8882  1378  00E1               	movwf	??___fttol+2
  8883  1379  3017               	movlw	23
  8884  137A                     u2615:
  8885  137A  1003               	clrc
  8886  137B  0CE1               	rrf	??___fttol+2,f
  8887  137C  0CE0               	rrf	??___fttol+1,f
  8888  137D  0CDF               	rrf	??___fttol,f
  8889  137E                     u2610:
  8890  137E  3EFF               	addlw	-1
  8891  137F  1D03               	skipz
  8892  1380  2B7A               	goto	u2615
  8893  1381  085F               	movf	??___fttol,w
  8894  1382  00E2               	movwf	??___fttol+3
  8895  1383  0862               	movf	??___fttol+3,w
  8896  1384  00E3               	movwf	___fttol@sign1
  8897  1385                     l2395:
  8898  1385  17DC               	bsf	___fttol@f1+1,7
  8899  1386                     l2397:
  8900  1386  30FF               	movlw	255
  8901  1387  05DB               	andwf	___fttol@f1,f
  8902  1388  30FF               	movlw	255
  8903  1389  05DC               	andwf	___fttol@f1+1,f
  8904  138A  3000               	movlw	0
  8905  138B  05DD               	andwf	___fttol@f1+2,f
  8906  138C                     l2399:
  8907  138C  085B               	movf	___fttol@f1,w
  8908  138D  00E4               	movwf	___fttol@lval
  8909  138E  085C               	movf	___fttol@f1+1,w
  8910  138F  00E5               	movwf	___fttol@lval+1
  8911  1390  085D               	movf	___fttol@f1+2,w
  8912  1391  00E6               	movwf	___fttol@lval+2
  8913  1392  01E7               	clrf	___fttol@lval+3
  8914  1393                     l2401:
  8915  1393  308E               	movlw	142
  8916  1394  02E8               	subwf	___fttol@exp1,f
  8917  1395                     l2403:
  8918  1395  1FE8               	btfss	___fttol@exp1,7
  8919  1396  2B98               	goto	u2621
  8920  1397  2B99               	goto	u2620
  8921  1398                     u2621:
  8922  1398  2BB3               	goto	l2413
  8923  1399                     u2620:
  8924  1399                     l2405:
  8925  1399  0868               	movf	___fttol@exp1,w
  8926  139A  3A80               	xorlw	128
  8927  139B  3E8F               	addlw	143
  8928  139C  1803               	skipnc
  8929  139D  2B9F               	goto	u2631
  8930  139E  2BA0               	goto	u2630
  8931  139F                     u2631:
  8932  139F  2BA1               	goto	l2411
  8933  13A0                     u2630:
  8934  13A0  2B6A               	goto	l2389
  8935  13A1                     l2411:
  8936  13A1  3001               	movlw	1
  8937  13A2                     u2645:
  8938  13A2  1003               	clrc
  8939  13A3  0CE7               	rrf	___fttol@lval+3,f
  8940  13A4  0CE6               	rrf	___fttol@lval+2,f
  8941  13A5  0CE5               	rrf	___fttol@lval+1,f
  8942  13A6  0CE4               	rrf	___fttol@lval,f
  8943  13A7  3EFF               	addlw	-1
  8944  13A8  1D03               	skipz
  8945  13A9  2BA2               	goto	u2645
  8946  13AA  3001               	movlw	1
  8947  13AB  00DF               	movwf	??___fttol
  8948  13AC  085F               	movf	??___fttol,w
  8949  13AD  07E8               	addwf	___fttol@exp1,f
  8950  13AE  1D03               	btfss	3,2
  8951  13AF  2BB1               	goto	u2651
  8952  13B0  2BB2               	goto	u2650
  8953  13B1                     u2651:
  8954  13B1  2BA1               	goto	l2411
  8955  13B2                     u2650:
  8956  13B2  2BCA               	goto	l2421
  8957  13B3                     l2413:
  8958  13B3  3018               	movlw	24
  8959  13B4  0268               	subwf	___fttol@exp1,w
  8960  13B5  1C03               	skipc
  8961  13B6  2BB8               	goto	u2661
  8962  13B7  2BB9               	goto	u2660
  8963  13B8                     u2661:
  8964  13B8  2BC5               	goto	l890
  8965  13B9                     u2660:
  8966  13B9  2B6A               	goto	l2389
  8967  13BA                     l2419:
  8968  13BA  3001               	movlw	1
  8969  13BB  00DF               	movwf	??___fttol
  8970  13BC                     u2675:
  8971  13BC  1003               	clrc
  8972  13BD  0DE4               	rlf	___fttol@lval,f
  8973  13BE  0DE5               	rlf	___fttol@lval+1,f
  8974  13BF  0DE6               	rlf	___fttol@lval+2,f
  8975  13C0  0DE7               	rlf	___fttol@lval+3,f
  8976  13C1  0BDF               	decfsz	??___fttol,f
  8977  13C2  2BBC               	goto	u2675
  8978  13C3  3001               	movlw	1
  8979  13C4  02E8               	subwf	___fttol@exp1,f
  8980  13C5                     l890:
  8981  13C5  0868               	movf	___fttol@exp1,w
  8982  13C6  1D03               	btfss	3,2
  8983  13C7  2BC9               	goto	u2681
  8984  13C8  2BCA               	goto	u2680
  8985  13C9                     u2681:
  8986  13C9  2BBA               	goto	l2419
  8987  13CA                     u2680:
  8988  13CA                     l2421:
  8989  13CA  0863               	movf	___fttol@sign1,w
  8990  13CB  1903               	btfsc	3,2
  8991  13CC  2BCE               	goto	u2691
  8992  13CD  2BCF               	goto	u2690
  8993  13CE                     u2691:
  8994  13CE  2BDA               	goto	l2425
  8995  13CF                     u2690:
  8996  13CF                     l2423:
  8997  13CF  09E4               	comf	___fttol@lval,f
  8998  13D0  09E5               	comf	___fttol@lval+1,f
  8999  13D1  09E6               	comf	___fttol@lval+2,f
  9000  13D2  09E7               	comf	___fttol@lval+3,f
  9001  13D3  0AE4               	incf	___fttol@lval,f
  9002  13D4  1903               	skipnz
  9003  13D5  0AE5               	incf	___fttol@lval+1,f
  9004  13D6  1903               	skipnz
  9005  13D7  0AE6               	incf	___fttol@lval+2,f
  9006  13D8  1903               	skipnz
  9007  13D9  0AE7               	incf	___fttol@lval+3,f
  9008  13DA                     l2425:
  9009  13DA  0867               	movf	___fttol@lval+3,w
  9010  13DB  00DE               	movwf	?___fttol+3
  9011  13DC  0866               	movf	___fttol@lval+2,w
  9012  13DD  00DD               	movwf	?___fttol+2
  9013  13DE  0865               	movf	___fttol@lval+1,w
  9014  13DF  00DC               	movwf	?___fttol+1
  9015  13E0  0864               	movf	___fttol@lval,w
  9016  13E1  00DB               	movwf	?___fttol
  9017  13E2                     l883:
  9018  13E2  0008               	return
  9019  13E3                     __end_of___fttol:
  9020                           
  9021                           	psect	text35
  9022  154B                     __ptext35:	
  9023 ;; *************** function ___ftmul *****************
  9024 ;; Defined at:
  9025 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  f1              3   43[BANK0 ] float 
  9028 ;;  f2              3   46[BANK0 ] float 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;  f3_as_produc    3   54[BANK0 ] unsigned um
  9031 ;;  sign            1   58[BANK0 ] unsigned char 
  9032 ;;  cntr            1   57[BANK0 ] unsigned char 
  9033 ;;  exp             1   53[BANK0 ] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  3   43[BANK0 ] float 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, pclath, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9043 ;;      Params:         0       6       0       0       0
  9044 ;;      Locals:         0       6       0       0       0
  9045 ;;      Temps:          0       4       0       0       0
  9046 ;;      Totals:         0      16       0       0       0
  9047 ;;Total ram usage:       16 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    3
  9050 ;; This function calls:
  9051 ;;		___ftpack
  9052 ;; This function is called by:
  9053 ;;		_read_temperatura_interior
  9054 ;;		_read_potenciometro
  9055 ;;		_logica_Actuadores
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function ___ftmul
  9061  154B                     ___ftmul:
  9062  154B                     l2915:	
  9063                           ;incstack = 0
  9064                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9065                           
  9066  154B  1283               	bcf	3,5	;RP0=0, select bank0
  9067  154C  1303               	bcf	3,6	;RP1=0, select bank0
  9068  154D  084B               	movf	___ftmul@f1,w
  9069  154E  00D1               	movwf	??___ftmul
  9070  154F  084C               	movf	___ftmul@f1+1,w
  9071  1550  00D2               	movwf	??___ftmul+1
  9072  1551  084D               	movf	___ftmul@f1+2,w
  9073  1552  00D3               	movwf	??___ftmul+2
  9074  1553  1003               	clrc
  9075  1554  0D52               	rlf	??___ftmul+1,w
  9076  1555  0D53               	rlf	??___ftmul+2,w
  9077  1556  00D4               	movwf	??___ftmul+3
  9078  1557  0854               	movf	??___ftmul+3,w
  9079  1558  00D5               	movwf	___ftmul@exp
  9080  1559  0855               	movf	___ftmul@exp,w
  9081  155A  1D03               	btfss	3,2
  9082  155B  2D5D               	goto	u3601
  9083  155C  2D5E               	goto	u3600
  9084  155D                     u3601:
  9085  155D  2D65               	goto	l2921
  9086  155E                     u3600:
  9087  155E                     l2917:
  9088  155E  3000               	movlw	0
  9089  155F  00CB               	movwf	?___ftmul
  9090  1560  3000               	movlw	0
  9091  1561  00CC               	movwf	?___ftmul+1
  9092  1562  3000               	movlw	0
  9093  1563  00CD               	movwf	?___ftmul+2
  9094  1564  2E2F               	goto	l862
  9095  1565                     l2921:
  9096  1565  084E               	movf	___ftmul@f2,w
  9097  1566  00D1               	movwf	??___ftmul
  9098  1567  084F               	movf	___ftmul@f2+1,w
  9099  1568  00D2               	movwf	??___ftmul+1
  9100  1569  0850               	movf	___ftmul@f2+2,w
  9101  156A  00D3               	movwf	??___ftmul+2
  9102  156B  1003               	clrc
  9103  156C  0D52               	rlf	??___ftmul+1,w
  9104  156D  0D53               	rlf	??___ftmul+2,w
  9105  156E  00D4               	movwf	??___ftmul+3
  9106  156F  0854               	movf	??___ftmul+3,w
  9107  1570  00DA               	movwf	___ftmul@sign
  9108  1571  085A               	movf	___ftmul@sign,w
  9109  1572  1D03               	btfss	3,2
  9110  1573  2D75               	goto	u3611
  9111  1574  2D76               	goto	u3610
  9112  1575                     u3611:
  9113  1575  2D7D               	goto	l2927
  9114  1576                     u3610:
  9115  1576                     l2923:
  9116  1576  3000               	movlw	0
  9117  1577  00CB               	movwf	?___ftmul
  9118  1578  3000               	movlw	0
  9119  1579  00CC               	movwf	?___ftmul+1
  9120  157A  3000               	movlw	0
  9121  157B  00CD               	movwf	?___ftmul+2
  9122  157C  2E2F               	goto	l862
  9123  157D                     l2927:
  9124  157D  085A               	movf	___ftmul@sign,w
  9125  157E  3E7B               	addlw	123
  9126  157F  00D1               	movwf	??___ftmul
  9127  1580  0851               	movf	??___ftmul,w
  9128  1581  07D5               	addwf	___ftmul@exp,f
  9129  1582  084B               	movf	___ftmul@f1,w
  9130  1583  00D1               	movwf	??___ftmul
  9131  1584  084C               	movf	___ftmul@f1+1,w
  9132  1585  00D2               	movwf	??___ftmul+1
  9133  1586  084D               	movf	___ftmul@f1+2,w
  9134  1587  00D3               	movwf	??___ftmul+2
  9135  1588  3010               	movlw	16
  9136  1589                     u3625:
  9137  1589  1003               	clrc
  9138  158A  0CD3               	rrf	??___ftmul+2,f
  9139  158B  0CD2               	rrf	??___ftmul+1,f
  9140  158C  0CD1               	rrf	??___ftmul,f
  9141  158D                     u3620:
  9142  158D  3EFF               	addlw	-1
  9143  158E  1D03               	skipz
  9144  158F  2D89               	goto	u3625
  9145  1590  0851               	movf	??___ftmul,w
  9146  1591  00D4               	movwf	??___ftmul+3
  9147  1592  0854               	movf	??___ftmul+3,w
  9148  1593  00DA               	movwf	___ftmul@sign
  9149  1594  084E               	movf	___ftmul@f2,w
  9150  1595  00D1               	movwf	??___ftmul
  9151  1596  084F               	movf	___ftmul@f2+1,w
  9152  1597  00D2               	movwf	??___ftmul+1
  9153  1598  0850               	movf	___ftmul@f2+2,w
  9154  1599  00D3               	movwf	??___ftmul+2
  9155  159A  3010               	movlw	16
  9156  159B                     u3635:
  9157  159B  1003               	clrc
  9158  159C  0CD3               	rrf	??___ftmul+2,f
  9159  159D  0CD2               	rrf	??___ftmul+1,f
  9160  159E  0CD1               	rrf	??___ftmul,f
  9161  159F                     u3630:
  9162  159F  3EFF               	addlw	-1
  9163  15A0  1D03               	skipz
  9164  15A1  2D9B               	goto	u3635
  9165  15A2  0851               	movf	??___ftmul,w
  9166  15A3  00D4               	movwf	??___ftmul+3
  9167  15A4  0854               	movf	??___ftmul+3,w
  9168  15A5  06DA               	xorwf	___ftmul@sign,f
  9169  15A6  3080               	movlw	128
  9170  15A7  00D1               	movwf	??___ftmul
  9171  15A8  0851               	movf	??___ftmul,w
  9172  15A9  05DA               	andwf	___ftmul@sign,f
  9173  15AA                     l2929:
  9174  15AA  17CC               	bsf	___ftmul@f1+1,7
  9175  15AB                     l2931:
  9176  15AB  17CF               	bsf	___ftmul@f2+1,7
  9177  15AC                     l2933:
  9178  15AC  30FF               	movlw	255
  9179  15AD  05CE               	andwf	___ftmul@f2,f
  9180  15AE  30FF               	movlw	255
  9181  15AF  05CF               	andwf	___ftmul@f2+1,f
  9182  15B0  3000               	movlw	0
  9183  15B1  05D0               	andwf	___ftmul@f2+2,f
  9184  15B2                     l2935:
  9185  15B2  3000               	movlw	0
  9186  15B3  00D6               	movwf	___ftmul@f3_as_product
  9187  15B4  3000               	movlw	0
  9188  15B5  00D7               	movwf	___ftmul@f3_as_product+1
  9189  15B6  3000               	movlw	0
  9190  15B7  00D8               	movwf	___ftmul@f3_as_product+2
  9191  15B8                     l2937:
  9192  15B8  3007               	movlw	7
  9193  15B9  00D1               	movwf	??___ftmul
  9194  15BA  0851               	movf	??___ftmul,w
  9195  15BB  00D9               	movwf	___ftmul@cntr
  9196  15BC                     l2939:
  9197  15BC  1C4B               	btfss	___ftmul@f1,0
  9198  15BD  2DBF               	goto	u3641
  9199  15BE  2DC0               	goto	u3640
  9200  15BF                     u3641:
  9201  15BF  2DD0               	goto	l2943
  9202  15C0                     u3640:
  9203  15C0                     l2941:
  9204  15C0  084E               	movf	___ftmul@f2,w
  9205  15C1  07D6               	addwf	___ftmul@f3_as_product,f
  9206  15C2  084F               	movf	___ftmul@f2+1,w
  9207  15C3  1103               	clrz
  9208  15C4  1803               	skipnc
  9209  15C5  0A4F               	incf	___ftmul@f2+1,w
  9210  15C6  1903               	skipnz
  9211  15C7  2DC9               	goto	u3651
  9212  15C8  07D7               	addwf	___ftmul@f3_as_product+1,f
  9213  15C9                     u3651:
  9214  15C9  0850               	movf	___ftmul@f2+2,w
  9215  15CA  1103               	clrz
  9216  15CB  1803               	skipnc
  9217  15CC  0A50               	incf	___ftmul@f2+2,w
  9218  15CD  1903               	skipnz
  9219  15CE  2DD0               	goto	u3652
  9220  15CF  07D8               	addwf	___ftmul@f3_as_product+2,f
  9221  15D0                     u3652:
  9222  15D0                     l2943:
  9223  15D0  3001               	movlw	1
  9224  15D1                     u3665:
  9225  15D1  1003               	clrc
  9226  15D2  0CCD               	rrf	___ftmul@f1+2,f
  9227  15D3  0CCC               	rrf	___ftmul@f1+1,f
  9228  15D4  0CCB               	rrf	___ftmul@f1,f
  9229  15D5  3EFF               	addlw	-1
  9230  15D6  1D03               	skipz
  9231  15D7  2DD1               	goto	u3665
  9232  15D8                     l2945:
  9233  15D8  3001               	movlw	1
  9234  15D9                     u3675:
  9235  15D9  1003               	clrc
  9236  15DA  0DCE               	rlf	___ftmul@f2,f
  9237  15DB  0DCF               	rlf	___ftmul@f2+1,f
  9238  15DC  0DD0               	rlf	___ftmul@f2+2,f
  9239  15DD  3EFF               	addlw	-1
  9240  15DE  1D03               	skipz
  9241  15DF  2DD9               	goto	u3675
  9242  15E0                     l2947:
  9243  15E0  3001               	movlw	1
  9244  15E1  02D9               	subwf	___ftmul@cntr,f
  9245  15E2  1D03               	btfss	3,2
  9246  15E3  2DE5               	goto	u3681
  9247  15E4  2DE6               	goto	u3680
  9248  15E5                     u3681:
  9249  15E5  2DBC               	goto	l2939
  9250  15E6                     u3680:
  9251  15E6                     l2949:
  9252  15E6  3009               	movlw	9
  9253  15E7  00D1               	movwf	??___ftmul
  9254  15E8  0851               	movf	??___ftmul,w
  9255  15E9  00D9               	movwf	___ftmul@cntr
  9256  15EA                     l2951:
  9257  15EA  1C4B               	btfss	___ftmul@f1,0
  9258  15EB  2DED               	goto	u3691
  9259  15EC  2DEE               	goto	u3690
  9260  15ED                     u3691:
  9261  15ED  2DFE               	goto	l2955
  9262  15EE                     u3690:
  9263  15EE                     l2953:
  9264  15EE  084E               	movf	___ftmul@f2,w
  9265  15EF  07D6               	addwf	___ftmul@f3_as_product,f
  9266  15F0  084F               	movf	___ftmul@f2+1,w
  9267  15F1  1103               	clrz
  9268  15F2  1803               	skipnc
  9269  15F3  0A4F               	incf	___ftmul@f2+1,w
  9270  15F4  1903               	skipnz
  9271  15F5  2DF7               	goto	u3701
  9272  15F6  07D7               	addwf	___ftmul@f3_as_product+1,f
  9273  15F7                     u3701:
  9274  15F7  0850               	movf	___ftmul@f2+2,w
  9275  15F8  1103               	clrz
  9276  15F9  1803               	skipnc
  9277  15FA  0A50               	incf	___ftmul@f2+2,w
  9278  15FB  1903               	skipnz
  9279  15FC  2DFE               	goto	u3702
  9280  15FD  07D8               	addwf	___ftmul@f3_as_product+2,f
  9281  15FE                     u3702:
  9282  15FE                     l2955:
  9283  15FE  3001               	movlw	1
  9284  15FF                     u3715:
  9285  15FF  1003               	clrc
  9286  1600  0CCD               	rrf	___ftmul@f1+2,f
  9287  1601  0CCC               	rrf	___ftmul@f1+1,f
  9288  1602  0CCB               	rrf	___ftmul@f1,f
  9289  1603  3EFF               	addlw	-1
  9290  1604  1D03               	skipz
  9291  1605  2DFF               	goto	u3715
  9292  1606                     l2957:
  9293  1606  3001               	movlw	1
  9294  1607                     u3725:
  9295  1607  1003               	clrc
  9296  1608  0CD8               	rrf	___ftmul@f3_as_product+2,f
  9297  1609  0CD7               	rrf	___ftmul@f3_as_product+1,f
  9298  160A  0CD6               	rrf	___ftmul@f3_as_product,f
  9299  160B  3EFF               	addlw	-1
  9300  160C  1D03               	skipz
  9301  160D  2E07               	goto	u3725
  9302  160E                     l2959:
  9303  160E  3001               	movlw	1
  9304  160F  02D9               	subwf	___ftmul@cntr,f
  9305  1610  1D03               	btfss	3,2
  9306  1611  2E13               	goto	u3731
  9307  1612  2E14               	goto	u3730
  9308  1613                     u3731:
  9309  1613  2DEA               	goto	l2951
  9310  1614                     u3730:
  9311  1614                     l2961:
  9312  1614  0856               	movf	___ftmul@f3_as_product,w
  9313  1615  00A0               	movwf	___ftpack@arg
  9314  1616  0857               	movf	___ftmul@f3_as_product+1,w
  9315  1617  00A1               	movwf	___ftpack@arg+1
  9316  1618  0858               	movf	___ftmul@f3_as_product+2,w
  9317  1619  00A2               	movwf	___ftpack@arg+2
  9318  161A  0855               	movf	___ftmul@exp,w
  9319  161B  00D1               	movwf	??___ftmul
  9320  161C  0851               	movf	??___ftmul,w
  9321  161D  00A3               	movwf	___ftpack@exp
  9322  161E  085A               	movf	___ftmul@sign,w
  9323  161F  00D2               	movwf	??___ftmul+1
  9324  1620  0852               	movf	??___ftmul+1,w
  9325  1621  00A4               	movwf	___ftpack@sign
  9326  1622  120A  118A  267B  160A  118A  	fcall	___ftpack
  9327  1627  1283               	bcf	3,5	;RP0=0, select bank0
  9328  1628  1303               	bcf	3,6	;RP1=0, select bank0
  9329  1629  0820               	movf	?___ftpack,w
  9330  162A  00CB               	movwf	?___ftmul
  9331  162B  0821               	movf	?___ftpack+1,w
  9332  162C  00CC               	movwf	?___ftmul+1
  9333  162D  0822               	movf	?___ftpack+2,w
  9334  162E  00CD               	movwf	?___ftmul+2
  9335  162F                     l862:
  9336  162F  0008               	return
  9337  1630                     __end_of___ftmul:
  9338                           
  9339                           	psect	text36
  9340  115F                     __ptext36:	
  9341 ;; *************** function ___ftge *****************
  9342 ;; Defined at:
  9343 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftge.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  ff1             3   14[BANK0 ] float 
  9346 ;;  ff2             3   17[BANK0 ] float 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;		None               void
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9358 ;;      Params:         0       6       0       0       0
  9359 ;;      Locals:         0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0
  9361 ;;      Totals:         0       6       0       0       0
  9362 ;;Total ram usage:        6 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_logica_Actuadores
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function ___ftge
  9374  115F                     ___ftge:
  9375  115F                     l2895:	
  9376                           ;incstack = 0
  9377                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9378                           
  9379  115F  1283               	bcf	3,5	;RP0=0, select bank0
  9380  1160  1303               	bcf	3,6	;RP1=0, select bank0
  9381  1161  1FB0               	btfss	___ftge@ff1+2,7
  9382  1162  2964               	goto	u3571
  9383  1163  2965               	goto	u3570
  9384  1164                     u3571:
  9385  1164  2972               	goto	l2899
  9386  1165                     u3570:
  9387  1165                     l2897:
  9388  1165  082E               	movf	___ftge@ff1,w
  9389  1166  3C00               	sublw	0
  9390  1167  00AE               	movwf	___ftge@ff1
  9391  1168  082F               	movf	___ftge@ff1+1,w
  9392  1169  1C03               	skipc
  9393  116A  0F2F               	incfsz	___ftge@ff1+1,w
  9394  116B  3C00               	sublw	0
  9395  116C  00AF               	movwf	___ftge@ff1+1
  9396  116D  0830               	movf	___ftge@ff1+2,w
  9397  116E  1C03               	skipc
  9398  116F  0F30               	incfsz	___ftge@ff1+2,w
  9399  1170  3C80               	sublw	128
  9400  1171  00B0               	movwf	___ftge@ff1+2
  9401  1172                     l2899:
  9402  1172  1FB3               	btfss	___ftge@ff2+2,7
  9403  1173  2975               	goto	u3581
  9404  1174  2976               	goto	u3580
  9405  1175                     u3581:
  9406  1175  2983               	goto	l2903
  9407  1176                     u3580:
  9408  1176                     l2901:
  9409  1176  0831               	movf	___ftge@ff2,w
  9410  1177  3C00               	sublw	0
  9411  1178  00B1               	movwf	___ftge@ff2
  9412  1179  0832               	movf	___ftge@ff2+1,w
  9413  117A  1C03               	skipc
  9414  117B  0F32               	incfsz	___ftge@ff2+1,w
  9415  117C  3C00               	sublw	0
  9416  117D  00B2               	movwf	___ftge@ff2+1
  9417  117E  0833               	movf	___ftge@ff2+2,w
  9418  117F  1C03               	skipc
  9419  1180  0F33               	incfsz	___ftge@ff2+2,w
  9420  1181  3C80               	sublw	128
  9421  1182  00B3               	movwf	___ftge@ff2+2
  9422  1183                     l2903:
  9423  1183  3080               	movlw	128
  9424  1184  06B0               	xorwf	___ftge@ff1+2,f
  9425  1185                     l2905:
  9426  1185  3080               	movlw	128
  9427  1186  06B3               	xorwf	___ftge@ff2+2,f
  9428  1187                     l2907:
  9429  1187  0833               	movf	___ftge@ff2+2,w
  9430  1188  0230               	subwf	___ftge@ff1+2,w
  9431  1189  1D03               	skipz
  9432  118A  2991               	goto	u3595
  9433  118B  0832               	movf	___ftge@ff2+1,w
  9434  118C  022F               	subwf	___ftge@ff1+1,w
  9435  118D  1D03               	skipz
  9436  118E  2991               	goto	u3595
  9437  118F  0831               	movf	___ftge@ff2,w
  9438  1190  022E               	subwf	___ftge@ff1,w
  9439  1191                     u3595:
  9440  1191  1803               	skipnc
  9441  1192  2994               	goto	u3591
  9442  1193  2995               	goto	u3590
  9443  1194                     u3591:
  9444  1194  2997               	goto	l2911
  9445  1195                     u3590:
  9446  1195                     l2909:
  9447  1195  1003               	clrc
  9448  1196  2998               	goto	l856
  9449  1197                     l2911:
  9450  1197  1403               	setc
  9451  1198                     l856:
  9452  1198  0008               	return
  9453  1199                     __end_of___ftge:
  9454                           
  9455                           	psect	text37
  9456  094D                     __ptext37:	
  9457 ;; *************** function ___ftdiv *****************
  9458 ;; Defined at:
  9459 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftdiv.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  f2              3   27[BANK0 ] float 
  9462 ;;  f1              3   30[BANK0 ] float 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  f3              3   38[BANK0 ] float 
  9465 ;;  sign            1   42[BANK0 ] unsigned char 
  9466 ;;  exp             1   41[BANK0 ] unsigned char 
  9467 ;;  cntr            1   37[BANK0 ] unsigned char 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  3   27[BANK0 ] float 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9477 ;;      Params:         0       6       0       0       0
  9478 ;;      Locals:         0       6       0       0       0
  9479 ;;      Temps:          0       4       0       0       0
  9480 ;;      Totals:         0      16       0       0       0
  9481 ;;Total ram usage:       16 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    3
  9484 ;; This function calls:
  9485 ;;		___ftpack
  9486 ;; This function is called by:
  9487 ;;		_read_temperatura_interior
  9488 ;;		_read_temperatura_exterior
  9489 ;;		_read_humedad
  9490 ;;		_read_intensidad_lumninosa
  9491 ;;		_read_potenciometro
  9492 ;;		_logica_Actuadores
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           
  9497                           ;psect for function ___ftdiv
  9498  094D                     ___ftdiv:
  9499  094D                     l2853:	
  9500                           ;incstack = 0
  9501                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9502                           
  9503  094D  1283               	bcf	3,5	;RP0=0, select bank0
  9504  094E  1303               	bcf	3,6	;RP1=0, select bank0
  9505  094F  083E               	movf	___ftdiv@f1,w
  9506  0950  00C1               	movwf	??___ftdiv
  9507  0951  083F               	movf	___ftdiv@f1+1,w
  9508  0952  00C2               	movwf	??___ftdiv+1
  9509  0953  0840               	movf	___ftdiv@f1+2,w
  9510  0954  00C3               	movwf	??___ftdiv+2
  9511  0955  1003               	clrc
  9512  0956  0D42               	rlf	??___ftdiv+1,w
  9513  0957  0D43               	rlf	??___ftdiv+2,w
  9514  0958  00C4               	movwf	??___ftdiv+3
  9515  0959  0844               	movf	??___ftdiv+3,w
  9516  095A  00C9               	movwf	___ftdiv@exp
  9517  095B  0849               	movf	___ftdiv@exp,w
  9518  095C  1D03               	btfss	3,2
  9519  095D  295F               	goto	u3491
  9520  095E  2960               	goto	u3490
  9521  095F                     u3491:
  9522  095F  2967               	goto	l2859
  9523  0960                     u3490:
  9524  0960                     l2855:
  9525  0960  3000               	movlw	0
  9526  0961  00BB               	movwf	?___ftdiv
  9527  0962  3000               	movlw	0
  9528  0963  00BC               	movwf	?___ftdiv+1
  9529  0964  3000               	movlw	0
  9530  0965  00BD               	movwf	?___ftdiv+2
  9531  0966  2A0E               	goto	l847
  9532  0967                     l2859:
  9533  0967  083B               	movf	___ftdiv@f2,w
  9534  0968  00C1               	movwf	??___ftdiv
  9535  0969  083C               	movf	___ftdiv@f2+1,w
  9536  096A  00C2               	movwf	??___ftdiv+1
  9537  096B  083D               	movf	___ftdiv@f2+2,w
  9538  096C  00C3               	movwf	??___ftdiv+2
  9539  096D  1003               	clrc
  9540  096E  0D42               	rlf	??___ftdiv+1,w
  9541  096F  0D43               	rlf	??___ftdiv+2,w
  9542  0970  00C4               	movwf	??___ftdiv+3
  9543  0971  0844               	movf	??___ftdiv+3,w
  9544  0972  00CA               	movwf	___ftdiv@sign
  9545  0973  084A               	movf	___ftdiv@sign,w
  9546  0974  1D03               	btfss	3,2
  9547  0975  2977               	goto	u3501
  9548  0976  2978               	goto	u3500
  9549  0977                     u3501:
  9550  0977  297F               	goto	l2865
  9551  0978                     u3500:
  9552  0978                     l2861:
  9553  0978  3000               	movlw	0
  9554  0979  00BB               	movwf	?___ftdiv
  9555  097A  3000               	movlw	0
  9556  097B  00BC               	movwf	?___ftdiv+1
  9557  097C  3000               	movlw	0
  9558  097D  00BD               	movwf	?___ftdiv+2
  9559  097E  2A0E               	goto	l847
  9560  097F                     l2865:
  9561  097F  3000               	movlw	0
  9562  0980  00C6               	movwf	___ftdiv@f3
  9563  0981  3000               	movlw	0
  9564  0982  00C7               	movwf	___ftdiv@f3+1
  9565  0983  3000               	movlw	0
  9566  0984  00C8               	movwf	___ftdiv@f3+2
  9567  0985                     l2867:
  9568  0985  3089               	movlw	137
  9569  0986  074A               	addwf	___ftdiv@sign,w
  9570  0987  00C1               	movwf	??___ftdiv
  9571  0988  0841               	movf	??___ftdiv,w
  9572  0989  02C9               	subwf	___ftdiv@exp,f
  9573  098A                     l2869:
  9574  098A  083E               	movf	___ftdiv@f1,w
  9575  098B  00C1               	movwf	??___ftdiv
  9576  098C  083F               	movf	___ftdiv@f1+1,w
  9577  098D  00C2               	movwf	??___ftdiv+1
  9578  098E  0840               	movf	___ftdiv@f1+2,w
  9579  098F  00C3               	movwf	??___ftdiv+2
  9580  0990  3010               	movlw	16
  9581  0991                     u3515:
  9582  0991  1003               	clrc
  9583  0992  0CC3               	rrf	??___ftdiv+2,f
  9584  0993  0CC2               	rrf	??___ftdiv+1,f
  9585  0994  0CC1               	rrf	??___ftdiv,f
  9586  0995                     u3510:
  9587  0995  3EFF               	addlw	-1
  9588  0996  1D03               	skipz
  9589  0997  2991               	goto	u3515
  9590  0998  0841               	movf	??___ftdiv,w
  9591  0999  00C4               	movwf	??___ftdiv+3
  9592  099A  0844               	movf	??___ftdiv+3,w
  9593  099B  00CA               	movwf	___ftdiv@sign
  9594  099C                     l2871:
  9595  099C  083B               	movf	___ftdiv@f2,w
  9596  099D  00C1               	movwf	??___ftdiv
  9597  099E  083C               	movf	___ftdiv@f2+1,w
  9598  099F  00C2               	movwf	??___ftdiv+1
  9599  09A0  083D               	movf	___ftdiv@f2+2,w
  9600  09A1  00C3               	movwf	??___ftdiv+2
  9601  09A2  3010               	movlw	16
  9602  09A3                     u3525:
  9603  09A3  1003               	clrc
  9604  09A4  0CC3               	rrf	??___ftdiv+2,f
  9605  09A5  0CC2               	rrf	??___ftdiv+1,f
  9606  09A6  0CC1               	rrf	??___ftdiv,f
  9607  09A7                     u3520:
  9608  09A7  3EFF               	addlw	-1
  9609  09A8  1D03               	skipz
  9610  09A9  29A3               	goto	u3525
  9611  09AA  0841               	movf	??___ftdiv,w
  9612  09AB  00C4               	movwf	??___ftdiv+3
  9613  09AC  0844               	movf	??___ftdiv+3,w
  9614  09AD  06CA               	xorwf	___ftdiv@sign,f
  9615  09AE                     l2873:
  9616  09AE  3080               	movlw	128
  9617  09AF  00C1               	movwf	??___ftdiv
  9618  09B0  0841               	movf	??___ftdiv,w
  9619  09B1  05CA               	andwf	___ftdiv@sign,f
  9620  09B2                     l2875:
  9621  09B2  17BF               	bsf	___ftdiv@f1+1,7
  9622  09B3  30FF               	movlw	255
  9623  09B4  05BE               	andwf	___ftdiv@f1,f
  9624  09B5  30FF               	movlw	255
  9625  09B6  05BF               	andwf	___ftdiv@f1+1,f
  9626  09B7  3000               	movlw	0
  9627  09B8  05C0               	andwf	___ftdiv@f1+2,f
  9628  09B9                     l2877:
  9629  09B9  17BC               	bsf	___ftdiv@f2+1,7
  9630  09BA  30FF               	movlw	255
  9631  09BB  05BB               	andwf	___ftdiv@f2,f
  9632  09BC  30FF               	movlw	255
  9633  09BD  05BC               	andwf	___ftdiv@f2+1,f
  9634  09BE  3000               	movlw	0
  9635  09BF  05BD               	andwf	___ftdiv@f2+2,f
  9636  09C0  3018               	movlw	24
  9637  09C1  00C1               	movwf	??___ftdiv
  9638  09C2  0841               	movf	??___ftdiv,w
  9639  09C3  00C5               	movwf	___ftdiv@cntr
  9640  09C4                     l2879:
  9641  09C4  3001               	movlw	1
  9642  09C5                     u3535:
  9643  09C5  1003               	clrc
  9644  09C6  0DC6               	rlf	___ftdiv@f3,f
  9645  09C7  0DC7               	rlf	___ftdiv@f3+1,f
  9646  09C8  0DC8               	rlf	___ftdiv@f3+2,f
  9647  09C9  3EFF               	addlw	-1
  9648  09CA  1D03               	skipz
  9649  09CB  29C5               	goto	u3535
  9650  09CC                     l2881:
  9651  09CC  083D               	movf	___ftdiv@f2+2,w
  9652  09CD  0240               	subwf	___ftdiv@f1+2,w
  9653  09CE  1D03               	skipz
  9654  09CF  29D6               	goto	u3545
  9655  09D0  083C               	movf	___ftdiv@f2+1,w
  9656  09D1  023F               	subwf	___ftdiv@f1+1,w
  9657  09D2  1D03               	skipz
  9658  09D3  29D6               	goto	u3545
  9659  09D4  083B               	movf	___ftdiv@f2,w
  9660  09D5  023E               	subwf	___ftdiv@f1,w
  9661  09D6                     u3545:
  9662  09D6  1C03               	skipc
  9663  09D7  29D9               	goto	u3541
  9664  09D8  29DA               	goto	u3540
  9665  09D9                     u3541:
  9666  09D9  29E5               	goto	l2887
  9667  09DA                     u3540:
  9668  09DA                     l2883:
  9669  09DA  083B               	movf	___ftdiv@f2,w
  9670  09DB  02BE               	subwf	___ftdiv@f1,f
  9671  09DC  083C               	movf	___ftdiv@f2+1,w
  9672  09DD  1C03               	skipc
  9673  09DE  0F3C               	incfsz	___ftdiv@f2+1,w
  9674  09DF  02BF               	subwf	___ftdiv@f1+1,f
  9675  09E0  083D               	movf	___ftdiv@f2+2,w
  9676  09E1  1C03               	skipc
  9677  09E2  0A3D               	incf	___ftdiv@f2+2,w
  9678  09E3  02C0               	subwf	___ftdiv@f1+2,f
  9679  09E4                     l2885:
  9680  09E4  1446               	bsf	___ftdiv@f3,0
  9681  09E5                     l2887:
  9682  09E5  3001               	movlw	1
  9683  09E6                     u3555:
  9684  09E6  1003               	clrc
  9685  09E7  0DBE               	rlf	___ftdiv@f1,f
  9686  09E8  0DBF               	rlf	___ftdiv@f1+1,f
  9687  09E9  0DC0               	rlf	___ftdiv@f1+2,f
  9688  09EA  3EFF               	addlw	-1
  9689  09EB  1D03               	skipz
  9690  09EC  29E6               	goto	u3555
  9691  09ED                     l2889:
  9692  09ED  3001               	movlw	1
  9693  09EE  02C5               	subwf	___ftdiv@cntr,f
  9694  09EF  1D03               	btfss	3,2
  9695  09F0  29F2               	goto	u3561
  9696  09F1  29F3               	goto	u3560
  9697  09F2                     u3561:
  9698  09F2  29C4               	goto	l2879
  9699  09F3                     u3560:
  9700  09F3                     l2891:
  9701  09F3  0846               	movf	___ftdiv@f3,w
  9702  09F4  00A0               	movwf	___ftpack@arg
  9703  09F5  0847               	movf	___ftdiv@f3+1,w
  9704  09F6  00A1               	movwf	___ftpack@arg+1
  9705  09F7  0848               	movf	___ftdiv@f3+2,w
  9706  09F8  00A2               	movwf	___ftpack@arg+2
  9707  09F9  0849               	movf	___ftdiv@exp,w
  9708  09FA  00C1               	movwf	??___ftdiv
  9709  09FB  0841               	movf	??___ftdiv,w
  9710  09FC  00A3               	movwf	___ftpack@exp
  9711  09FD  084A               	movf	___ftdiv@sign,w
  9712  09FE  00C2               	movwf	??___ftdiv+1
  9713  09FF  0842               	movf	??___ftdiv+1,w
  9714  0A00  00A4               	movwf	___ftpack@sign
  9715  0A01  120A  118A  267B  120A  158A  	fcall	___ftpack
  9716  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  9717  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  9718  0A08  0820               	movf	?___ftpack,w
  9719  0A09  00BB               	movwf	?___ftdiv
  9720  0A0A  0821               	movf	?___ftpack+1,w
  9721  0A0B  00BC               	movwf	?___ftdiv+1
  9722  0A0C  0822               	movf	?___ftpack+2,w
  9723  0A0D  00BD               	movwf	?___ftdiv+2
  9724  0A0E                     l847:
  9725  0A0E  0008               	return
  9726  0A0F                     __end_of___ftdiv:
  9727                           
  9728                           	psect	text38
  9729  10A9                     __ptext38:	
  9730 ;; *************** function ___awtoft *****************
  9731 ;; Defined at:
  9732 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  c               2    8[BANK0 ] int 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  sign            1   13[BANK0 ] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  3    8[BANK0 ] float 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, pclath, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9746 ;;      Params:         0       3       0       0       0
  9747 ;;      Locals:         0       1       0       0       0
  9748 ;;      Temps:          0       2       0       0       0
  9749 ;;      Totals:         0       6       0       0       0
  9750 ;;Total ram usage:        6 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:    3
  9753 ;; This function calls:
  9754 ;;		___ftpack
  9755 ;; This function is called by:
  9756 ;;		_read_temperatura_interior
  9757 ;;		_read_temperatura_exterior
  9758 ;;		_read_humedad
  9759 ;;		_read_intensidad_lumninosa
  9760 ;;		_read_potenciometro
  9761 ;;		_logica_Actuadores
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           
  9766                           ;psect for function ___awtoft
  9767  10A9                     ___awtoft:
  9768  10A9                     l2841:	
  9769                           ;incstack = 0
  9770                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9771                           
  9772  10A9  1283               	bcf	3,5	;RP0=0, select bank0
  9773  10AA  1303               	bcf	3,6	;RP1=0, select bank0
  9774  10AB  01AD               	clrf	___awtoft@sign
  9775  10AC                     l2843:
  9776  10AC  1FA9               	btfss	___awtoft@c+1,7
  9777  10AD  28AF               	goto	u3481
  9778  10AE  28B0               	goto	u3480
  9779  10AF                     u3481:
  9780  10AF  28B7               	goto	l2849
  9781  10B0                     u3480:
  9782  10B0                     l2845:
  9783  10B0  09A8               	comf	___awtoft@c,f
  9784  10B1  09A9               	comf	___awtoft@c+1,f
  9785  10B2  0AA8               	incf	___awtoft@c,f
  9786  10B3  1903               	skipnz
  9787  10B4  0AA9               	incf	___awtoft@c+1,f
  9788  10B5                     l2847:
  9789  10B5  01AD               	clrf	___awtoft@sign
  9790  10B6  0AAD               	incf	___awtoft@sign,f
  9791  10B7                     l2849:
  9792  10B7  0828               	movf	___awtoft@c,w
  9793  10B8  00A0               	movwf	___ftpack@arg
  9794  10B9  0829               	movf	___awtoft@c+1,w
  9795  10BA  00A1               	movwf	___ftpack@arg+1
  9796  10BB  01A2               	clrf	___ftpack@arg+2
  9797  10BC  308E               	movlw	142
  9798  10BD  00AB               	movwf	??___awtoft
  9799  10BE  082B               	movf	??___awtoft,w
  9800  10BF  00A3               	movwf	___ftpack@exp
  9801  10C0  082D               	movf	___awtoft@sign,w
  9802  10C1  00AC               	movwf	??___awtoft+1
  9803  10C2  082C               	movf	??___awtoft+1,w
  9804  10C3  00A4               	movwf	___ftpack@sign
  9805  10C4  120A  118A  267B  160A  118A  	fcall	___ftpack
  9806  10C9  1283               	bcf	3,5	;RP0=0, select bank0
  9807  10CA  1303               	bcf	3,6	;RP1=0, select bank0
  9808  10CB  0820               	movf	?___ftpack,w
  9809  10CC  00A8               	movwf	?___awtoft
  9810  10CD  0821               	movf	?___ftpack+1,w
  9811  10CE  00A9               	movwf	?___awtoft+1
  9812  10CF  0822               	movf	?___ftpack+2,w
  9813  10D0  00AA               	movwf	?___awtoft+2
  9814  10D1                     l789:
  9815  10D1  0008               	return
  9816  10D2                     __end_of___awtoft:
  9817                           
  9818                           	psect	text39
  9819  067B                     __ptext39:	
  9820 ;; *************** function ___ftpack *****************
  9821 ;; Defined at:
  9822 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  arg             3    0[BANK0 ] unsigned um
  9825 ;;  exp             1    3[BANK0 ] unsigned char 
  9826 ;;  sign            1    4[BANK0 ] unsigned char 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  3    0[BANK0 ] float 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9838 ;;      Params:         0       5       0       0       0
  9839 ;;      Locals:         0       0       0       0       0
  9840 ;;      Temps:          0       3       0       0       0
  9841 ;;      Totals:         0       8       0       0       0
  9842 ;;Total ram usage:        8 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    2
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		___awtoft
  9849 ;;		___ftadd
  9850 ;;		___ftdiv
  9851 ;;		___ftmul
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           
  9856                           ;psect for function ___ftpack
  9857  067B                     ___ftpack:
  9858  067B                     l2197:	
  9859                           ;incstack = 0
  9860                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9861                           
  9862  067B  1283               	bcf	3,5	;RP0=0, select bank0
  9863  067C  1303               	bcf	3,6	;RP1=0, select bank0
  9864  067D  0823               	movf	___ftpack@exp,w
  9865  067E  1903               	btfsc	3,2
  9866  067F  2E81               	goto	u2051
  9867  0680  2E82               	goto	u2050
  9868  0681                     u2051:
  9869  0681  2E89               	goto	l2201
  9870  0682                     u2050:
  9871  0682                     l2199:
  9872  0682  0822               	movf	___ftpack@arg+2,w
  9873  0683  0421               	iorwf	___ftpack@arg+1,w
  9874  0684  0420               	iorwf	___ftpack@arg,w
  9875  0685  1D03               	skipz
  9876  0686  2E88               	goto	u2061
  9877  0687  2E89               	goto	u2060
  9878  0688                     u2061:
  9879  0688  2E9C               	goto	l2207
  9880  0689                     u2060:
  9881  0689                     l2201:
  9882  0689  3000               	movlw	0
  9883  068A  00A0               	movwf	?___ftpack
  9884  068B  3000               	movlw	0
  9885  068C  00A1               	movwf	?___ftpack+1
  9886  068D  3000               	movlw	0
  9887  068E  00A2               	movwf	?___ftpack+2
  9888  068F  2EF8               	goto	l795
  9889  0690                     l2205:
  9890  0690  3001               	movlw	1
  9891  0691  00A5               	movwf	??___ftpack
  9892  0692  0825               	movf	??___ftpack,w
  9893  0693  07A3               	addwf	___ftpack@exp,f
  9894  0694  3001               	movlw	1
  9895  0695                     u2075:
  9896  0695  1003               	clrc
  9897  0696  0CA2               	rrf	___ftpack@arg+2,f
  9898  0697  0CA1               	rrf	___ftpack@arg+1,f
  9899  0698  0CA0               	rrf	___ftpack@arg,f
  9900  0699  3EFF               	addlw	-1
  9901  069A  1D03               	skipz
  9902  069B  2E95               	goto	u2075
  9903  069C                     l2207:
  9904  069C  30FE               	movlw	254
  9905  069D  0522               	andwf	___ftpack@arg+2,w
  9906  069E  1D03               	btfss	3,2
  9907  069F  2EA1               	goto	u2081
  9908  06A0  2EA2               	goto	u2080
  9909  06A1                     u2081:
  9910  06A1  2E90               	goto	l2205
  9911  06A2                     u2080:
  9912  06A2  2EB9               	goto	l799
  9913  06A3                     l2209:
  9914  06A3  3001               	movlw	1
  9915  06A4  00A5               	movwf	??___ftpack
  9916  06A5  0825               	movf	??___ftpack,w
  9917  06A6  07A3               	addwf	___ftpack@exp,f
  9918  06A7                     l2211:
  9919  06A7  3001               	movlw	1
  9920  06A8  07A0               	addwf	___ftpack@arg,f
  9921  06A9  3000               	movlw	0
  9922  06AA  1803               	skipnc
  9923  06AB  3001               	movlw	1
  9924  06AC  07A1               	addwf	___ftpack@arg+1,f
  9925  06AD  3000               	movlw	0
  9926  06AE  1803               	skipnc
  9927  06AF  3001               	movlw	1
  9928  06B0  07A2               	addwf	___ftpack@arg+2,f
  9929  06B1                     l2213:
  9930  06B1  3001               	movlw	1
  9931  06B2                     u2095:
  9932  06B2  1003               	clrc
  9933  06B3  0CA2               	rrf	___ftpack@arg+2,f
  9934  06B4  0CA1               	rrf	___ftpack@arg+1,f
  9935  06B5  0CA0               	rrf	___ftpack@arg,f
  9936  06B6  3EFF               	addlw	-1
  9937  06B7  1D03               	skipz
  9938  06B8  2EB2               	goto	u2095
  9939  06B9                     l799:
  9940  06B9  30FF               	movlw	255
  9941  06BA  0522               	andwf	___ftpack@arg+2,w
  9942  06BB  1D03               	btfss	3,2
  9943  06BC  2EBE               	goto	u2101
  9944  06BD  2EBF               	goto	u2100
  9945  06BE                     u2101:
  9946  06BE  2EA3               	goto	l2209
  9947  06BF                     u2100:
  9948  06BF  2ECA               	goto	l2217
  9949  06C0                     l2215:
  9950  06C0  3001               	movlw	1
  9951  06C1  02A3               	subwf	___ftpack@exp,f
  9952  06C2  3001               	movlw	1
  9953  06C3                     u2115:
  9954  06C3  1003               	clrc
  9955  06C4  0DA0               	rlf	___ftpack@arg,f
  9956  06C5  0DA1               	rlf	___ftpack@arg+1,f
  9957  06C6  0DA2               	rlf	___ftpack@arg+2,f
  9958  06C7  3EFF               	addlw	-1
  9959  06C8  1D03               	skipz
  9960  06C9  2EC3               	goto	u2115
  9961  06CA                     l2217:
  9962  06CA  1BA1               	btfsc	___ftpack@arg+1,7
  9963  06CB  2ECD               	goto	u2121
  9964  06CC  2ECE               	goto	u2120
  9965  06CD                     u2121:
  9966  06CD  2ED4               	goto	l806
  9967  06CE                     u2120:
  9968  06CE                     l2219:
  9969  06CE  3002               	movlw	2
  9970  06CF  0223               	subwf	___ftpack@exp,w
  9971  06D0  1803               	skipnc
  9972  06D1  2ED3               	goto	u2131
  9973  06D2  2ED4               	goto	u2130
  9974  06D3                     u2131:
  9975  06D3  2EC0               	goto	l2215
  9976  06D4                     u2130:
  9977  06D4                     l806:
  9978  06D4  1823               	btfsc	___ftpack@exp,0
  9979  06D5  2ED7               	goto	u2141
  9980  06D6  2ED8               	goto	u2140
  9981  06D7                     u2141:
  9982  06D7  2EDE               	goto	l807
  9983  06D8                     u2140:
  9984  06D8                     l2221:
  9985  06D8  30FF               	movlw	255
  9986  06D9  05A0               	andwf	___ftpack@arg,f
  9987  06DA  307F               	movlw	127
  9988  06DB  05A1               	andwf	___ftpack@arg+1,f
  9989  06DC  30FF               	movlw	255
  9990  06DD  05A2               	andwf	___ftpack@arg+2,f
  9991  06DE                     l807:
  9992  06DE  1003               	clrc
  9993  06DF  0CA3               	rrf	___ftpack@exp,f
  9994  06E0                     l2223:
  9995  06E0  0823               	movf	___ftpack@exp,w
  9996  06E1  00A5               	movwf	??___ftpack
  9997  06E2  01A6               	clrf	??___ftpack+1
  9998  06E3  01A7               	clrf	??___ftpack+2
  9999  06E4  3010               	movlw	16
 10000  06E5                     u2155:
 10001  06E5  1003               	clrc
 10002  06E6  0DA5               	rlf	??___ftpack,f
 10003  06E7  0DA6               	rlf	??___ftpack+1,f
 10004  06E8  0DA7               	rlf	??___ftpack+2,f
 10005  06E9                     u2150:
 10006  06E9  3EFF               	addlw	-1
 10007  06EA  1D03               	skipz
 10008  06EB  2EE5               	goto	u2155
 10009  06EC  0825               	movf	??___ftpack,w
 10010  06ED  04A0               	iorwf	___ftpack@arg,f
 10011  06EE  0826               	movf	??___ftpack+1,w
 10012  06EF  04A1               	iorwf	___ftpack@arg+1,f
 10013  06F0  0827               	movf	??___ftpack+2,w
 10014  06F1  04A2               	iorwf	___ftpack@arg+2,f
 10015  06F2                     l2225:
 10016  06F2  0824               	movf	___ftpack@sign,w
 10017  06F3  1903               	btfsc	3,2
 10018  06F4  2EF6               	goto	u2161
 10019  06F5  2EF7               	goto	u2160
 10020  06F6                     u2161:
 10021  06F6  2EF8               	goto	l808
 10022  06F7                     u2160:
 10023  06F7                     l2227:
 10024  06F7  17A2               	bsf	___ftpack@arg+2,7
 10025  06F8                     l808:
 10026  06F8                     l795:
 10027  06F8  0008               	return
 10028  06F9                     __end_of___ftpack:
 10029                           
 10030                           	psect	text40
 10031  1023                     __ptext40:	
 10032 ;; *************** function _init_uart *****************
 10033 ;; Defined at:
 10034 ;;		line 14 in file "display.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10048 ;;      Params:         0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0
 10051 ;;      Totals:         0       0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    2
 10055 ;; This function calls:
 10056 ;;		Nothing
 10057 ;; This function is called by:
 10058 ;;		_main
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           
 10063                           ;psect for function _init_uart
 10064  1023                     _init_uart:
 10065  1023                     l3103:	
 10066                           ;incstack = 0
 10067                           ; Regs used in _init_uart: [wreg+status,2]
 10068                           
 10069                           
 10070                           ;display.c: 16: TXSTAbits.SYNC = 0;
 10071  1023  1683               	bsf	3,5	;RP0=1, select bank1
 10072  1024  1303               	bcf	3,6	;RP1=0, select bank1
 10073  1025  1218               	bcf	24,4	;volatile
 10074                           
 10075                           ;display.c: 17: TXSTAbits.BRGH = 0;
 10076  1026  1118               	bcf	24,2	;volatile
 10077                           
 10078                           ;display.c: 18: BAUDCTLbits.BRG16 = 0;
 10079  1027  1683               	bsf	3,5	;RP0=1, select bank3
 10080  1028  1703               	bsf	3,6	;RP1=1, select bank3
 10081  1029  1187               	bcf	7,3	;volatile
 10082  102A                     l3105:
 10083                           
 10084                           ;display.c: 20: SPBRGH = 0;
 10085  102A  1683               	bsf	3,5	;RP0=1, select bank1
 10086  102B  1303               	bcf	3,6	;RP1=0, select bank1
 10087  102C  019A               	clrf	26	;volatile
 10088  102D                     l3107:
 10089                           
 10090                           ;display.c: 21: SPBRG = 32;
 10091  102D  3020               	movlw	32
 10092  102E  0099               	movwf	25	;volatile
 10093  102F                     l3109:
 10094                           
 10095                           ;display.c: 24: TXSTAbits.TX9 = 0;
 10096  102F  1318               	bcf	24,6	;volatile
 10097  1030                     l3111:
 10098                           
 10099                           ;display.c: 25: RCSTAbits.RX9 = 0;
 10100  1030  1283               	bcf	3,5	;RP0=0, select bank0
 10101  1031  1303               	bcf	3,6	;RP1=0, select bank0
 10102  1032  1318               	bcf	24,6	;volatile
 10103  1033                     l3113:
 10104                           
 10105                           ;display.c: 27: PIE1bits.TXIE = 0;
 10106  1033  1683               	bsf	3,5	;RP0=1, select bank1
 10107  1034  1303               	bcf	3,6	;RP1=0, select bank1
 10108  1035  120C               	bcf	12,4	;volatile
 10109  1036                     l3115:
 10110                           
 10111                           ;display.c: 28: PIE1bits.RCIE = 0;
 10112  1036  128C               	bcf	12,5	;volatile
 10113  1037                     l3117:
 10114                           
 10115                           ;display.c: 30: RCSTAbits.SPEN = 1;
 10116  1037  1283               	bcf	3,5	;RP0=0, select bank0
 10117  1038  1303               	bcf	3,6	;RP1=0, select bank0
 10118  1039  1798               	bsf	24,7	;volatile
 10119  103A                     l3119:
 10120                           
 10121                           ;display.c: 32: TXSTAbits.TXEN = 0;
 10122  103A  1683               	bsf	3,5	;RP0=1, select bank1
 10123  103B  1303               	bcf	3,6	;RP1=0, select bank1
 10124  103C  1298               	bcf	24,5	;volatile
 10125  103D                     l3121:
 10126                           
 10127                           ;display.c: 33: TXSTAbits.TXEN = 1;
 10128  103D  1698               	bsf	24,5	;volatile
 10129  103E                     l141:
 10130  103E  0008               	return
 10131  103F                     __end_of_init_uart:
 10132                           
 10133                           	psect	text41
 10134  1000                     __ptext41:	
 10135 ;; *************** function _init_timer0 *****************
 10136 ;; Defined at:
 10137 ;;		line 31 in file "controlador3.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;		None
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10151 ;;      Params:         0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0
 10154 ;;      Totals:         0       0       0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    2
 10158 ;; This function calls:
 10159 ;;		Nothing
 10160 ;; This function is called by:
 10161 ;;		_main
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           
 10166                           ;psect for function _init_timer0
 10167  1000                     _init_timer0:
 10168  1000                     l3171:	
 10169                           ;incstack = 0
 10170                           ; Regs used in _init_timer0: [wreg+status,2+status,0]
 10171                           
 10172                           
 10173                           ;controlador3.c: 32: OPTION_REGbits.T0CS = 0;
 10174  1000  1683               	bsf	3,5	;RP0=1, select bank1
 10175  1001  1303               	bcf	3,6	;RP1=0, select bank1
 10176  1002  1281               	bcf	1,5	;volatile
 10177                           
 10178                           ;controlador3.c: 33: OPTION_REGbits.PSA = 0;
 10179  1003  1181               	bcf	1,3	;volatile
 10180  1004                     l3173:
 10181                           
 10182                           ;controlador3.c: 34: OPTION_REGbits.PS = 0b111;
 10183  1004  3007               	movlw	7
 10184  1005  0481               	iorwf	1,f	;volatile
 10185  1006                     l3175:
 10186                           
 10187                           ;controlador3.c: 35: TMR0 = 61;
 10188  1006  303D               	movlw	61
 10189  1007  1283               	bcf	3,5	;RP0=0, select bank0
 10190  1008  1303               	bcf	3,6	;RP1=0, select bank0
 10191  1009  0081               	movwf	1	;volatile
 10192  100A                     l309:
 10193  100A  0008               	return
 10194  100B                     __end_of_init_timer0:
 10195                           
 10196                           	psect	text42
 10197  13E3                     __ptext42:	
 10198 ;; *************** function _Handler *****************
 10199 ;; Defined at:
 10200 ;;		line 46 in file "controlador3.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2, status,0, pclath, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10214 ;;      Params:         0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0
 10216 ;;      Temps:          3       0       0       0       0
 10217 ;;      Totals:         3       0       0       0       0
 10218 ;;Total ram usage:        3 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    1
 10221 ;; This function calls:
 10222 ;;		___awmod
 10223 ;; This function is called by:
 10224 ;;		Interrupt level 1
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _Handler
 10230  13E3                     _Handler:
 10231  13E3                     i1l3215:
 10232                           
 10233                           ;controlador3.c: 48: if (INTCONbits.T0IF) {
 10234  13E3  1D0B               	btfss	11,2	;volatile
 10235  13E4  2BE6               	goto	u394_21
 10236  13E5  2BE7               	goto	u394_20
 10237  13E6                     u394_21:
 10238  13E6  2C5C               	goto	i1l322
 10239  13E7                     u394_20:
 10240  13E7                     i1l3217:
 10241                           
 10242                           ;controlador3.c: 49: TMR0 = 61;
 10243  13E7  303D               	movlw	61
 10244  13E8  1283               	bcf	3,5	;RP0=0, select bank0
 10245  13E9  1303               	bcf	3,6	;RP1=0, select bank0
 10246  13EA  0081               	movwf	1	;volatile
 10247  13EB                     i1l3219:
 10248                           
 10249                           ;controlador3.c: 51: if (cont == 501)
 10250  13EB  30F5               	movlw	245
 10251  13EC  067A               	xorwf	_cont,w
 10252  13ED  1D03               	skipz
 10253  13EE  2BF3               	goto	u395_21
 10254  13EF  037B               	decf	_cont+1,w
 10255  13F0  1D03               	btfss	3,2
 10256  13F1  2BF3               	goto	u395_21
 10257  13F2  2BF4               	goto	u395_20
 10258  13F3                     u395_21:
 10259  13F3  2BF8               	goto	i1l3223
 10260  13F4                     u395_20:
 10261  13F4                     i1l3221:
 10262                           
 10263                           ;controlador3.c: 52: cont = 1;
 10264  13F4  3001               	movlw	1
 10265  13F5  00FA               	movwf	_cont
 10266  13F6  3000               	movlw	0
 10267  13F7  00FB               	movwf	_cont+1
 10268  13F8                     i1l3223:
 10269                           
 10270                           ;controlador3.c: 54: if (cont % 25 == 0 && cont != 0) {
 10271  13F8  3019               	movlw	25
 10272  13F9  00F0               	movwf	___awmod@divisor
 10273  13FA  3000               	movlw	0
 10274  13FB  00F1               	movwf	___awmod@divisor+1
 10275  13FC  087B               	movf	_cont+1,w
 10276  13FD  00F3               	movwf	___awmod@dividend+1
 10277  13FE  087A               	movf	_cont,w
 10278  13FF  00F2               	movwf	___awmod@dividend
 10279  1400  160A  118A  221B  160A  118A  	fcall	___awmod
 10280  1405  0870               	movf	?___awmod,w
 10281  1406  0471               	iorwf	?___awmod+1,w
 10282  1407  1D03               	btfss	3,2
 10283  1408  2C0A               	goto	u396_21
 10284  1409  2C0B               	goto	u396_20
 10285  140A                     u396_21:
 10286  140A  2C53               	goto	i1l3249
 10287  140B                     u396_20:
 10288  140B                     i1l3225:
 10289  140B  087A               	movf	_cont,w
 10290  140C  047B               	iorwf	_cont+1,w
 10291  140D  1903               	btfsc	3,2
 10292  140E  2C10               	goto	u397_21
 10293  140F  2C11               	goto	u397_20
 10294  1410                     u397_21:
 10295  1410  2C53               	goto	i1l3249
 10296  1411                     u397_20:
 10297  1411                     i1l3227:
 10298                           
 10299                           ;controlador3.c: 55: ADCready = 1;
 10300  1411  3001               	movlw	1
 10301  1412  1683               	bsf	3,5	;RP0=1, select bank1
 10302  1413  1303               	bcf	3,6	;RP1=0, select bank1
 10303  1414  00D9               	movwf	_ADCready^(0+128)
 10304  1415  3000               	movlw	0
 10305  1416  00DA               	movwf	(_ADCready^(0+128)+1)
 10306  1417                     i1l3229:
 10307                           
 10308                           ;controlador3.c: 56: INTCONbits.T0IF = 0;
 10309  1417  110B               	bcf	11,2	;volatile
 10310  1418                     i1l3231:
 10311                           
 10312                           ;controlador3.c: 57: INTCONbits.T0IE = 0;
 10313  1418  128B               	bcf	11,5	;volatile
 10314  1419                     i1l3233:
 10315                           
 10316                           ;controlador3.c: 58: estadoActual = LeerPotenciometro;
 10317  1419  01E8               	clrf	_estadoActual^(0+128)
 10318  141A                     i1l3235:
 10319                           
 10320                           ;controlador3.c: 59: if (cont == 100 || cont == 200 || cont == 300 || cont == 400 || con
      +                          t == 500) {
 10321  141A  3064               	movlw	100
 10322  141B  067A               	xorwf	_cont,w
 10323  141C  047B               	iorwf	_cont+1,w
 10324  141D  1903               	btfsc	3,2
 10325  141E  2C20               	goto	u398_21
 10326  141F  2C21               	goto	u398_20
 10327  1420                     u398_21:
 10328  1420  2C43               	goto	i1l327
 10329  1421                     u398_20:
 10330  1421                     i1l3237:
 10331  1421  30C8               	movlw	200
 10332  1422  067A               	xorwf	_cont,w
 10333  1423  047B               	iorwf	_cont+1,w
 10334  1424  1903               	btfsc	3,2
 10335  1425  2C27               	goto	u399_21
 10336  1426  2C28               	goto	u399_20
 10337  1427                     u399_21:
 10338  1427  2C43               	goto	i1l327
 10339  1428                     u399_20:
 10340  1428                     i1l3239:
 10341  1428  302C               	movlw	44
 10342  1429  067A               	xorwf	_cont,w
 10343  142A  1D03               	skipz
 10344  142B  2C31               	goto	u400_20
 10345  142C  037B               	decf	_cont+1,w
 10346  142D  1903               	btfsc	3,2
 10347  142E  2C30               	goto	u400_21
 10348  142F  2C31               	goto	u400_20
 10349  1430                     u400_21:
 10350  1430  2C43               	goto	i1l327
 10351  1431                     u400_20:
 10352  1431                     i1l3241:
 10353  1431  3090               	movlw	144
 10354  1432  067A               	xorwf	_cont,w
 10355  1433  1D03               	skipz
 10356  1434  2C3A               	goto	u401_20
 10357  1435  037B               	decf	_cont+1,w
 10358  1436  1903               	btfsc	3,2
 10359  1437  2C39               	goto	u401_21
 10360  1438  2C3A               	goto	u401_20
 10361  1439                     u401_21:
 10362  1439  2C43               	goto	i1l327
 10363  143A                     u401_20:
 10364  143A                     i1l3243:
 10365  143A  30F4               	movlw	244
 10366  143B  067A               	xorwf	_cont,w
 10367  143C  1D03               	skipz
 10368  143D  2C42               	goto	u402_21
 10369  143E  037B               	decf	_cont+1,w
 10370  143F  1D03               	btfss	3,2
 10371  1440  2C42               	goto	u402_21
 10372  1441  2C43               	goto	u402_20
 10373  1442                     u402_21:
 10374  1442  2C6B               	goto	i1l332
 10375  1443                     u402_20:
 10376  1443                     i1l327:
 10377                           
 10378                           ;controlador3.c: 60: estadoInterrupcion = Sensores_Actuadores;
 10379  1443  01E7               	clrf	_estadoInterrupcion^(0+128)
 10380  1444  0AE7               	incf	_estadoInterrupcion^(0+128),f
 10381  1445                     i1l3245:
 10382                           
 10383                           ;controlador3.c: 61: if (cont == 500)
 10384  1445  30F4               	movlw	244
 10385  1446  067A               	xorwf	_cont,w
 10386  1447  1D03               	skipz
 10387  1448  2C4D               	goto	u403_21
 10388  1449  037B               	decf	_cont+1,w
 10389  144A  1D03               	btfss	3,2
 10390  144B  2C4D               	goto	u403_21
 10391  144C  2C4E               	goto	u403_20
 10392  144D                     u403_21:
 10393  144D  2C5B               	goto	i1l329
 10394  144E                     u403_20:
 10395  144E                     i1l3247:
 10396                           
 10397                           ;controlador3.c: 62: estadoInterrupcion = MostrarDatos;
 10398  144E  3002               	movlw	2
 10399  144F  00F7               	movwf	??_Handler
 10400  1450  0877               	movf	??_Handler,w
 10401  1451  00E7               	movwf	_estadoInterrupcion^(0+128)
 10402  1452  2C6B               	goto	i1l332
 10403  1453                     i1l3249:
 10404                           
 10405                           ;controlador3.c: 65: cont++;
 10406  1453  3001               	movlw	1
 10407  1454  07FA               	addwf	_cont,f
 10408  1455  1803               	skipnc
 10409  1456  0AFB               	incf	_cont+1,f
 10410  1457  3000               	movlw	0
 10411  1458  07FB               	addwf	_cont+1,f
 10412  1459                     i1l3251:
 10413                           
 10414                           ;controlador3.c: 66: INTCONbits.T0IF = 0;
 10415  1459  110B               	bcf	11,2	;volatile
 10416  145A  2C6B               	goto	i1l332
 10417  145B                     i1l329:
 10418                           
 10419                           ;controlador3.c: 68: };controlador3.c: 70: } else if (PIR1bits.ADIF == 1) {
 10420  145B  2C6B               	goto	i1l332
 10421  145C                     i1l322:
 10422  145C  1283               	bcf	3,5	;RP0=0, select bank0
 10423  145D  1303               	bcf	3,6	;RP1=0, select bank0
 10424  145E  1F0C               	btfss	12,6	;volatile
 10425  145F  2C61               	goto	u404_21
 10426  1460  2C62               	goto	u404_20
 10427  1461                     u404_21:
 10428  1461  2C6B               	goto	i1l332
 10429  1462                     u404_20:
 10430  1462                     i1l3253:
 10431                           
 10432                           ;controlador3.c: 71: ADCready = 1;
 10433  1462  3001               	movlw	1
 10434  1463  1683               	bsf	3,5	;RP0=1, select bank1
 10435  1464  1303               	bcf	3,6	;RP1=0, select bank1
 10436  1465  00D9               	movwf	_ADCready^(0+128)
 10437  1466  3000               	movlw	0
 10438  1467  00DA               	movwf	(_ADCready^(0+128)+1)
 10439  1468                     i1l3255:
 10440                           
 10441                           ;controlador3.c: 72: PIR1bits.ADIF = 0;
 10442  1468  1283               	bcf	3,5	;RP0=0, select bank0
 10443  1469  1303               	bcf	3,6	;RP1=0, select bank0
 10444  146A  130C               	bcf	12,6	;volatile
 10445  146B                     i1l332:
 10446  146B  0879               	movf	??_Handler+2,w
 10447  146C  008A               	movwf	10
 10448  146D  0E78               	swapf	??_Handler+1,w
 10449  146E  0083               	movwf	3
 10450  146F  0EFE               	swapf	btemp,f
 10451  1470  0E7E               	swapf	btemp,w
 10452  1471  0009               	retfie
 10453  1472                     __end_of_Handler:
 10454                           
 10455                           	psect	intentry
 10456  0004                     __pintentry:	
 10457                           ;incstack = 0
 10458                           ; Regs used in _Handler: [wreg+status,2+status,0+pclath+cstack]
 10459                           
 10460  0004                     interrupt_function:
 10461  007E                     saved_w	set	btemp
 10462  0004  00FE               	movwf	btemp
 10463  0005  0E03               	swapf	3,w
 10464  0006  00F8               	movwf	??_Handler+1
 10465  0007  080A               	movf	10,w
 10466  0008  00F9               	movwf	??_Handler+2
 10467  0009  160A  118A  2BE3   	ljmp	_Handler
 10468                           
 10469                           	psect	text43
 10470  121B                     __ptext43:	
 10471 ;; *************** function ___awmod *****************
 10472 ;; Defined at:
 10473 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  divisor         2    0[COMMON] int 
 10476 ;;  dividend        2    2[COMMON] int 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  sign            1    6[COMMON] unsigned char 
 10479 ;;  counter         1    5[COMMON] unsigned char 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  2    0[COMMON] int 
 10482 ;; Registers used:
 10483 ;;		wreg, status,2, status,0
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10489 ;;      Params:         4       0       0       0       0
 10490 ;;      Locals:         2       0       0       0       0
 10491 ;;      Temps:          1       0       0       0       0
 10492 ;;      Totals:         7       0       0       0       0
 10493 ;;Total ram usage:        7 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_Handler
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function ___awmod
 10504  121B                     ___awmod:
 10505  121B                     i1l3177:	
 10506                           ;incstack = 0
 10507                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10508                           
 10509  121B  01F6               	clrf	___awmod@sign
 10510  121C                     i1l3179:
 10511  121C  1FF3               	btfss	___awmod@dividend+1,7
 10512  121D  2A1F               	goto	u385_21
 10513  121E  2A20               	goto	u385_20
 10514  121F                     u385_21:
 10515  121F  2A27               	goto	i1l3185
 10516  1220                     u385_20:
 10517  1220                     i1l3181:
 10518  1220  09F2               	comf	___awmod@dividend,f
 10519  1221  09F3               	comf	___awmod@dividend+1,f
 10520  1222  0AF2               	incf	___awmod@dividend,f
 10521  1223  1903               	skipnz
 10522  1224  0AF3               	incf	___awmod@dividend+1,f
 10523  1225                     i1l3183:
 10524  1225  01F6               	clrf	___awmod@sign
 10525  1226  0AF6               	incf	___awmod@sign,f
 10526  1227                     i1l3185:
 10527  1227  1FF1               	btfss	___awmod@divisor+1,7
 10528  1228  2A2A               	goto	u386_21
 10529  1229  2A2B               	goto	u386_20
 10530  122A                     u386_21:
 10531  122A  2A30               	goto	i1l3189
 10532  122B                     u386_20:
 10533  122B                     i1l3187:
 10534  122B  09F0               	comf	___awmod@divisor,f
 10535  122C  09F1               	comf	___awmod@divisor+1,f
 10536  122D  0AF0               	incf	___awmod@divisor,f
 10537  122E  1903               	skipnz
 10538  122F  0AF1               	incf	___awmod@divisor+1,f
 10539  1230                     i1l3189:
 10540  1230  0870               	movf	___awmod@divisor,w
 10541  1231  0471               	iorwf	___awmod@divisor+1,w
 10542  1232  1903               	btfsc	3,2
 10543  1233  2A35               	goto	u387_21
 10544  1234  2A36               	goto	u387_20
 10545  1235                     u387_21:
 10546  1235  2A65               	goto	i1l3207
 10547  1236                     u387_20:
 10548  1236                     i1l3191:
 10549  1236  01F5               	clrf	___awmod@counter
 10550  1237  0AF5               	incf	___awmod@counter,f
 10551  1238  2A44               	goto	i1l3197
 10552  1239                     i1l3193:
 10553  1239  3001               	movlw	1
 10554  123A                     u388_25:
 10555  123A  1003               	clrc
 10556  123B  0DF0               	rlf	___awmod@divisor,f
 10557  123C  0DF1               	rlf	___awmod@divisor+1,f
 10558  123D  3EFF               	addlw	-1
 10559  123E  1D03               	skipz
 10560  123F  2A3A               	goto	u388_25
 10561  1240                     i1l3195:
 10562  1240  3001               	movlw	1
 10563  1241  00F4               	movwf	??___awmod
 10564  1242  0874               	movf	??___awmod,w
 10565  1243  07F5               	addwf	___awmod@counter,f
 10566  1244                     i1l3197:
 10567  1244  1FF1               	btfss	___awmod@divisor+1,7
 10568  1245  2A47               	goto	u389_21
 10569  1246  2A48               	goto	u389_20
 10570  1247                     u389_21:
 10571  1247  2A39               	goto	i1l3193
 10572  1248                     u389_20:
 10573  1248                     i1l3199:
 10574  1248  0871               	movf	___awmod@divisor+1,w
 10575  1249  0273               	subwf	___awmod@dividend+1,w
 10576  124A  1D03               	skipz
 10577  124B  2A4E               	goto	u390_25
 10578  124C  0870               	movf	___awmod@divisor,w
 10579  124D  0272               	subwf	___awmod@dividend,w
 10580  124E                     u390_25:
 10581  124E  1C03               	skipc
 10582  124F  2A51               	goto	u390_21
 10583  1250  2A52               	goto	u390_20
 10584  1251                     u390_21:
 10585  1251  2A58               	goto	i1l3203
 10586  1252                     u390_20:
 10587  1252                     i1l3201:
 10588  1252  0870               	movf	___awmod@divisor,w
 10589  1253  02F2               	subwf	___awmod@dividend,f
 10590  1254  0871               	movf	___awmod@divisor+1,w
 10591  1255  1C03               	skipc
 10592  1256  03F3               	decf	___awmod@dividend+1,f
 10593  1257  02F3               	subwf	___awmod@dividend+1,f
 10594  1258                     i1l3203:
 10595  1258  3001               	movlw	1
 10596  1259                     u391_25:
 10597  1259  1003               	clrc
 10598  125A  0CF1               	rrf	___awmod@divisor+1,f
 10599  125B  0CF0               	rrf	___awmod@divisor,f
 10600  125C  3EFF               	addlw	-1
 10601  125D  1D03               	skipz
 10602  125E  2A59               	goto	u391_25
 10603  125F                     i1l3205:
 10604  125F  3001               	movlw	1
 10605  1260  02F5               	subwf	___awmod@counter,f
 10606  1261  1D03               	btfss	3,2
 10607  1262  2A64               	goto	u392_21
 10608  1263  2A65               	goto	u392_20
 10609  1264                     u392_21:
 10610  1264  2A48               	goto	i1l3199
 10611  1265                     u392_20:
 10612  1265                     i1l3207:
 10613  1265  0876               	movf	___awmod@sign,w
 10614  1266  1903               	btfsc	3,2
 10615  1267  2A69               	goto	u393_21
 10616  1268  2A6A               	goto	u393_20
 10617  1269                     u393_21:
 10618  1269  2A6F               	goto	i1l3211
 10619  126A                     u393_20:
 10620  126A                     i1l3209:
 10621  126A  09F2               	comf	___awmod@dividend,f
 10622  126B  09F3               	comf	___awmod@dividend+1,f
 10623  126C  0AF2               	incf	___awmod@dividend,f
 10624  126D  1903               	skipnz
 10625  126E  0AF3               	incf	___awmod@dividend+1,f
 10626  126F                     i1l3211:
 10627  126F  0873               	movf	___awmod@dividend+1,w
 10628  1270  00F1               	movwf	?___awmod+1
 10629  1271  0872               	movf	___awmod@dividend,w
 10630  1272  00F0               	movwf	?___awmod
 10631  1273                     i1l783:
 10632  1273  0008               	return
 10633  1274                     __end_of___awmod:
 10634  007E                     btemp	set	126	;btemp
 10635  007E                     wtemp0	set	126
 10636                           
 10637                           	psect	config
 10638                           
 10639                           ;Config register CONFIG1 @ 0x2007
 10640                           ;	Oscillator Selection bits
 10641                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10642                           ;	Watchdog Timer Enable bit
 10643                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10644                           ;	Power-up Timer Enable bit
 10645                           ;	PWRTE = ON, PWRT enabled
 10646                           ;	RE3/MCLR pin function select bit
 10647                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10648                           ;	Code Protection bit
 10649                           ;	CP = OFF, Program memory code protection is disabled
 10650                           ;	Data Code Protection bit
 10651                           ;	CPD = OFF, Data memory code protection is disabled
 10652                           ;	Brown Out Reset Selection bits
 10653                           ;	BOREN = OFF, BOR disabled
 10654                           ;	Internal External Switchover bit
 10655                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10656                           ;	Fail-Safe Clock Monitor Enabled bit
 10657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10658                           ;	Low Voltage Programming Enable bit
 10659                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10660                           ;	In-Circuit Debugger Mode bit
 10661                           ;	DEBUG = 0x1, unprogrammed default
 10662  2007                     	org	8199
 10663  2007  20E2               	dw	8418
 10664                           
 10665                           ;Config register CONFIG2 @ 0x2008
 10666                           ;	Brown-out Reset Selection bit
 10667                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10668                           ;	Flash Program Memory Self Write Enable bits
 10669                           ;	WRT = OFF, Write protection off
 10670  2008                     	org	8200
 10671  2008  3FFF               	dw	16383

Data Sizes:
    Strings     531
    Constant    30
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     79      79
    BANK1            80     41      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$989	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 65
		 -> STR_18(CODE[35]), STR_17(CODE[21]), STR_16(CODE[28]), STR_15(CODE[14]), 
		 -> STR_14(CODE[18]), STR_13(CODE[32]), STR_12(CODE[28]), STR_11(CODE[16]), 
		 -> STR_10(CODE[28]), STR_9(CODE[28]), STR_8(CODE[19]), STR_7(CODE[49]), 
		 -> STR_6(CODE[65]), STR_5(CODE[29]), STR_4(CODE[19]), STR_3(CODE[15]), 
		 -> STR_2(CODE[28]), STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Handler->___awmod

Critical Paths under _main in BANK0

    _main->_printf
    _read_temperatura_interior->_printf
    _read_temperatura_exterior->_printf
    ___ftsub->___ftdiv
    _read_potenciometro->_printf
    _read_intensidad_lumninosa->_printf
    _read_humedad->_printf
    ___ftadd->___awtoft
    _mostrarDatos->_printf
    _get_velocidad_ventilador->___fttol
    _mostrarConsigna->_printf
    _mensajeBienvenida->_printf
    _logica_Actuadores->_printf
    _set_Ventilador->___fttol
    _printf->_get_velocidad_ventilador
    ___lwmod->___lwdiv
    _get_tempObjetivo->___awdiv
    ___awdiv->___wmul
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftge->___awtoft
    ___ftdiv->___ftadd
    ___awtoft->___ftpack

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_read_temperatura_exterior
    _read_temperatura_interior->_printf
    _read_temperatura_exterior->_printf
    _read_potenciometro->_printf
    _read_intensidad_lumninosa->_printf
    _read_humedad->_printf
    _mostrarDatos->_printf
    _mostrarConsigna->_printf
    _mensajeBienvenida->_printf
    _logica_Actuadores->_printf

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  116326
                                             38 BANK1      3     3      0
                        _init_timer0
                          _init_uart
                  _logica_Actuadores
                  _mensajeBienvenida
                    _mostrarConsigna
                       _mostrarDatos
                             _printf
                       _read_humedad
          _read_intensidad_lumninosa
                 _read_potenciometro
          _read_temperatura_exterior
          _read_temperatura_interior
                  _set_up_Actuadores
                    _set_up_Sensores
 ---------------------------------------------------------------------------------
 (1) _set_up_Sensores                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_up_Actuadores                                    0     0      0       0
                      _init_PWM_CCP1
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_PWM_CCP1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_temperatura_interior                           10    10      0   15396
                                             22 BANK1     10    10      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
           _get_temperatura_interior
                             _printf
 ---------------------------------------------------------------------------------
 (1) _read_temperatura_exterior                           16    16      0   16023
                                             22 BANK1     16    16      0
                           ___awtoft
                            ___ftdiv
                            ___ftsub
                            ___fttol
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3172
                                             43 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_potenciometro                                   9     9      0   15931
                                             22 BANK1      9     9      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                   _get_tempObjetivo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _read_intensidad_lumninosa                           10    10      0   12805
                                             22 BANK1     10    10      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _read_humedad                                        10    10      0   15804
                                             22 BANK1     10    10      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2999
                                             14 BANK0     13     7      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mostrarDatos                                         0     0      0    5939
                        _get_humedad
            _get_intensidad_luminosa
           _get_temperatura_exterior
           _get_temperatura_interior
           _get_velocidad_ventilador
                             _printf
 ---------------------------------------------------------------------------------
 (2) _get_velocidad_ventilador                             2     0      2     676
                                             73 BANK0      2     0      2
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _get_temperatura_exterior                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_intensidad_luminosa                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_humedad                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mostrarConsigna                                      0     0      0    5775
                   _get_tempObjetivo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensajeBienvenida                                    0     0      0    5263
                             _printf
 ---------------------------------------------------------------------------------
 (1) _logica_Actuadores                                    0     0      0   18127
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                             ___wmul
              _get_lastPotenciometro
                   _get_tempObjetivo
           _get_temperatura_interior
                             _printf
                     _set_Calefactor
                   _set_Refrigerador
                     _set_Ventilador
 ---------------------------------------------------------------------------------
 (2) _set_Ventilador                                       4     2      2    1580
                                             73 BANK0      4     2      2
                            ___awdiv
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _set_Refrigerador                                     2     0      2     128
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _set_Calefactor                                       2     0      2     128
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _printf                                              30    26      4    5263
                                             75 BANK0      4     0      4
                                              0 BANK1     22    22      0
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                        _get_humedad (ARG)
            _get_intensidad_luminosa (ARG)
                   _get_tempObjetivo (ARG)
           _get_temperatura_exterior (ARG)
           _get_temperatura_interior (ARG)
           _get_velocidad_ventilador (ARG)
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     940
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     145
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _get_temperatura_interior                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_tempObjetivo                                     2     0      2     512
                                             15 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _get_lastPotenciometro                                3     0      3       0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     676
                                             59 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2591
                                             43 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     454
                                             14 BANK0      6     0      6
                           ___awtoft (ARG)
              _get_lastPotenciometro (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3393
                                             27 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2462
                                              8 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1947
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              3     3      0     402
                                              7 COMMON     3     3      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_timer0
   _init_uart
   _logica_Actuadores
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       _get_lastPotenciometro (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _get_lastPotenciometro
     _get_tempObjetivo
       ___awdiv
         ___wmul (ARG)
     _get_temperatura_interior
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
     _set_Calefactor
     _set_Refrigerador
     _set_Ventilador
       ___awdiv
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
   _mensajeBienvenida
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _mostrarConsigna
     _get_tempObjetivo
       ___awdiv
         ___wmul (ARG)
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _mostrarDatos
     _get_humedad
     _get_intensidad_luminosa
     _get_temperatura_exterior
     _get_temperatura_interior
     _get_velocidad_ventilador
       ___fttol
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _printf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _get_humedad (ARG)
     _get_intensidad_luminosa (ARG)
     _get_tempObjetivo (ARG)
       ___awdiv
         ___wmul (ARG)
     _get_temperatura_exterior (ARG)
     _get_temperatura_interior (ARG)
     _get_velocidad_ventilador (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
   _read_humedad
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _read_intensidad_lumninosa
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _read_potenciometro
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _get_tempObjetivo
       ___awdiv
         ___wmul (ARG)
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _read_temperatura_exterior
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _read_temperatura_interior
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     ___wmul
     _get_temperatura_interior
     _printf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _get_humedad (ARG)
       _get_intensidad_luminosa (ARG)
       _get_tempObjetivo (ARG)
         ___awdiv
           ___wmul (ARG)
       _get_temperatura_exterior (ARG)
       _get_temperatura_interior (ARG)
       _get_velocidad_ventilador (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _set_up_Actuadores
     _init_PWM_CCP1
     _init_timer2
   _set_up_Sensores

 _Handler (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A8      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 23 21:12:01 2020

                                 pc 0002                      ___bmul@product 0022  
                                l41 1127                                  l50 1F75  
                                l47 17FF                                  l56 0C04  
                                l65 0AFA                                  l90 1FBD  
                                l74 154A                                  l59 1F9C  
                                l83 1714                                  l68 1F82  
                                l77 1F8F                                  l87 115E  
                      ___awdiv@sign 002C                                  fsr 0004  
               ___wmul@multiplicand 0022                        ___ftadd@exp1 003A  
                      ___ftadd@exp2 0039          read_potenciometro@lecturaV 00BC  
                      _sumaLecturas 00DD                        ___ftadd@sign 0038  
                               l141 103E                                 l221 1022  
                               l150 1F68                                 l231 1F50  
                               l215 1F44                                 l144 0946  
                               l224 1F5B                                 l153 1FFF  
                               l226 1F5C                                 l234 10FB  
                               l218 1FAA                                 l147 094C  
                               l156 1356                                 l340 0C50  
                               l309 100A                                 l229 1F4F  
                               l245 0FFF                                 l511 02C0  
                               l520 0338                                 l248 105C  
                               l353 0D1A                                 l345 0C6F  
                               l540 046E                                 l516 02FC  
                               l460 0049                                 l613 1FE8  
                               l461 004D                                 l463 0068  
                               l552 053E                                 l481 0197  
                               l457 0039                                 l459 0045  
                               l556 04F1                                 l820 0D72  
                               l485 0199                                 l821 0D77  
                               l806 06D4                                 l486 019A  
                               l830 0DE8                                 l807 06DE  
                               l583 067A                                 l808 06F8  
                               l488 01BD                                 l816 0E52  
                               l497 020B                                 l770 12DC  
                               l578 0629                                 l587 1090  
                               l819 0D68                                 l589 10A8  
                               l862 162F                                 l847 0A0E  
                               l856 1198                                 l890 13C5  
                               l795 06F8                                 l883 13E2  
                               l789 10D1                                 l799 06B9  
                               l879 1081                                 l995 121A  
                               _PR2 0092                                 _lum 00DF  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0076                        ___ftdiv@cntr 0045  
                      ___ftdiv@sign 004A                                l1005 11D4  
                              l1015 1FD1                                l2201 0689  
                              l3001 1797                                l2211 06A7  
                              l3011 0B03                                l3003 17C8  
                              l2221 06D8                                l2213 06B1  
                              l2205 0690                                l2301 12BA  
                              l3101 16FE                                l3021 0B1A  
                              l3013 0B09                                l3005 17E9  
                              l3111 1030                                l3103 1023  
                              l2223 06E0                                l2215 06C0  
                              l2207 069C                                l2311 12D3  
                              l2303 12C0                                l2231 094A  
                              l3031 0BED                                l3023 0B28  
                              l3015 0B0F                                l3007 0AFB  
                              l3121 103D                                l3113 1033  
                              l3105 102A                                l2225 06F2  
                              l2217 06CA                                l2209 06A3  
                              l2401 1393                                l2313 12D8  
                              l2305 12C1                                l2241 1FD0  
                              l2233 1FC1                                l2321 0D42  
                              l3041 0A1E                                l3033 0A0F  
                              l3025 0B31                                l3017 0B10  
                              l3009 0AFB                                l3115 1036  
                              l3107 102D                                l2227 06F7  
                              l2219 06CE                                l2411 13A1  
                              l2403 1395                                l2307 12C8  
                              l2251 1097                                l2235 1FC2  
                              l3123 1F5D                                l2331 0D5E  
                              l2323 0D4C                                l3051 0AC2  
                              l3043 0A20                                l3035 0A0F  
                              l3027 0B93                                l3019 0B18  
                              l3131 1014                                l3117 1037  
                              l3109 102F                                l2421 13CA  
                              l2405 1399                                l2413 13B3  
                              l2309 12CE                                l2261 1FD6  
                              l2253 109E                                l2245 1082  
                              l2237 1FC8                                l2229 0946  
                              l2501 006E                                l3141 0E75  
                              l3125 1FE9                                l2341 0D78  
                              l2333 0D69                                l2317 0D1D  
                              l3053 0AE3                                l3045 0A2E  
                              l3037 0A15                                l3061 1479  
                              l3029 0BCC                                l3133 1018  
                              l3301 0C99                                l3119 103A  
                              l2423 13CF                                l2263 1FDA  
                              l2431 11D9                                l2255 10A4  
                              l2247 1086                                l2239 1FCE  
                              l2511 00C6                                l2503 0072  
                              l3151 0EEF                                l3143 0E7D  
                              l3127 12DD                                l2351 0DA4  
                              l2343 0D7E                                l2335 0D6D  
                              l2327 0D53                                l2319 0D3C  
                              l3047 0A37                                l3039 0A16  
                              l3071 14E1                                l3063 1481  
                              l3055 1472                                l3135 101D  
                              l3311 0CBF                                l3303 0C9E  
                              l2425 13DA                                l2281 1282  
                              l2273 1274                                l2265 1FDE  
                              l2441 11F1                                l2433 11DF  
                              l2249 108A                                l2601 028A  
                              l2521 00FF                                l2513 00CE  
                              l2505 0086                                l3161 0F57  
                              l3153 0F05                                l3145 0EB5  
                              l3137 0E53                                l2361 0DCD  
                              l2353 0DB0                                l2345 0D8B  
                              l2337 0D71                                l2329 0D58  
                              l3049 0A91                                l3073 1512  
                              l3065 1483                                l3057 1472  
                              l3081 163A                                l3129 100B  
                              l3321 0CDD                                l3313 0CC7  
                              l3305 0CA9                                l3171 1000  
                              l2419 13BA                                l2291 1297  
                              l2283 1286                                l2275 1277  
                              l2267 1FE0                                l2259 1FD5  
                              l2443 1202                                l2435 11E2  
                              l2451 1216                                l2603 0292  
                              l2611 02A4                                l2531 0130  
                              l2523 0107                                l2507 008A  
                              l2515 00E1                                l3163 0F5F  
                              l3155 0F1A                                l3147 0ED3  
                              l3139 0E64                                l2371 0E00  
                              l2363 0DD6                                l2347 0D95  
                              l2355 0DB7                                l2339 0D76  
                              l3075 1533                                l3067 1491  
                              l3059 1478                                l3091 165C  
                              l3083 163B                                l3331 0CF3  
                              l3323 0CE2                                l3315 0CCC  
                              l3307 0CAF                                l3173 1004  
                              l2197 067B                                l2293 129A  
                              l2285 128B                                l2277 127B  
                              l2269 1FE7                                l2445 1208  
                              l2437 11E9                                l2429 11D5  
                              l2461 11AB                                l2701 0467  
                              l2621 02C2                                l2613 02AC  
                              l2605 0296                                l2541 0146  
                              l2533 0139                                l2525 0117  
                              l2517 00F1                                l2509 00AD  
                              l3165 0F82                                l3157 0F20  
                              l3149 0EE0                                l2381 0E35  
                              l2373 0E10                                l2365 0DE2  
                              l2357 0DBD                                l2349 0D9B  
                              l3069 149A                                l3093 16A3  
                              l3085 1643                                l3077 1630  
                              l3333 0CF5                                l3325 0CE8  
                              l3317 0CDA                                l3309 0CBA  
                              l3261 0C0E                                l3175 1006  
                              l2199 0682                                l2295 12A1  
                              l2287 128F                                l2279 1280  
                              l2447 1209                                l2439 11ED  
                              l2471 11CA                                l2463 11AF  
                              l2455 1199                                l2711 0494  
                              l2703 0472                                l2631 02FE  
                              l2607 029A                                l2615 02B0  
                              l2551 017F                                l2535 013D  
                              l2543 014F                                l2527 011A  
                              l2519 00FB                                l3167 0FF6  
                              l3159 0F25                                l2383 0E37  
                              l2375 0E11                                l2367 0DEC  
                              l2359 0DC7                                l3095 16A9  
                              l3087 1645                                l3079 1634  
                              l3327 0CEC                                l3319 0CDB  
                              l3271 0C2E                                l3263 0C13  
                              l2393 1373                                l2297 12A5  
                              l2289 1291                                l2801 1156  
                              l2449 1210                                l2465 11B3  
                              l2457 11A1                                l2473 11D0  
                              l2721 04B1                                l2713 0499  
                              l2705 0479                                l2641 033A  
                              l2625 02C9                                l2617 02B5  
                              l2609 029E                                l2561 01C9  
                              l2545 0153                                l2537 0141  
                              l2529 0122                                l2553 0193  
                              l2481 0020                                l2377 0E21  
                              l2369 0DFC                                l3097 16F0  
                              l3089 1653                                l3337 0D01  
                              l3329 0CF2                                l3281 0C4A  
                              l3273 0C39                                l3265 0C18  
                              l3257 0C05                                l2395 1385  
                              l2387 1357                                l2299 12A9  
                              l2803 1158                                l2467 11BD  
                              l2459 11A4                                l2731 04DE  
                              l2715 049D                                l2707 0488  
                              l2723 04C0                                l2635 0305  
                              l2619 02BB                                l2571 01DD  
                              l2563 01D0                                l2555 019C  
                              l2547 0166                                l2539 0142  
                              l2483 0027                                l2811 103F  
                              l2379 0E25                                l3099 16F8  
                              l3291 0C80                                l3283 0C52  
                              l3339 0D12                                l3275 0C47  
                              l3267 0C23                                l3259 0C09  
                              l2901 1176                                l2397 1386  
                              l2389 136A                                l2477 1F69  
                              l2469 11C3                                l2741 0513  
                              l2733 04EA                                l2725 04C6  
                              l2709 048E                                l2717 04A3  
                              l2661 03AE                                l2645 0341  
                              l2629 02F1                                l2653 0374  
                              l2581 0210                                l2573 01EE  
                              l2565 01D2                                l2557 01A1  
                              l2549 0177                                l2485 002D  
                              l2821 1F42                                l3293 0C81  
                              l3285 0C62                                l3277 0C48  
                              l3269 0C28                                l2911 1197  
                              l2903 1183                                l2399 138C  
                              l2807 1FAB                                l2751 0537  
                              l2743 0522                                l2735 04F5  
                              l2727 04CA                                l2719 04AB  
                              l2671 03D2                                l2663 03B4  
                              l2639 032D                                l2655 0383  
                              l2591 0236                                l2583 0216  
                              l2575 01F7                                l2559 01B4  
                              l2487 0034                                l2831 1F51  
                              l2823 1F43                                l2815 1F3C  
                              l3295 0C83                                l3287 0C69  
                              l3279 0C49                                l2841 10A9  
                              l2905 1185                                l2921 1565  
                              l2761 05BE                                l2753 053F  
                              l2745 0528                                l2737 04FB  
                              l2729 04D0                                l2681 040C  
                              l2673 03E5                                l2665 03BC  
                              l2657 0393                                l2649 0369  
                              l2593 023B                                l2585 0227  
                              l2569 01D7                                l2577 01FD  
                              l2489 003C                                l2833 1F59  
                              l2817 1F40                                l2825 1F9D  
                              l3297 0C88                                l3289 0C72  
                              l2843 10AC                                l2907 1187  
                              l2931 15AB                                l2923 1576  
                              l2915 154B                                l2763 05C2  
                              l2755 0584                                l2771 0618  
                              l2747 052E                                l2739 050C  
                              l2691 043C                                l2683 0413  
                              l2675 03F3                                l2667 03C8  
                              l2659 039A                                l2587 022E  
                              l2499 0051                                l2835 1F45  
                              l2819 1F41                                l2827 1FA0  
                              l3299 0C8E                                l2845 10B0  
                              l2861 0978                                l2853 094D  
                              l2909 1195                                l2941 15C0  
                              l2933 15AC                                l2917 155E  
                              l2765 05D6                                l2757 05B5  
                              l2749 0533                                l2773 061E  
                              l2693 0447                                l2685 0422  
                              l2677 03F7                                l2669 03CE  
                              l2589 0232                                l2597 0240  
                              l2781 064E                                l2837 1F4D  
                              l2829 1FA6                                l2847 10B5  
                              l2871 099C                                l2855 0960  
                              l2951 15EA                                l2943 15D0  
                              l2935 15B2                                l2927 157D  
                              l2775 062D                                l2759 05B9  
                              l2695 0453                                l2687 042F  
                              l2679 0406                                l2599 027E  
                              l2839 10D2                                l2791 1F83  
                              l2783 1F90         __size_of_read_potenciometro 00E5  
                              l2849 10B7                                l2881 09CC  
                              l2873 09AE                                l2865 097F  
                              l2961 1614                                l2953 15EE  
                              l2945 15D8                                l2937 15B8  
                              l2929 15AA                                l2777 063A  
                              l2769 0609                                l2697 0457  
                              l2689 0438                                l2891 09F3  
                              l2883 09DA                                l2875 09B2  
                              l2867 0985                                l2859 0967  
                              l2955 15FE                                l2947 15E0  
                              l2939 15BC                                l2795 1128  
                              l2779 0640                                l2699 045B  
                              l2787 1F76                                l2885 09E4  
                              l2877 09B9                                l2869 098A  
                              l2957 1606                                l2949 15E6  
                              l2797 1131                                l2965 105D  
                              l2981 1125                                l2973 10FC  
                              l2887 09E5                                l2879 09C4  
                              l2895 115F                                l2959 160E  
                              l2799 1152                                l2967 1066  
                              l2991 171C                                l2983 1126  
                              l2975 111B                                l2889 09ED  
                              l2897 1165                                l2969 1068  
                              l2993 1724                                l2985 1715  
                              l2977 1121                                l2899 1172  
                              l2995 1726                                l2987 1715  
                              l2979 1122                                l2997 1734  
                              l2989 171B                                l2999 173D  
                              STR_1 088E                                STR_2 0872  
                              STR_3 0926                                STR_4 08CF  
                              STR_5 07E5                                STR_6 0730  
                              STR_7 0771                                STR_8 08BC  
                              STR_9 081E                                u2100 06BF  
                              u2101 06BE                                u2120 06CE  
                              u2200 108A                                u3000 028A  
                              u2121 06CD                                u2201 1089  
                              u3001 0289                                u2130 06D4  
                              u2050 0682                                u3010 029A  
                              u2131 06D3                                u2115 06C3  
                              u2051 0681                                u3011 0299  
                              u2140 06D8                                u2060 0689  
                              u2300 12A9                                u3100 0340  
                              u3020 02B5                                u2141 06D7  
                              u2061 0688                                u2301 12A8  
                              u3101 033F                                u3021 02B4  
                              u2150 06E9                                u2230 10A4  
                              u3110 0368                                u3030 02BB  
                              u2231 10A3                                u2215 1091  
                              u3111 0367                                u3031 02BA  
                              u2160 06F7                                u2080 06A2  
                              u2320 12BA                                u2240 1FDA  
                              u3200 040C                                u3120 0373  
                              u3040 02C8                                u2400 0D5E  
                              u2161 06F6                                u2081 06A1  
                              u2321 12B9                                u2241 1FD9  
                              u2225 1098                                u3201 040B  
                              u3121 0372                                u3041 02C7  
                              u2401 0D5D                                u2250 1FE7  
                              u2170 094A                                u3210 0422  
                              u3130 0393                                u3050 02F0  
                              u2410 0D68                                u2155 06E5  
                              u2075 0695                                u2315 12AA  
                              u2251 1FE6                                u2171 0949  
                              u3211 0421                                u3131 0392  
                              u3115 0364                                u3051 02EF  
                              u2411 0D67                                u2340 12CE  
                              u2260 127B                                u2180 1FC8  
                              u3300 04BF                                u3220 042F  
                              u3140 03AE                                u3060 02FB  
                              u2500 0DBD                                u2420 0D71  
                              u2341 12CD                                u2325 12B6  
                              u2261 127A                                u2181 1FC7  
                              u3301 04BE                                u3221 042E  
                              u3141 03AD                                u3061 02FA  
                              u2501 0DBC                                u2421 0D70  
                              u2350 12D3                                u2270 1286  
                              u2190 1FCE                                u3310 04C6  
                              u3230 0447                                u3150 03BC  
                              u3070 0304                                u2430 0D76  
                              u2095 06B2                                u2351 12D2  
                              u2335 12C2                                u2271 1285  
                              u2191 1FCD                                u3311 04C5  
                              u3231 0446                                u3151 03BB  
                              u3135 038F                                u3071 0303  
                              u3055 02EC                                u2431 0D75  
                              u2600 136A                                u2280 1297  
                              u3400 0629                                u3320 04CA  
                              u3240 045B                                u3160 03C8  
                              u3080 032C                                u2520 0DCD  
                              u2440 0D8B                                u2360 0D3C  
                              u2601 1369                                u2281 1296  
                              u3401 0628                                u3321 04C9  
                              u3241 045A                                u3225 042B  
                              u3161 03C7                                u3145 03AA  
                              u3081 032B                                u2521 0DCC  
                              u2441 0D8A                                u2361 0D3B  
                              u2610 137E                                u3410 062D  
                              u3330 04DE                                u3250 0467  
                              u3170 03D2                                u3090 0337  
                              u2530 0DD5                                u2370 0D42  
                              u4050 0C69                                u3411 062C  
                              u3331 04DD                                u3251 0466  
                              u3235 0443                                u3171 03D1  
                              u3091 0336                                u2531 0DD4  
                              u2515 0DBE                                u2371 0D41  
                              u4051 0C68                                u3500 0978  
                              u2620 1399                                u2700 11DF  
                              u3420 063A                                u3340 04EA  
                              u3260 0472                                u3180 03E5  
                              u2460 0D9B                                u2380 0D4C  
                              u4060 0C6F                                u3501 0977  
                              u2621 1398                                u2701 11DE  
                              u3421 0639                                u3341 04E9  
                              u3261 0471                                u3181 03E4  
                              u3085 0328                                u2461 0D9A  
                              u2381 0D4B                                u4061 0C6E  
                              u3510 0995                                u2630 13A0  
                              u3430 064E                                u3350 04F5  
                              u3270 0488                                u3190 0406  
                              u2550 0DE8                                u2470 0DA3  
                              u2390 0D58                                u4070 0CC7  
                              u2631 139F                                u2615 137A  
                              u2295 129B                                u3431 064D  
                              u3351 04F4                                u3271 0487  
                              u3191 0405                                u2551 0DE7  
                              u2471 0DA2                                u2455 0D8C  
                              u2391 0D57                                u4071 0CC6  
                              u3520 09A7                                u3600 155E  
                              u2720 11F1                                u2800 11BD  
                              u3440 067A                                u3360 050C  
                              u3280 0494                                u2560 0DEC  
                              u4080 0D1A                                u3601 155D  
                              u2721 11F0                                u2801 11BC  
                              u3441 0679                                u3425 0636  
                              u3361 050B                                u3281 0493  
                              u3185 03E1                                u2561 0DEB  
                              u2545 0DD7                                u4081 0D19  
                              u3610 1576                                u2650 13B2  
                              u3450 1131                                u3370 0522  
                              u3290 04AB                                u2570 0E00  
                              u2490 0DB6                                u3515 0991  
                              u3611 1575                                u2651 13B1  
                              u3451 1130                                u2715 11E3  
                              u3371 0521                                u3291 04AA  
                              u2571 0DFF                                u2491 0DB5  
                              u3540 09DA                                u3620 158D  
                              u2660 13B9                                u2740 1202  
                              u2820 11D0                                u3380 052E  
                              u2900 0141                                u3460 1F59  
                              u3541 09D9                                u3525 09A3  
                              u3701 15F7                                u2661 13B8  
                              u2645 13A2                                u2741 1201  
                              u2821 11CF                                u2805 11B9  
                              u3381 052D                                u2901 0140  
                              u3461 1F58                                u2581 0E1A  
                              u2485 0DA5                                u3702 15FE  
                              u3630 159F                                u3390 05B9  
                              u2910 0192                                u2830 002D  
                              u3470 1F4D                                u2590 0E25  
                              u2582 0E21                                u3535 09C5  
                              u2735 11F2                                u2815 11C4  
                              u3391 05B8                                u2911 0191  
                              u2831 002C                                u3471 1F4C  
                              u2591 0E24                                u3480 10B0  
                              u3560 09F3                                u3640 15C0  
                              u2680 13CA                                u2760 1216  
                              u2920 01A1                                u2840 006E  
                              u3800 0ED3                                u3481 10AF  
                              u3561 09F2                                u3545 09D6  
                              u3641 15BF                                u3625 1589  
                              u2681 13C9                                u2761 1215  
                              u2745 11FE                                u2921 01A0  
                              u2841 006D                                u3801 0ED2  
                              u4097 0C41                                u3490 0960  
                              u3570 1165                                u3730 1614  
                              u2690 13CF                                u2770 11A1  
                              u2930 01B4                                u2850 0086  
                              u3810 0EEF                                u3555 09E6  
                              u3491 095F                                u3571 1164  
                              u3731 1613                                u3715 15FF  
                              u3651 15C9                                u3635 159B  
                              u2691 13CE                                u2675 13BC  
                              u2755 120A                                u2771 11A0  
                              u2931 01B3                                u2851 0085  
                              u3811 0EEE                                u3580 1176  
                              u3652 15D0                                u2940 01C9  
                              u2860 00E0                                u3820 0F20  
                              u3740 1066                                u3581 1175  
                              u3725 1607                                u2941 01C8  
                              u2861 00DF                                u3821 0F1F  
                              u3741 1065                                u3590 1195  
                              u2790 11B3                                u2950 01D6  
                              u2870 00F1                                u3830 0F57  
                              u3750 1724                                u3591 1194  
                              u2791 11B2                                u2951 01D5  
                              u2935 01B0                                u2871 00F0  
                              u3831 0F56                                u3815 0EEB  
                              u3751 1723                                u3680 15E6  
                              u2960 01ED                                u2880 0117  
                              u3840 0FF6                                u3760 0B18  
                              u3681 15E5                                u3665 15D1  
                              u2785 11A5                                u2961 01EC  
                              u2945 01C5                                u2881 0116  
                              u3841 0FF5                                u3761 0B17  
                              u3690 15EE                                u2970 020B  
                              u2890 0130                                u3770 0A1E  
                              u3595 1191                                u3691 15ED  
                              u3675 15D9                                u2971 020A  
                              u2891 012F                                u3771 0A1D  
                              u2980 020F                                u3780 1481  
                              u2981 020E                                u3781 1480  
                              u2990 0226                                u3790 1643  
                              u2991 0225                                u3791 1642  
                              _TMR0 0001                                _TXIF 0064  
         _read_intensidad_lumninosa 1472                                _cont 007A  
                              _main 0C05                        ___ftpack@arg 0020  
                      ___ftpack@exp 0023                                _vent 00CF  
                              btemp 007E                                start 000C  
__size_of_read_temperatura_interior 00EB                     __end_of_Handler 1472  
                 ___bmul@multiplier 0023  __size_of_read_temperatura_exterior 010A  
                      ___ftmul@cntr 0059                        ___ftmul@sign 005A  
                      ___fttol@exp1 0068                        ___fttol@lval 0064  
                   _set_up_Sensores 10FC                               ?_main 0070  
                   __end_of___awdiv 12DD                     __end_of___ftadd 0E53  
                             STR_10 083A                               STR_11 0916  
                             STR_20 0905                               STR_12 0856  
                             STR_13 07C5                               STR_14 08E2  
                             STR_15 0935                               STR_16 0802  
                             STR_17 08A7                               STR_18 07A2  
                             STR_19 08F4                     __end_of___awmod 1274  
                   __end_of___ftdiv 0A0F                     __end_of___ftmul 1630  
                   ___awdiv@divisor 0026                     __end_of___ftsub 1082  
                   __end_of___fttol 13E3                     __end_of___lwdiv 121B  
                             i1l322 145C                               i1l332 146B  
                             i1l327 1443                               i1l329 145B  
                   __end_of___lwmod 11D5                               i1l783 1273  
                   ___awdiv@counter 002B                   ??_mostrarConsigna 006F  
                             _SPBRG 0099                               _TRISC 0087  
                             _TXREG 0019                        ?_init_timer0 0070  
                      ?_init_timer2 0070                      _set_Calefactor 1F45  
           __size_of_set_Ventilador 002A                       ___awtoft@sign 002D  
                   __end_of_dpowers 0728              __size_of_init_PWM_CCP1 0009  
                   __end_of_isdigit 1FD2                       ___ftpack@sign 0024  
                             _putch 0943                               pclath 000A  
                             status 0003              ?_get_lastPotenciometro 0020  
                             wtemp0 007E                   _logica_Actuadores 0E53  
                 ?_get_tempObjetivo 002F                     __initialization 000F  
                ?_logica_Actuadores 0070                   _lastPotenciometro 00D2  
                ??_get_tempObjetivo 0031                        __end_of_main 0D1D  
 __end_of_read_temperatura_interior 1800   __end_of_read_temperatura_exterior 0C05  
               ??_logica_Actuadores 006F                              ??_main 00C6  
                     ___fttol@sign1 0063              __end_of_set_Calefactor 1F51  
                            _ADRESH 001E                              _ADRESL 009E  
                            _CCPR1L 0015                    ___awdiv@dividend 0028  
                  __end_of___awtoft 10D2                              ?_putch 0070  
                  __end_of___ftpack 06F9                              i1l3201 1252  
                            i1l3211 126F                              i1l3203 1258  
                            i1l3205 125F                              i1l3221 13F4  
                            i1l3207 1265                              i1l3231 1418  
                            i1l3223 13F8                              i1l3215 13E3  
                            i1l3209 126A                              i1l3241 1431  
                            i1l3233 1419                              i1l3225 140B  
                            i1l3217 13E7                              i1l3251 1459  
                            i1l3243 143A                              i1l3235 141A  
                            i1l3227 1411                              i1l3219 13EB  
                            i1l3181 1220                              i1l3253 1462  
                            i1l3245 1445                              i1l3237 1421  
                            i1l3229 1417                              i1l3191 1236  
                            i1l3183 1225                              i1l3255 1468  
                            i1l3247 144E                              i1l3239 1428  
                            i1l3193 1239                              i1l3185 1227  
                            i1l3177 121B                              i1l3249 1453  
                            i1l3195 1240                              i1l3187 122B  
                            i1l3179 121C                              i1l3197 1244  
                            i1l3189 1230                              i1l3199 1248  
                            u400_20 1431                              u400_21 1430  
                            u401_20 143A                              u401_21 1439  
                            u402_20 1443                              u402_21 1442  
                            u403_20 144E                              u403_21 144D  
                            u404_20 1462                              u404_21 1461  
                            u390_20 1252                              u390_21 1251  
                            u390_25 124E                              u391_25 1259  
                            u392_20 1265                              u392_21 1264  
                            u393_20 126A                              u385_20 1220  
                            u393_21 1269                              u385_21 121F  
                            u386_20 122B                              u394_20 13E7  
                            _OSCCON 008F                              u386_21 122A  
                            u394_21 13E6                              u387_20 1236  
                            u395_20 13F4                              u387_21 1235  
                            u395_21 13F3                              u396_20 140B  
                            u396_21 140A                              u388_25 123A  
                            u389_20 1248                              u397_20 1411  
                            u389_21 1247                              u397_21 1410  
                            u398_20 1421                              u398_21 1420  
                            u399_20 1428                              u399_21 1427  
         __end_of_logica_Actuadores 1000                           ??_Handler 0077  
                            _SPBRGH 009A                   _set_up_Actuadores 100B  
                ?_set_up_Actuadores 0070             __end_of_set_up_Sensores 1128  
                            ___bmul 1FD2                              ___ftge 115F  
                     _init_PWM_CCP1 1F3C                       ?_read_humedad 0070  
                            ___wmul 1082                           ??___awdiv 002A  
                         ??___ftadd 0034                           ??___awmod 0074  
                         ??___ftdiv 0041                           ??___ftmul 0051  
                         ??___ftsub 0051                           ??___fttol 005F  
              __size_of_get_humedad 000D                           ??___lwdiv 0024  
               ??_set_up_Actuadores 0020                           ??___lwmod 002C  
    _read_intensidad_lumninosa$1428 00BB                    ___awdiv@quotient 002D  
                   ___awmod@divisor 0070            __end_of_set_Refrigerador 1F5D  
                   ___awmod@counter 0075                              _printf 0020  
             ___ftmul@f3_as_product 0056                     ?_set_Calefactor 0020  
                         ??_isdigit 0020                              saved_w 007E  
                            putch@c 0020    read_temperatura_interior@lectura 00BE  
          ?_get_intensidad_luminosa 0020           __end_of_set_up_Actuadores 1023  
           __end_of__initialization 001C                          ___ftadd@f1 002E  
                        ___ftadd@f2 0031                          ___ftge@ff1 002E  
                        ___ftge@ff2 0031            _get_velocidad_ventilador 103F  
          _get_temperatura_interior 1F69                          ___ftdiv@f1 003E  
                        ___ftdiv@f2 003B                          ___ftdiv@f3 0046  
          _get_temperatura_exterior 1F90                          ___awtoft@c 0028  
               ___bmul@multiplicand 0020                          ___ftmul@f1 004B  
                        ___ftmul@f2 004E                          ___ftsub@f1 004E  
                        ___ftsub@f2 004B                          ___fttol@f1 005B  
                    ?_init_PWM_CCP1 0070                      ??_read_humedad 00B6  
                    __pcstackCOMMON 0070  __size_of_read_intensidad_lumninosa 00D9  
                     __end_of_putch 094D                      _OPTION_REGbits 0081  
                    _set_Ventilador 10D2                __size_of_init_timer0 000B  
              __size_of_init_timer2 000E                             ??_putch 0020  
                        __pbssBANK1 00C9          __size_of_logica_Actuadores 01AD  
                 _mensajeBienvenida 1F5D                  ?_mensajeBienvenida 0070  
                __size_of_init_uart 001C                          __pmaintext 0C05  
                   _mostrarConsigna 1FE9                          _diferencia 00E9  
                           ?___bmul 0020                             ?___ftge 002E  
                  ?_set_up_Sensores 0070                             ?___wmul 0020  
               ??_mensajeBienvenida 006F                          __pintentry 0004  
 __end_of_read_intensidad_lumninosa 154B                           ?___awtoft 0028  
                         ?___ftpack 0020                             ?_printf 006B  
            __end_of_set_Ventilador 10FC          __end_of_read_potenciometro 1715  
           ??_get_lastPotenciometro 0023           __end_of_mensajeBienvenida 1F69  
                        __stringtab 0700          __size_of_set_up_Actuadores 0018  
                           _Handler 13E3                     ??_init_PWM_CCP1 0020  
                   __size_of___bmul 0017                     __size_of___ftge 003A  
                           ___awdiv 1274                             ___ftadd 0D1D  
                           ___awmod 121B                             ___ftdiv 094D  
                   __size_of___wmul 0027                             ___ftmul 154B  
                           ___ftsub 105D                             ___fttol 1357  
                           ___lwdiv 11D5                             ___lwmod 1199  
                        ??___awtoft 002B                          ??___ftpack 0025  
                           __ptext1 10FC                             __ptext2 100B  
                           __ptext3 1F9D                             __ptext4 1F3C  
                           __ptext5 1715                             __ptext6 0AFB  
                           __ptext7 105D                             __ptext8 1630  
                           __ptext9 1472                     __size_of_printf 065B  
                 __end_of_hexpowers 0730                     ?_set_Ventilador 0069  
                           _dpowers 071E                           _T2CONbits 0012  
         __size_of_get_tempObjetivo 0037                             _isdigit 1FBE  
                           _humedad 00E1                   __end_of_init_uart 103F  
                  ___awmod@dividend 0072                             _tempObj 00D5  
                           _tempInt 00D7                             _tempint 00E5  
                           _tempext 00E3                __end_of_read_humedad 0AFB  
                           clrloop0 1F35                end_of_initialization 001C  
                 __end_of_octpowers 071E                       ?_mostrarDatos 0070  
           __end_of_mostrarConsigna 2000                           _RCSTAbits 0018  
                           printf@c 00B3                             printf@f 006B  
 read_temperatura_interior@lecturaV 00B8                    ??_set_Calefactor 0022  
                      __pstringtext 0700          ?_read_temperatura_interior 0070  
                        _printf$982 00A3                          _printf$983 00A5  
                        _printf$989 00A7          ?_read_temperatura_exterior 0070  
                         _PORTBbits 0006                           _PORTCbits 0007  
                 ?_set_Refrigerador 0020                  _estadoInterrupcion 00E7  
                ??_set_Refrigerador 0022                           _TRISBbits 0086  
                         _TRISCbits 0087                  set_Refrigerador@on 0020  
        ??_get_velocidad_ventilador 006B          ??_get_temperatura_interior 0022  
        ??_get_temperatura_exterior 0022          __size_of_mensajeBienvenida 000C  
                    ??_mostrarDatos 006F                         _CCP1CONbits 0017  
                       ___ftdiv@exp 0049                         printf@width 00B1  
                         _TXSTAbits 0098                       ??_get_humedad 0022  
                       ___ftmul@exp 0055    __size_of_get_intensidad_luminosa 000D  
                 _read_humedad$1427 00BB                      __end_of___bmul 1FE9  
                    __end_of___ftge 1199                      __end_of___wmul 10A9  
                       _BAUDCTLbits 0187                      __end_of_printf 067B  
 read_temperatura_exterior@lecturaV 00BE                 start_initialization 000F  
              read_humedad@lecturaV 00B8         read_temperatura_exterior@V0 00B8  
       read_temperatura_exterior@Tc 00BB                    ?_mostrarConsigna 0070  
    _read_temperatura_interior$1425 00BB                            ??___bmul 0021  
                          ??___ftge 0034                            ??___wmul 0024  
                      _estadoActual 00E8                 __end_of_get_humedad 1F83  
                          ??_printf 00A0               __size_of_read_humedad 00EC  
                 __size_of___awtoft 0029                   __size_of___ftpack 007E  
                  _get_tempObjetivo 1128                       ??_init_timer0 0020  
                     ??_init_timer2 0020                         __pbssCOMMON 007A  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00A0                        _isdigit$1201 0020  
  read_intensidad_lumninosa@lectura 00BE      __size_of_get_lastPotenciometro 0013  
     __end_of_get_lastPotenciometro 1FBE                            ?_Handler 0070  
    _read_temperatura_exterior$1426 00C1                  _read_potenciometro 1630  
                  ___lwdiv@dividend 0022                            ?___awdiv 0026  
                          ?___ftadd 002E                            ?___awmod 0070  
                      _read_humedad 0A0F                            ?___ftdiv 003B  
                          ?___ftmul 004B                            ?___ftsub 004B  
                          ?___fttol 005B                 ?_read_potenciometro 0070  
                          ?___lwdiv 0020                            ?___lwmod 0028  
                  ??_set_Ventilador 006B                __end_of_mostrarDatos 1357  
        ?_read_intensidad_lumninosa 0070            __size_of_set_up_Sensores 002C  
                          ?_isdigit 0070               read_potenciometro@aux 00B8  
  __end_of_get_velocidad_ventilador 105D    __end_of_get_temperatura_interior 1F76  
  __end_of_get_temperatura_exterior 1F9D                           _hexpowers 0728  
                          _ADCready 00D9                    ___lwdiv@quotient 0025  
              ??_read_potenciometro 00B6                           _init_uart 1023  
                    __size_of_putch 000A                 __end_of_init_timer0 100B  
               __end_of_init_timer2 1FAB           read_potenciometro@lectura 00BA  
                 interrupt_function 0004                      ___wmul@product 0024  
                         clear_ram0 1F34                           _octpowers 0712  
                          _PIE1bits 008C             _get_intensidad_luminosa 1F83  
                          _PIR1bits 000C                         _get_humedad 1F76  
             __end_of_init_PWM_CCP1 1F45         ??_read_temperatura_interior 00B6  
       ??_read_temperatura_exterior 00B6                          _ADCON0bits 001F  
                       __stringbase 0712                          _ADCON1bits 009F  
                 ___wmul@multiplier 0020                          printf@flag 00B4  
                        printf@prec 00B0                      _numeroLecturas 00DB  
                        ?_init_uart 0070    read_temperatura_exterior@lectura 00C4  
          set_Ventilador@intensidad 0069           __size_of_set_Refrigerador 000C  
               read_humedad@lectura 00BE                    __size_of_Handler 008F  
                  __size_of___awdiv 0069                    __size_of___ftadd 0136  
                  __size_of___awmod 0059                    __size_of___ftdiv 00C2  
                  __size_of___ftmul 00E5                    __size_of___ftsub 0025  
                  __size_of___fttol 008C                    __size_of___lwdiv 0046  
                  __size_of___lwmod 003C                            ___awtoft 10A9  
                          ___ftpack 067B                  __end_of__stringtab 0712  
                        _ANSELHbits 0189                         _errorMaximo 00CC  
                       _init_timer0 1000                         _init_timer2 1F9D  
                  __size_of_isdigit 0014                     ___lwdiv@divisor 0020  
                   ___lwdiv@counter 0027                            __ptext10 0A0F  
                          __ptext11 0D1D                            __ptext20 10D2  
                          __ptext12 12DD                            __ptext21 1F51  
                          __ptext13 103F                            __ptext30 1F69  
                          __ptext22 1F45                            __ptext14 1F90  
                          __ptext31 1128                            __ptext23 0020  
                          __ptext15 1F83                            __ptext40 1023  
                          __ptext32 1274                            __ptext24 0943  
                          __ptext16 1F76                            __ptext41 1000  
                          __ptext33 1FAB                            __ptext25 1FBE  
                          __ptext17 1FE9                            __ptext42 13E3  
                          __ptext34 1357                            __ptext26 1082  
                          __ptext18 1F5D                            __ptext43 121B  
                          __ptext35 154B                            __ptext27 1199  
                          __ptext19 0E53                            __ptext36 115F  
                          __ptext28 11D5                            __ptext37 094D  
                          __ptext29 1FD2                            __ptext38 10A9  
                          __ptext39 067B                   ??_set_up_Sensores 0020  
         _read_temperatura_interior 1715           _read_temperatura_exterior 0AFB  
                      _tempObjetivo 007C                       __size_of_main 0118  
         ??_get_intensidad_luminosa 0022            __end_of_get_tempObjetivo 115F  
             __size_of_mostrarDatos 007A   __size_of_get_velocidad_ventilador 001E  
 __size_of_get_temperatura_interior 000D           ?_get_velocidad_ventilador 0069  
         ?_get_temperatura_interior 0020   __size_of_get_temperatura_exterior 000D  
         ?_get_temperatura_exterior 0020                           printf@idx 00A9  
                         printf@len 00AB                           printf@val 00AE  
 read_intensidad_lumninosa@lecturaV 00B8                          _INTCONbits 000B  
           __size_of_set_Calefactor 000C                            isdigit@c 0021  
                       ??_init_uart 0020                            intlevel1 0000  
                      _mostrarDatos 12DD                    ___lwmod@dividend 002A  
                     _potenciometro 00C9                           stringcode 070A  
                          printf@ap 00AD                            printf@cp 00AA  
          __size_of_mostrarConsigna 0017                    set_Calefactor@on 0020  
   __end_of_get_intensidad_luminosa 1F90         ??_read_intensidad_lumninosa 00B6  
                   ___lwmod@divisor 0028                     ___lwmod@counter 002D  
                          stringtab 0700                    _set_Refrigerador 1F51  
             _get_lastPotenciometro 1FAB                        ?_get_humedad 0020  
